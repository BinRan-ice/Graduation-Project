(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],[
/* 0 */,
/* 1 */
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, "__esModule", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.createPlugin = createPlugin;exports.createSubpackageApp = createSubpackageApp;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));
var _uniI18n = __webpack_require__(/*! @dcloudio/uni-i18n */ 4);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}

var realAtob;

var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
var b64re = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;

if (typeof atob !== 'function') {
  realAtob = function realAtob(str) {
    str = String(str).replace(/[\t\n\f\r ]+/g, '');
    if (!b64re.test(str)) {throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");}

    // Adding the padding if missing, for semplicity
    str += '=='.slice(2 - (str.length & 3));
    var bitmap;var result = '';var r1;var r2;var i = 0;
    for (; i < str.length;) {
      bitmap = b64.indexOf(str.charAt(i++)) << 18 | b64.indexOf(str.charAt(i++)) << 12 |
      (r1 = b64.indexOf(str.charAt(i++))) << 6 | (r2 = b64.indexOf(str.charAt(i++)));

      result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255) :
      r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255) :
      String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);
    }
    return result;
  };
} else {
  // 注意atob只能在全局对象上调用，例如：`const Base64 = {atob};Base64.atob('xxxx')`是错误的用法
  realAtob = atob;
}

function b64DecodeUnicode(str) {
  return decodeURIComponent(realAtob(str).split('').map(function (c) {
    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
  }).join(''));
}

function getCurrentUserInfo() {
  var token = wx.getStorageSync('uni_id_token') || '';
  var tokenArr = token.split('.');
  if (!token || tokenArr.length !== 3) {
    return {
      uid: null,
      role: [],
      permission: [],
      tokenExpired: 0 };

  }
  var userInfo;
  try {
    userInfo = JSON.parse(b64DecodeUnicode(tokenArr[1]));
  } catch (error) {
    throw new Error('获取当前用户信息出错，详细错误信息为：' + error.message);
  }
  userInfo.tokenExpired = userInfo.exp * 1000;
  delete userInfo.exp;
  delete userInfo.iat;
  return userInfo;
}

function uniIdMixin(Vue) {
  Vue.prototype.uniIDHasRole = function (roleId) {var _getCurrentUserInfo =


    getCurrentUserInfo(),role = _getCurrentUserInfo.role;
    return role.indexOf(roleId) > -1;
  };
  Vue.prototype.uniIDHasPermission = function (permissionId) {var _getCurrentUserInfo2 =


    getCurrentUserInfo(),permission = _getCurrentUserInfo2.permission;
    return this.uniIDHasRole('admin') || permission.indexOf(permissionId) > -1;
  };
  Vue.prototype.uniIDTokenValid = function () {var _getCurrentUserInfo3 =


    getCurrentUserInfo(),tokenExpired = _getCurrentUserInfo3.tokenExpired;
    return tokenExpired > Date.now();
  };
}

var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isFn(fn) {
  return typeof fn === 'function';
}

function isStr(str) {
  return typeof str === 'string';
}

function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function noop() {}

/**
                    * Create a cached version of a pure function.
                    */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
   * Camelize a hyphen-delimited string.
   */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});
});

var HOOKS = [
'invoke',
'success',
'fail',
'complete',
'returnValue'];


var globalInterceptors = {};
var scopedInterceptors = {};

function mergeHook(parentVal, childVal) {
  var res = childVal ?
  parentVal ?
  parentVal.concat(childVal) :
  Array.isArray(childVal) ?
  childVal : [childVal] :
  parentVal;
  return res ?
  dedupeHooks(res) :
  res;
}

function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}

function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}

function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}

function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}

function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}

function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}

function wrapperHook(hook) {
  return function (data) {
    return hook(data) || data;
  };
}

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

function queue(hooks, data) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook));
    } else {
      var res = hook(data);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {} };

      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    } };

}

function wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}

function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}

function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}

function invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}

var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return new Promise(function (resolve, reject) {
      res.then(function (res) {
        if (res[0]) {
          reject(res[0]);
        } else {
          resolve(res[1]);
        }
      });
    });
  } };


var SYNC_API_RE =
/^\$|Window$|WindowStyle$|sendHostEvent|sendNativeEvent|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64|getLocale|setLocale/;

var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection'];

var CALLBACK_API_RE = /^on|^off/;

function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}

function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}

function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).
  catch(function (err) {return [err];});
}

function shouldPromise(name) {
  if (
  isContextApi(name) ||
  isSyncApi(name) ||
  isCallbackApi(name))
  {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(
    function (value) {return promise.resolve(callback()).then(function () {return value;});},
    function (reason) {return promise.resolve(callback()).then(function () {
        throw reason;
      });});

  };
}

function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject })].concat(
      params));
    })));
  };
}

var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;

function checkDeviceWidth() {var _wx$getSystemInfoSync =




  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}

function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }

  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}

function getLocale() {
  // 优先使用 $locale
  var app = getApp({
    allowDefault: true });

  if (app && app.$vm) {
    return app.$vm.$locale;
  }
  return wx.getSystemInfoSync().language || 'zh-Hans';
}

function setLocale(locale) {
  var app = getApp();
  if (!app) {
    return false;
  }
  var oldLocale = app.$vm.$locale;
  if (oldLocale !== locale) {
    app.$vm.$locale = locale;
    onLocaleChangeCallbacks.forEach(function (fn) {return fn({
        locale: locale });});

    return true;
  }
  return false;
}

var onLocaleChangeCallbacks = [];
function onLocaleChange(fn) {
  if (onLocaleChangeCallbacks.indexOf(fn) === -1) {
    onLocaleChangeCallbacks.push(fn);
  }
}

if (typeof global !== 'undefined') {
  global.getLocale = getLocale;
}

var interceptors = {
  promiseInterceptor: promiseInterceptor };


var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  getLocale: getLocale,
  setLocale: setLocale,
  onLocaleChange: onLocaleChange,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors });


function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}

var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  } };


var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(
      function (item, index) {return index < currentIndex ? item !== urls[currentIndex] : true;});

    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false };

  } };


var UUID_KEY = '__DC_STAT_UUID';
var deviceId;
function addUuid(result) {
  deviceId = deviceId || wx.getStorageSync(UUID_KEY);
  if (!deviceId) {
    deviceId = Date.now() + '' + Math.floor(Math.random() * 1e7);
    wx.setStorage({
      key: UUID_KEY,
      data: deviceId });

  }
  result.deviceId = deviceId;
}

function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.windowHeight - safeArea.bottom };

  }
}

var getSystemInfo = {
  returnValue: function returnValue(result) {
    addUuid(result);
    addSafeAreaInsets(result);
  } };


// import navigateTo from 'uni-helpers/navigate-to'

var protocols = {
  redirectTo: redirectTo,
  // navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP
  previewImage: previewImage,
  getSystemInfo: getSystemInfo,
  getSystemInfoSync: getSystemInfo };

var todos = [
'vibrate',
'preloadPage',
'unPreloadPage',
'loadSubPackage'];

var canIUses = [];

var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];

function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}

function processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {// 不支持的参数
          console.warn("The '".concat(methodName, "' method of platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support option '").concat(key, "'"));
        } else if (isStr(keyOption)) {// 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}

function processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {// 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}

function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {// 暂不支持的 api
      return function () {
        console.error("Platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support '".concat(methodName, "'."));
      };
    }
    return function (arg1, arg2) {// 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }

      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);

      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {// 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}

var todoApis = Object.create(null);

var TODOS = [
'onTabBarMidButtonTap',
'subscribePush',
'unsubscribePush',
'onPush',
'offPush',
'share'];


function createTodoApi(name) {
  return function todoApi(_ref)


  {var fail = _ref.fail,complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail method '").concat(name, "' not supported") };

    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}

TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});

var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin'] };


function getProvider(_ref2)




{var service = _ref2.service,success = _ref2.success,fail = _ref2.fail,complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service] };

    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail service not found' };

    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}

var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider });


var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();

function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}

function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}

var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit });


var api = /*#__PURE__*/Object.freeze({
  __proto__: null });


var MPPage = Page;
var MPComponent = Component;

var customizeRE = /:/g;

var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});

function initTriggerEvent(mpInstance) {
  var oldTriggerEvent = mpInstance.triggerEvent;
  mpInstance.triggerEvent = function (event) {for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {args[_key3 - 1] = arguments[_key3];}
    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));
  };
}

function initHook(name, options, isComponent) {
  var oldHook = options[name];
  if (!oldHook) {
    options[name] = function () {
      initTriggerEvent(this);
    };
  } else {
    options[name] = function () {
      initTriggerEvent(this);for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}
      return oldHook.apply(this, args);
    };
  }
}
if (!MPPage.__$wrappered) {
  MPPage.__$wrappered = true;
  Page = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('onLoad', options);
    return MPPage(options);
  };
  Page.after = MPPage.after;

  Component = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('created', options);
    return MPComponent(options);
  };
}

var PAGE_EVENT_HOOKS = [
'onPullDownRefresh',
'onReachBottom',
'onAddToFavorites',
'onShareTimeline',
'onShareAppMessage',
'onPageScroll',
'onResize',
'onTabItemTap'];


function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}

function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }

  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }

  vueOptions = vueOptions.default || vueOptions;

  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super &&
    vueOptions.super.options &&
    Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }

  if (isFn(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});
  }
}

function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}

function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}

function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}

function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;

  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}

function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};

  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"wx-xinguan","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }

  if (!isPlainObject(data)) {
    data = {};
  }

  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });

  return data;
}

var PROP_TYPES = [String, Number, Boolean, Object, Array, null];

function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;

  var vueProps = vueOptions.props;

  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }

  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: '' };

          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: '' };

        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(
    initBehavior({
      properties: initProperties(vueExtends.props, true) }));


  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(
        initBehavior({
          properties: initProperties(vueMixin.props, true) }));


      }
    });
  }
  return behaviors;
}

function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}

function initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: '' };

    // 用于字节跳动小程序模拟抽象节点
    properties.generic = {
      type: Object,
      value: null };

    // scopedSlotsCompiler auto
    properties.scopedSlotsCompiler = {
      type: String,
      value: '' };

    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots });

      } };

  }
  if (Array.isArray(props)) {// ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key) };

    });
  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {// title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }

        opts.type = parsePropType(key, opts.type);

        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key) };

      } else {// content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key) };

      }
    });
  }
  return properties;
}

function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}

  event.stopPropagation = noop;
  event.preventDefault = noop;

  event.target = event.target || {};

  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }

  if (hasOwn(event, 'markerId')) {
    event.detail = typeof event.detail === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }

  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }

  return event;
}

function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];

      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }

      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }

      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}

function processEventExtra(vm, extra, event) {
  var extraObj = {};

  if (Array.isArray(extra) && extra.length) {
    /**
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *'test'
                                              */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {// model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {// $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            if (event.detail && event.detail.__args__) {
              extraObj['$' + index] = event.detail.__args__;
            } else {
              extraObj['$' + index] = [event];
            }
          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }

  return extraObj;
}

function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}

function processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象
  if (isCustom) {// 自定义事件
    isCustomMPEvent = event.currentTarget &&
    event.currentTarget.dataset &&
    event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {// 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return event.detail.__args__ || event.detail;
    }
  }

  var extraObj = processEventExtra(vm, extra, event);

  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {// input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(event.detail.__args__[0]);
        } else {// wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });

  return ret;
}

var ONCE = '~';
var CUSTOM = '^';

function isMatchEventType(eventType, optType) {
  return eventType === optType ||

  optType === 'regionchange' && (

  eventType === 'begin' ||
  eventType === 'end');


}

function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}

function handleEvent(event) {var _this = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;

  var ret = [];

  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];

    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;

    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this.$vm;
          if (handlerCtx.$options.generic) {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx,
            processEventArgs(
            _this.$vm,
            event,
            eventArray[1],
            eventArray[2],
            isCustom,
            methodName));

            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            throw new Error(" _vm.".concat(methodName, " is not a function"));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(
          _this.$vm,
          event,
          eventArray[1],
          eventArray[2],
          isCustom,
          methodName);

          params = Array.isArray(params) ? params : [];
          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          if (/=\s*\S+\.eventParams\s*\|\|\s*\S+\[['"]event-params['"]\]/.test(handler.toString())) {
            // eslint-disable-next-line no-sparse-arrays
            params = params.concat([,,,,,,,,,, event]);
          }
          ret.push(handler.apply(handlerCtx, params));
        }
      });
    }
  });

  if (
  eventType === 'input' &&
  ret.length === 1 &&
  typeof ret[0] !== 'undefined')
  {
    return ret[0];
  }
}

var messages = {};

var locale;

{
  locale = wx.getSystemInfoSync().language;
}

function initI18nMessages() {
  if (!isEnableLocale()) {
    return;
  }
  var localeKeys = Object.keys(__uniConfig.locales);
  if (localeKeys.length) {
    localeKeys.forEach(function (locale) {
      var curMessages = messages[locale];
      var userMessages = __uniConfig.locales[locale];
      if (curMessages) {
        Object.assign(curMessages, userMessages);
      } else {
        messages[locale] = userMessages;
      }
    });
  }
}

initI18nMessages();

var i18n = (0, _uniI18n.initVueI18n)(
locale,
{});

var t = i18n.t;
var i18nMixin = i18n.mixin = {
  beforeCreate: function beforeCreate() {var _this2 = this;
    var unwatch = i18n.i18n.watchLocale(function () {
      _this2.$forceUpdate();
    });
    this.$once('hook:beforeDestroy', function () {
      unwatch();
    });
  },
  methods: {
    $$t: function $$t(key, values) {
      return t(key, values);
    } } };


var setLocale$1 = i18n.setLocale;
var getLocale$1 = i18n.getLocale;

function initAppLocale(Vue, appVm, locale) {
  var state = Vue.observable({
    locale: locale || i18n.getLocale() });

  var localeWatchers = [];
  appVm.$watchLocale = function (fn) {
    localeWatchers.push(fn);
  };
  Object.defineProperty(appVm, '$locale', {
    get: function get() {
      return state.locale;
    },
    set: function set(v) {
      state.locale = v;
      localeWatchers.forEach(function (watch) {return watch(v);});
    } });

}

function isEnableLocale() {
  return typeof __uniConfig !== 'undefined' && __uniConfig.locales && !!Object.keys(__uniConfig.locales).length;
}

// export function initI18n() {
//   const localeKeys = Object.keys(__uniConfig.locales || {})
//   if (localeKeys.length) {
//     localeKeys.forEach((locale) =>
//       i18n.add(locale, __uniConfig.locales[locale])
//     )
//   }
// }

var eventChannels = {};

var eventChannelStack = [];

function getEventChannel(id) {
  if (id) {
    var eventChannel = eventChannels[id];
    delete eventChannels[id];
    return eventChannel;
  }
  return eventChannelStack.shift();
}

var hooks = [
'onShow',
'onHide',
'onError',
'onPageNotFound',
'onThemeChange',
'onUnhandledRejection'];


function initEventChannel() {
  _vue.default.prototype.getOpenerEventChannel = function () {
    // 微信小程序使用自身getOpenerEventChannel
    {
      return this.$scope.getOpenerEventChannel();
    }
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
}

function initScopedSlotsParams() {
  var center = {};
  var parents = {};

  _vue.default.prototype.$hasScopedSlotsParams = function (vueId) {
    var has = center[vueId];
    if (!has) {
      parents[vueId] = this;
      this.$on('hook:destroyed', function () {
        delete parents[vueId];
      });
    }
    return has;
  };

  _vue.default.prototype.$getScopedSlotsParams = function (vueId, name, key) {
    var data = center[vueId];
    if (data) {
      var object = data[name] || {};
      return key ? object[key] : object;
    } else {
      parents[vueId] = this;
      this.$on('hook:destroyed', function () {
        delete parents[vueId];
      });
    }
  };

  _vue.default.prototype.$setScopedSlotsParams = function (name, value) {
    var vueIds = this.$options.propsData.vueId;
    if (vueIds) {
      var vueId = vueIds.split(',')[0];
      var object = center[vueId] = center[vueId] || {};
      object[name] = value;
      if (parents[vueId]) {
        parents[vueId].$forceUpdate();
      }
    }
  };

  _vue.default.mixin({
    destroyed: function destroyed() {
      var propsData = this.$options.propsData;
      var vueId = propsData && propsData.vueId;
      if (vueId) {
        delete center[vueId];
        delete parents[vueId];
      }
    } });

}

function parseBaseApp(vm, _ref3)


{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;
  initEventChannel();
  {
    initScopedSlotsParams();
  }
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }
  uniIdMixin(_vue.default);

  _vue.default.prototype.mpHost = "mp-weixin";

  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }

      this.mpType = this.$options.mpType;

      this.$mp = _defineProperty({
        data: {} },
      this.mpType, this.$options.mpInstance);


      this.$scope = this.$options.mpInstance;

      delete this.$options.mpType;
      delete this.$options.mpInstance;
      if (this.mpType === 'page' && typeof getApp === 'function') {// hack vue-i18n
        var app = getApp();
        if (app.$vm && app.$vm.$i18n) {
          this._i18n = app.$vm.$i18n;
        }
      }
      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    } });


  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (wx.canIUse && !wx.canIUse('nextTick')) {// 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }

      this.$vm = vm;

      this.$vm.$mp = {
        app: this };


      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;

      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);

      this.$vm.__call_hook('onLaunch', args);
    } };


  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }

  initAppLocale(_vue.default, vm, wx.getSystemInfoSync().language || 'zh-Hans');

  initHooks(appOptions, hooks);

  return appOptions;
}

var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];

function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}

function initBehavior(options) {
  return Behavior(options);
}

function isPage() {
  return !!this.route;
}

function initRelation(detail) {
  this.triggerEvent('__l', detail);
}

function selectAllComponents(mpInstance, selector, $refs) {
  var components = mpInstance.selectAllComponents(selector);
  components.forEach(function (component) {
    var ref = component.dataset.ref;
    $refs[ref] = component.$vm || component;
    {
      if (component.dataset.vueGeneric === 'scoped') {
        component.selectAllComponents('.scoped-ref').forEach(function (scopedComponent) {
          selectAllComponents(scopedComponent, selector, $refs);
        });
      }
    }
  });
}

function initRefs(vm) {
  var mpInstance = vm.$scope;
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      selectAllComponents(mpInstance, '.vue-ref', $refs);
      // TODO 暂不考虑 for 中的 scoped
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || component);
      });
      return $refs;
    } });

}

function handleLink(event) {var _ref4 =



  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;

  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }

  if (!parentVm) {
    parentVm = this.$vm;
  }

  vueOptions.parent = parentVm;
}

function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs });

}

function createApp(vm) {
  App(parseApp(vm));
  return vm;
}

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {return '%' + c.charCodeAt(0).toString(16);};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {return encodeURIComponent(str).
  replace(encodeReserveRE, encodeReserveReplacer).
  replace(commaRE, ',');};

function stringifyQuery(obj) {var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return '';
    }

    if (val === null) {
      return encodeStr(key);
    }

    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }

    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {return x.length > 0;}).join('&') : null;
  return res ? "?".concat(res) : '';
}

function parseBaseComponent(vueComponentOptions)


{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =
  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];

  var options = _objectSpread({
    multipleSlots: true,
    addGlobalClass: true },
  vueOptions.options || {});


  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }

  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;

        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties };


        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options });


        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      } },

    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      } },

    methods: {
      __l: handleLink,
      __e: handleEvent } };


  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }

  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }

  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}

function parseComponent(vueComponentOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

var hooks$1 = [
'onShow',
'onHide',
'onUnload'];


hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);

function parseBasePage(vuePageOptions, _ref6)


{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;
  var pageOptions = parseComponent(vuePageOptions);

  initHooks(pageOptions.methods, hooks$1, vuePageOptions);

  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery) };

    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };

  return pageOptions;
}

function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}

function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}

function createSubpackageApp(vm) {
  var appOptions = parseApp(vm);
  var app = getApp({
    allowDefault: true });

  vm.$scope = app;
  var globalData = app.globalData;
  if (globalData) {
    Object.keys(appOptions.globalData).forEach(function (name) {
      if (!hasOwn(globalData, name)) {
        globalData[name] = appOptions.globalData[name];
      }
    });
  }
  Object.keys(appOptions).forEach(function (name) {
    if (!hasOwn(app, name)) {
      app[name] = appOptions[name];
    }
  });
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {args[_key6] = arguments[_key6];}
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}

function createPlugin(vm) {
  var appOptions = parseApp(vm);
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}
      appOptions.onShow.apply(vm, args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {args[_key8] = arguments[_key8];}
      appOptions.onHide.apply(vm, args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    appOptions.onLaunch.call(vm, args);
  }
  return vm;
}

todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});

canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :
  canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});

var uni = {};

if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {
        return;
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    } });

} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });

  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
  }

  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });

  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });

  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}

wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;
wx.createSubpackageApp = createSubpackageApp;
wx.createPlugin = createPlugin;

var uni$1 = uni;var _default =

uni$1;exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))

/***/ }),
/* 2 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 3 */
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i, i++)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu' || vm.mpHost === 'mp-kuaishou'){//百度、快手 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' &&
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    // NOTE 此处将 != 修改为 !==。涉及地方太多恐怕测试不到，如果出现数据对比问题，将其修改回来。
                    if (currentValue !== pre[key]) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"NODE_ENV":"development","VUE_APP_NAME":"wx-xinguan","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"wx-xinguan","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"wx-xinguan","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"wx-xinguan","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }

  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = typeof getApp === 'function' && getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      this.$scope['triggerEvent'](event, {
        __args__: toArray(arguments, 1)
      });
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value)
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value)
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onInit',
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))

/***/ }),
/* 4 */
/*!*************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-i18n/dist/uni-i18n.es.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, global) {Object.defineProperty(exports, "__esModule", { value: true });exports.compileI18nJsonStr = compileI18nJsonStr;exports.hasI18nJson = hasI18nJson;exports.initVueI18n = initVueI18n;exports.isI18nStr = isI18nStr;exports.normalizeLocale = normalizeLocale;exports.parseI18nJson = parseI18nJson;exports.resolveLocale = resolveLocale;exports.isString = exports.LOCALE_ZH_HANT = exports.LOCALE_ZH_HANS = exports.LOCALE_FR = exports.LOCALE_ES = exports.LOCALE_EN = exports.I18n = exports.Formatter = void 0;function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var isArray = Array.isArray;
var isObject = function isObject(val) {return val !== null && typeof val === 'object';};
var defaultDelimiters = ['{', '}'];var
BaseFormatter = /*#__PURE__*/function () {
  function BaseFormatter() {_classCallCheck(this, BaseFormatter);
    this._caches = Object.create(null);
  }_createClass(BaseFormatter, [{ key: "interpolate", value: function interpolate(
    message, values) {var delimiters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultDelimiters;
      if (!values) {
        return [message];
      }
      var tokens = this._caches[message];
      if (!tokens) {
        tokens = parse(message, delimiters);
        this._caches[message] = tokens;
      }
      return compile(tokens, values);
    } }]);return BaseFormatter;}();exports.Formatter = BaseFormatter;

var RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
var RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;
function parse(format, _ref) {var _ref2 = _slicedToArray(_ref, 2),startDelimiter = _ref2[0],endDelimiter = _ref2[1];
  var tokens = [];
  var position = 0;
  var text = '';
  while (position < format.length) {
    var char = format[position++];
    if (char === startDelimiter) {
      if (text) {
        tokens.push({ type: 'text', value: text });
      }
      text = '';
      var sub = '';
      char = format[position++];
      while (char !== undefined && char !== endDelimiter) {
        sub += char;
        char = format[position++];
      }
      var isClosed = char === endDelimiter;
      var type = RE_TOKEN_LIST_VALUE.test(sub) ?
      'list' :
      isClosed && RE_TOKEN_NAMED_VALUE.test(sub) ?
      'named' :
      'unknown';
      tokens.push({ value: sub, type: type });
    }
    //  else if (char === '%') {
    //   // when found rails i18n syntax, skip text capture
    //   if (format[position] !== '{') {
    //     text += char
    //   }
    // }
    else {
        text += char;
      }
  }
  text && tokens.push({ type: 'text', value: text });
  return tokens;
}
function compile(tokens, values) {
  var compiled = [];
  var index = 0;
  var mode = isArray(values) ?
  'list' :
  isObject(values) ?
  'named' :
  'unknown';
  if (mode === 'unknown') {
    return compiled;
  }
  while (index < tokens.length) {
    var token = tokens[index];
    switch (token.type) {
      case 'text':
        compiled.push(token.value);
        break;
      case 'list':
        compiled.push(values[parseInt(token.value, 10)]);
        break;
      case 'named':
        if (mode === 'named') {
          compiled.push(values[token.value]);
        } else
        {
          if (true) {
            console.warn("Type of token '".concat(token.type, "' and format of value '").concat(mode, "' don't match!"));
          }
        }
        break;
      case 'unknown':
        if (true) {
          console.warn("Detect 'unknown' type of token!");
        }
        break;}

    index++;
  }
  return compiled;
}

var LOCALE_ZH_HANS = 'zh-Hans';exports.LOCALE_ZH_HANS = LOCALE_ZH_HANS;
var LOCALE_ZH_HANT = 'zh-Hant';exports.LOCALE_ZH_HANT = LOCALE_ZH_HANT;
var LOCALE_EN = 'en';exports.LOCALE_EN = LOCALE_EN;
var LOCALE_FR = 'fr';exports.LOCALE_FR = LOCALE_FR;
var LOCALE_ES = 'es';exports.LOCALE_ES = LOCALE_ES;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var hasOwn = function hasOwn(val, key) {return hasOwnProperty.call(val, key);};
var defaultFormatter = new BaseFormatter();
function include(str, parts) {
  return !!parts.find(function (part) {return str.indexOf(part) !== -1;});
}
function startsWith(str, parts) {
  return parts.find(function (part) {return str.indexOf(part) === 0;});
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var lang = startsWith(locale, [LOCALE_EN, LOCALE_FR, LOCALE_ES]);
  if (lang) {
    return lang;
  }
}var
I18n = /*#__PURE__*/function () {
  function I18n(_ref3) {var locale = _ref3.locale,fallbackLocale = _ref3.fallbackLocale,messages = _ref3.messages,watcher = _ref3.watcher,formater = _ref3.formater;_classCallCheck(this, I18n);
    this.locale = LOCALE_EN;
    this.fallbackLocale = LOCALE_EN;
    this.message = {};
    this.messages = {};
    this.watchers = [];
    if (fallbackLocale) {
      this.fallbackLocale = fallbackLocale;
    }
    this.formater = formater || defaultFormatter;
    this.messages = messages || {};
    this.setLocale(locale || LOCALE_EN);
    if (watcher) {
      this.watchLocale(watcher);
    }
  }_createClass(I18n, [{ key: "setLocale", value: function setLocale(
    locale) {var _this = this;
      var oldLocale = this.locale;
      this.locale = normalizeLocale(locale, this.messages) || this.fallbackLocale;
      if (!this.messages[this.locale]) {
        // 可能初始化时不存在
        this.messages[this.locale] = {};
      }
      this.message = this.messages[this.locale];
      // 仅发生变化时，通知
      if (oldLocale !== this.locale) {
        this.watchers.forEach(function (watcher) {
          watcher(_this.locale, oldLocale);
        });
      }
    } }, { key: "getLocale", value: function getLocale()
    {
      return this.locale;
    } }, { key: "watchLocale", value: function watchLocale(
    fn) {var _this2 = this;
      var index = this.watchers.push(fn) - 1;
      return function () {
        _this2.watchers.splice(index, 1);
      };
    } }, { key: "add", value: function add(
    locale, message) {var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var curMessages = this.messages[locale];
      if (curMessages) {
        if (override) {
          Object.assign(curMessages, message);
        } else
        {
          Object.keys(message).forEach(function (key) {
            if (!hasOwn(curMessages, key)) {
              curMessages[key] = message[key];
            }
          });
        }
      } else
      {
        this.messages[locale] = message;
      }
    } }, { key: "f", value: function f(
    message, values, delimiters) {
      return this.formater.interpolate(message, values, delimiters).join('');
    } }, { key: "t", value: function t(
    key, locale, values) {
      var message = this.message;
      if (typeof locale === 'string') {
        locale = normalizeLocale(locale, this.messages);
        locale && (message = this.messages[locale]);
      } else
      {
        values = locale;
      }
      if (!hasOwn(message, key)) {
        console.warn("Cannot translate the value of keypath ".concat(key, ". Use the value of keypath as default."));
        return key;
      }
      return this.formater.interpolate(message[key], values).join('');
    } }]);return I18n;}();exports.I18n = I18n;


function watchAppLocale(appVm, i18n) {
  // 需要保证 watch 的触发在组件渲染之前
  if (appVm.$watchLocale) {
    // vue2
    appVm.$watchLocale(function (newLocale) {
      i18n.setLocale(newLocale);
    });
  } else
  {
    appVm.$watch(function () {return appVm.$locale;}, function (newLocale) {
      i18n.setLocale(newLocale);
    });
  }
}
function getDefaultLocale() {
  if (typeof uni !== 'undefined' && uni.getLocale) {
    return uni.getLocale();
  }
  // 小程序平台，uni 和 uni-i18n 互相引用，导致访问不到 uni，故在 global 上挂了 getLocale
  if (typeof global !== 'undefined' && global.getLocale) {
    return global.getLocale();
  }
  return LOCALE_EN;
}
function initVueI18n(locale) {var messages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var fallbackLocale = arguments.length > 2 ? arguments[2] : undefined;var watcher = arguments.length > 3 ? arguments[3] : undefined;
  // 兼容旧版本入参
  if (typeof locale !== 'string') {var _ref4 =
    [
    messages,
    locale];locale = _ref4[0];messages = _ref4[1];

  }
  if (typeof locale !== 'string') {
    // 因为小程序平台，uni-i18n 和 uni 互相引用，导致此时访问 uni 时，为 undefined
    locale = getDefaultLocale();
  }
  if (typeof fallbackLocale !== 'string') {
    fallbackLocale =
    typeof __uniConfig !== 'undefined' && __uniConfig.fallbackLocale ||
    LOCALE_EN;
  }
  var i18n = new I18n({
    locale: locale,
    fallbackLocale: fallbackLocale,
    messages: messages,
    watcher: watcher });

  var _t = function t(key, values) {
    if (typeof getApp !== 'function') {
      // app view
      /* eslint-disable no-func-assign */
      _t = function t(key, values) {
        return i18n.t(key, values);
      };
    } else
    {
      var isWatchedAppLocale = false;
      _t = function t(key, values) {
        var appVm = getApp().$vm;
        // 可能$vm还不存在，比如在支付宝小程序中，组件定义较早，在props的default里使用了t()函数（如uni-goods-nav），此时app还未初始化
        // options: {
        // 	type: Array,
        // 	default () {
        // 		return [{
        // 			icon: 'shop',
        // 			text: t("uni-goods-nav.options.shop"),
        // 		}, {
        // 			icon: 'cart',
        // 			text: t("uni-goods-nav.options.cart")
        // 		}]
        // 	}
        // },
        if (appVm) {
          // 触发响应式
          appVm.$locale;
          if (!isWatchedAppLocale) {
            isWatchedAppLocale = true;
            watchAppLocale(appVm, i18n);
          }
        }
        return i18n.t(key, values);
      };
    }
    return _t(key, values);
  };
  return {
    i18n: i18n,
    f: function f(message, values, delimiters) {
      return i18n.f(message, values, delimiters);
    },
    t: function t(key, values) {
      return _t(key, values);
    },
    add: function add(locale, message) {var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      return i18n.add(locale, message, override);
    },
    watch: function watch(fn) {
      return i18n.watchLocale(fn);
    },
    getLocale: function getLocale() {
      return i18n.getLocale();
    },
    setLocale: function setLocale(newLocale) {
      return i18n.setLocale(newLocale);
    } };

}

var isString = function isString(val) {return typeof val === 'string';};exports.isString = isString;
var formater;
function hasI18nJson(jsonObj, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  return walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        return true;
      }
    } else
    {
      return hasI18nJson(value, delimiters);
    }
  });
}
function parseI18nJson(jsonObj, values, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        jsonObj[key] = compileStr(value, values, delimiters);
      }
    } else
    {
      parseI18nJson(value, values, delimiters);
    }
  });
  return jsonObj;
}
function compileI18nJsonStr(jsonStr, _ref5) {var locale = _ref5.locale,locales = _ref5.locales,delimiters = _ref5.delimiters;
  if (!isI18nStr(jsonStr, delimiters)) {
    return jsonStr;
  }
  if (!formater) {
    formater = new BaseFormatter();
  }
  var localeValues = [];
  Object.keys(locales).forEach(function (name) {
    if (name !== locale) {
      localeValues.push({
        locale: name,
        values: locales[name] });

    }
  });
  localeValues.unshift({ locale: locale, values: locales[locale] });
  try {
    return JSON.stringify(compileJsonObj(JSON.parse(jsonStr), localeValues, delimiters), null, 2);
  }
  catch (e) {}
  return jsonStr;
}
function isI18nStr(value, delimiters) {
  return value.indexOf(delimiters[0]) > -1;
}
function compileStr(value, values, delimiters) {
  return formater.interpolate(value, values, delimiters).join('');
}
function compileValue(jsonObj, key, localeValues, delimiters) {
  var value = jsonObj[key];
  if (isString(value)) {
    // 存在国际化
    if (isI18nStr(value, delimiters)) {
      jsonObj[key] = compileStr(value, localeValues[0].values, delimiters);
      if (localeValues.length > 1) {
        // 格式化国际化语言
        var valueLocales = jsonObj[key + 'Locales'] = {};
        localeValues.forEach(function (localValue) {
          valueLocales[localValue.locale] = compileStr(value, localValue.values, delimiters);
        });
      }
    }
  } else
  {
    compileJsonObj(value, localeValues, delimiters);
  }
}
function compileJsonObj(jsonObj, localeValues, delimiters) {
  walkJsonObj(jsonObj, function (jsonObj, key) {
    compileValue(jsonObj, key, localeValues, delimiters);
  });
  return jsonObj;
}
function walkJsonObj(jsonObj, walk) {
  if (isArray(jsonObj)) {
    for (var i = 0; i < jsonObj.length; i++) {
      if (walk(jsonObj, i)) {
        return true;
      }
    }
  } else
  if (isObject(jsonObj)) {
    for (var key in jsonObj) {
      if (walk(jsonObj, key)) {
        return true;
      }
    }
  }
  return false;
}

function resolveLocale(locales) {
  return function (locale) {
    if (!locale) {
      return locale;
    }
    locale = normalizeLocale(locale) || locale;
    return resolveLocaleChain(locale).find(function (locale) {return locales.indexOf(locale) > -1;});
  };
}
function resolveLocaleChain(locale) {
  var chain = [];
  var tokens = locale.split('-');
  while (tokens.length) {
    chain.push(tokens.join('-'));
    tokens.pop();
  }
  return chain;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"], __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))

/***/ }),
/* 5 */
/*!*************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/pages.json ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ 19);

/***/ }),
/* 19 */
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() {
  return this || (typeof self === "object" && self);
})() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(/*! ./runtime */ 20);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),
/* 20 */
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() {
    return this || (typeof self === "object" && self);
  })() || Function("return this")()
);


/***/ }),
/* 21 */
/*!********************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/timeday.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.timeDay = void 0;function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;} //计算最晚时间
var moment = __webpack_require__(/*! moment */ 22);
moment.locale('zh-cn');

var timeDay = function timeDay(arrtimes) {
  var dayarr = arrtimes.map(function (item) {
    return new Date(item).getTime();
  });
  var iMin = Math.max.apply(Math, _toConsumableArray(dayarr));
  var day = moment(iMin).format('YYYY-MM-DD HH:mm:ss');
  return day;
};exports.timeDay = timeDay;

/***/ }),
/* 22 */
/*!***********************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/moment.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js
//! version : 2.29.3
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
})(this, function () {'use strict';

  var hookCallback;

  function hooks() {
    return hookCallback.apply(null, arguments);
  }

  // This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback) {
    hookCallback = callback;
  }

  function isArray(input) {
    return (
      input instanceof Array ||
      Object.prototype.toString.call(input) === '[object Array]');

  }

  function isObject(input) {
    // IE8 will treat undefined and null as object if it wasn't for
    // input != null
    return (
      input != null &&
      Object.prototype.toString.call(input) === '[object Object]');

  }

  function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
  }

  function isObjectEmpty(obj) {
    if (Object.getOwnPropertyNames) {
      return Object.getOwnPropertyNames(obj).length === 0;
    } else {
      var k;
      for (k in obj) {
        if (hasOwnProp(obj, k)) {
          return false;
        }
      }
      return true;
    }
  }

  function isUndefined(input) {
    return input === void 0;
  }

  function isNumber(input) {
    return (
      typeof input === 'number' ||
      Object.prototype.toString.call(input) === '[object Number]');

  }

  function isDate(input) {
    return (
      input instanceof Date ||
      Object.prototype.toString.call(input) === '[object Date]');

  }

  function map(arr, fn) {
    var res = [],
    i,
    arrLen = arr.length;
    for (i = 0; i < arrLen; ++i) {
      res.push(fn(arr[i], i));
    }
    return res;
  }

  function extend(a, b) {
    for (var i in b) {
      if (hasOwnProp(b, i)) {
        a[i] = b[i];
      }
    }

    if (hasOwnProp(b, 'toString')) {
      a.toString = b.toString;
    }

    if (hasOwnProp(b, 'valueOf')) {
      a.valueOf = b.valueOf;
    }

    return a;
  }

  function createUTC(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
  }

  function defaultParsingFlags() {
    // We need to deep clone this object.
    return {
      empty: false,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: false,
      invalidEra: null,
      invalidMonth: null,
      invalidFormat: false,
      userInvalidated: false,
      iso: false,
      parsedDateParts: [],
      era: null,
      meridiem: null,
      rfc2822: false,
      weekdayMismatch: false };

  }

  function getParsingFlags(m) {
    if (m._pf == null) {
      m._pf = defaultParsingFlags();
    }
    return m._pf;
  }

  var some;
  if (Array.prototype.some) {
    some = Array.prototype.some;
  } else {
    some = function some(fun) {
      var t = Object(this),
      len = t.length >>> 0,
      i;

      for (i = 0; i < len; i++) {
        if (i in t && fun.call(this, t[i], i, t)) {
          return true;
        }
      }

      return false;
    };
  }

  function isValid(m) {
    if (m._isValid == null) {
      var flags = getParsingFlags(m),
      parsedParts = some.call(flags.parsedDateParts, function (i) {
        return i != null;
      }),
      isNowValid =
      !isNaN(m._d.getTime()) &&
      flags.overflow < 0 &&
      !flags.empty &&
      !flags.invalidEra &&
      !flags.invalidMonth &&
      !flags.invalidWeekday &&
      !flags.weekdayMismatch &&
      !flags.nullInput &&
      !flags.invalidFormat &&
      !flags.userInvalidated && (
      !flags.meridiem || flags.meridiem && parsedParts);

      if (m._strict) {
        isNowValid =
        isNowValid &&
        flags.charsLeftOver === 0 &&
        flags.unusedTokens.length === 0 &&
        flags.bigHour === undefined;
      }

      if (Object.isFrozen == null || !Object.isFrozen(m)) {
        m._isValid = isNowValid;
      } else {
        return isNowValid;
      }
    }
    return m._isValid;
  }

  function createInvalid(flags) {
    var m = createUTC(NaN);
    if (flags != null) {
      extend(getParsingFlags(m), flags);
    } else {
      getParsingFlags(m).userInvalidated = true;
    }

    return m;
  }

  // Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties = hooks.momentProperties = [],
  updateInProgress = false;

  function copyConfig(to, from) {
    var i,
    prop,
    val,
    momentPropertiesLen = momentProperties.length;

    if (!isUndefined(from._isAMomentObject)) {
      to._isAMomentObject = from._isAMomentObject;
    }
    if (!isUndefined(from._i)) {
      to._i = from._i;
    }
    if (!isUndefined(from._f)) {
      to._f = from._f;
    }
    if (!isUndefined(from._l)) {
      to._l = from._l;
    }
    if (!isUndefined(from._strict)) {
      to._strict = from._strict;
    }
    if (!isUndefined(from._tzm)) {
      to._tzm = from._tzm;
    }
    if (!isUndefined(from._isUTC)) {
      to._isUTC = from._isUTC;
    }
    if (!isUndefined(from._offset)) {
      to._offset = from._offset;
    }
    if (!isUndefined(from._pf)) {
      to._pf = getParsingFlags(from);
    }
    if (!isUndefined(from._locale)) {
      to._locale = from._locale;
    }

    if (momentPropertiesLen > 0) {
      for (i = 0; i < momentPropertiesLen; i++) {
        prop = momentProperties[i];
        val = from[prop];
        if (!isUndefined(val)) {
          to[prop] = val;
        }
      }
    }

    return to;
  }

  // Moment prototype object
  function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    if (!this.isValid()) {
      this._d = new Date(NaN);
    }
    // Prevent infinite loop in case updateOffset creates new moment
    // objects.
    if (updateInProgress === false) {
      updateInProgress = true;
      hooks.updateOffset(this);
      updateInProgress = false;
    }
  }

  function isMoment(obj) {
    return (
      obj instanceof Moment || obj != null && obj._isAMomentObject != null);

  }

  function warn(msg) {
    if (
    hooks.suppressDeprecationWarnings === false &&
    typeof console !== 'undefined' &&
    console.warn)
    {
      console.warn('Deprecation warning: ' + msg);
    }
  }

  function deprecate(msg, fn) {
    var firstTime = true;

    return extend(function () {
      if (hooks.deprecationHandler != null) {
        hooks.deprecationHandler(null, msg);
      }
      if (firstTime) {
        var args = [],
        arg,
        i,
        key,
        argLen = arguments.length;
        for (i = 0; i < argLen; i++) {
          arg = '';
          if (typeof arguments[i] === 'object') {
            arg += '\n[' + i + '] ';
            for (key in arguments[0]) {
              if (hasOwnProp(arguments[0], key)) {
                arg += key + ': ' + arguments[0][key] + ', ';
              }
            }
            arg = arg.slice(0, -2); // Remove trailing comma and space
          } else {
            arg = arguments[i];
          }
          args.push(arg);
        }
        warn(
        msg +
        '\nArguments: ' +
        Array.prototype.slice.call(args).join('') +
        '\n' +
        new Error().stack);

        firstTime = false;
      }
      return fn.apply(this, arguments);
    }, fn);
  }

  var deprecations = {};

  function deprecateSimple(name, msg) {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
      warn(msg);
      deprecations[name] = true;
    }
  }

  hooks.suppressDeprecationWarnings = false;
  hooks.deprecationHandler = null;

  function isFunction(input) {
    return (
      typeof Function !== 'undefined' && input instanceof Function ||
      Object.prototype.toString.call(input) === '[object Function]');

  }

  function set(config) {
    var prop, i;
    for (i in config) {
      if (hasOwnProp(config, i)) {
        prop = config[i];
        if (isFunction(prop)) {
          this[i] = prop;
        } else {
          this['_' + i] = prop;
        }
      }
    }
    this._config = config;
    // Lenient ordinal parsing accepts just a number in addition to
    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
    // TODO: Remove "ordinalParse" fallback in next major release.
    this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
    '|' +
    /\d{1,2}/.source);

  }

  function mergeConfigs(parentConfig, childConfig) {
    var res = extend({}, parentConfig),
    prop;
    for (prop in childConfig) {
      if (hasOwnProp(childConfig, prop)) {
        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
          res[prop] = {};
          extend(res[prop], parentConfig[prop]);
          extend(res[prop], childConfig[prop]);
        } else if (childConfig[prop] != null) {
          res[prop] = childConfig[prop];
        } else {
          delete res[prop];
        }
      }
    }
    for (prop in parentConfig) {
      if (
      hasOwnProp(parentConfig, prop) &&
      !hasOwnProp(childConfig, prop) &&
      isObject(parentConfig[prop]))
      {
        // make sure changes to properties don't modify parent config
        res[prop] = extend({}, res[prop]);
      }
    }
    return res;
  }

  function Locale(config) {
    if (config != null) {
      this.set(config);
    }
  }

  var keys;

  if (Object.keys) {
    keys = Object.keys;
  } else {
    keys = function keys(obj) {
      var i,
      res = [];
      for (i in obj) {
        if (hasOwnProp(obj, i)) {
          res.push(i);
        }
      }
      return res;
    };
  }

  var defaultCalendar = {
    sameDay: '[Today at] LT',
    nextDay: '[Tomorrow at] LT',
    nextWeek: 'dddd [at] LT',
    lastDay: '[Yesterday at] LT',
    lastWeek: '[Last] dddd [at] LT',
    sameElse: 'L' };


  function calendar(key, mom, now) {
    var output = this._calendar[key] || this._calendar['sameElse'];
    return isFunction(output) ? output.call(mom, now) : output;
  }

  function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
    zerosToFill = targetLength - absNumber.length,
    sign = number >= 0;
    return (
      (sign ? forceSign ? '+' : '' : '-') +
      Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
      absNumber);

  }

  var formattingTokens =
  /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
  localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
  formatFunctions = {},
  formatTokenFunctions = {};

  // token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
      func = function func() {
        return this[callback]();
      };
    }
    if (token) {
      formatTokenFunctions[token] = func;
    }
    if (padded) {
      formatTokenFunctions[padded[0]] = function () {
        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
      };
    }
    if (ordinal) {
      formatTokenFunctions[ordinal] = function () {
        return this.localeData().ordinal(
        func.apply(this, arguments),
        token);

      };
    }
  }

  function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
      return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
  }

  function makeFormatFunction(format) {
    var array = format.match(formattingTokens),
    i,
    length;

    for (i = 0, length = array.length; i < length; i++) {
      if (formatTokenFunctions[array[i]]) {
        array[i] = formatTokenFunctions[array[i]];
      } else {
        array[i] = removeFormattingTokens(array[i]);
      }
    }

    return function (mom) {
      var output = '',
      i;
      for (i = 0; i < length; i++) {
        output += isFunction(array[i]) ?
        array[i].call(mom, format) :
        array[i];
      }
      return output;
    };
  }

  // format date using native date object
  function formatMoment(m, format) {
    if (!m.isValid()) {
      return m.localeData().invalidDate();
    }

    format = expandFormat(format, m.localeData());
    formatFunctions[format] =
    formatFunctions[format] || makeFormatFunction(format);

    return formatFunctions[format](m);
  }

  function expandFormat(format, locale) {
    var i = 5;

    function replaceLongDateFormatTokens(input) {
      return locale.longDateFormat(input) || input;
    }

    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
      format = format.replace(
      localFormattingTokens,
      replaceLongDateFormatTokens);

      localFormattingTokens.lastIndex = 0;
      i -= 1;
    }

    return format;
  }

  var defaultLongDateFormat = {
    LTS: 'h:mm:ss A',
    LT: 'h:mm A',
    L: 'MM/DD/YYYY',
    LL: 'MMMM D, YYYY',
    LLL: 'MMMM D, YYYY h:mm A',
    LLLL: 'dddd, MMMM D, YYYY h:mm A' };


  function longDateFormat(key) {
    var format = this._longDateFormat[key],
    formatUpper = this._longDateFormat[key.toUpperCase()];

    if (format || !formatUpper) {
      return format;
    }

    this._longDateFormat[key] = formatUpper.
    match(formattingTokens).
    map(function (tok) {
      if (
      tok === 'MMMM' ||
      tok === 'MM' ||
      tok === 'DD' ||
      tok === 'dddd')
      {
        return tok.slice(1);
      }
      return tok;
    }).
    join('');

    return this._longDateFormat[key];
  }

  var defaultInvalidDate = 'Invalid date';

  function invalidDate() {
    return this._invalidDate;
  }

  var defaultOrdinal = '%d',
  defaultDayOfMonthOrdinalParse = /\d{1,2}/;

  function ordinal(number) {
    return this._ordinal.replace('%d', number);
  }

  var defaultRelativeTime = {
    future: 'in %s',
    past: '%s ago',
    s: 'a few seconds',
    ss: '%d seconds',
    m: 'a minute',
    mm: '%d minutes',
    h: 'an hour',
    hh: '%d hours',
    d: 'a day',
    dd: '%d days',
    w: 'a week',
    ww: '%d weeks',
    M: 'a month',
    MM: '%d months',
    y: 'a year',
    yy: '%d years' };


  function relativeTime(number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return isFunction(output) ?
    output(number, withoutSuffix, string, isFuture) :
    output.replace(/%d/i, number);
  }

  function pastFuture(diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
  }

  var aliases = {};

  function addUnitAlias(unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
  }

  function normalizeUnits(units) {
    return typeof units === 'string' ?
    aliases[units] || aliases[units.toLowerCase()] :
    undefined;
  }

  function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
    normalizedProp,
    prop;

    for (prop in inputObject) {
      if (hasOwnProp(inputObject, prop)) {
        normalizedProp = normalizeUnits(prop);
        if (normalizedProp) {
          normalizedInput[normalizedProp] = inputObject[prop];
        }
      }
    }

    return normalizedInput;
  }

  var priorities = {};

  function addUnitPriority(unit, priority) {
    priorities[unit] = priority;
  }

  function getPrioritizedUnits(unitsObj) {
    var units = [],
    u;
    for (u in unitsObj) {
      if (hasOwnProp(unitsObj, u)) {
        units.push({ unit: u, priority: priorities[u] });
      }
    }
    units.sort(function (a, b) {
      return a.priority - b.priority;
    });
    return units;
  }

  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
  }

  function absFloor(number) {
    if (number < 0) {
      // -0 -> 0
      return Math.ceil(number) || 0;
    } else {
      return Math.floor(number);
    }
  }

  function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
    value = 0;

    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
      value = absFloor(coercedNumber);
    }

    return value;
  }

  function makeGetSet(unit, keepTime) {
    return function (value) {
      if (value != null) {
        set$1(this, unit, value);
        hooks.updateOffset(this, keepTime);
        return this;
      } else {
        return get(this, unit);
      }
    };
  }

  function get(mom, unit) {
    return mom.isValid() ?
    mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() :
    NaN;
  }

  function set$1(mom, unit, value) {
    if (mom.isValid() && !isNaN(value)) {
      if (
      unit === 'FullYear' &&
      isLeapYear(mom.year()) &&
      mom.month() === 1 &&
      mom.date() === 29)
      {
        value = toInt(value);
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
        value,
        mom.month(),
        daysInMonth(value, mom.month()));

      } else {
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
      }
    }
  }

  // MOMENTS

  function stringGet(units) {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
      return this[units]();
    }
    return this;
  }

  function stringSet(units, value) {
    if (typeof units === 'object') {
      units = normalizeObjectUnits(units);
      var prioritized = getPrioritizedUnits(units),
      i,
      prioritizedLen = prioritized.length;
      for (i = 0; i < prioritizedLen; i++) {
        this[prioritized[i].unit](units[prioritized[i].unit]);
      }
    } else {
      units = normalizeUnits(units);
      if (isFunction(this[units])) {
        return this[units](value);
      }
    }
    return this;
  }

  var match1 = /\d/, //       0 - 9
  match2 = /\d\d/, //      00 - 99
  match3 = /\d{3}/, //     000 - 999
  match4 = /\d{4}/, //    0000 - 9999
  match6 = /[+-]?\d{6}/, // -999999 - 999999
  match1to2 = /\d\d?/, //       0 - 99
  match3to4 = /\d\d\d\d?/, //     999 - 9999
  match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
  match1to3 = /\d{1,3}/, //       0 - 999
  match1to4 = /\d{1,4}/, //       0 - 9999
  match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
  matchUnsigned = /\d+/, //       0 - inf
  matchSigned = /[+-]?\d+/, //    -inf - inf
  matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
  matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
  matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  matchWord =
  /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
  regexes;

  regexes = {};

  function addRegexToken(token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ?
    regex :
    function (isStrict, localeData) {
      return isStrict && strictRegex ? strictRegex : regex;
    };
  }

  function getParseRegexForToken(token, config) {
    if (!hasOwnProp(regexes, token)) {
      return new RegExp(unescapeFormat(token));
    }

    return regexes[token](config._strict, config._locale);
  }

  // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s) {
    return regexEscape(
    s.
    replace('\\', '').
    replace(
    /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
    function (matched, p1, p2, p3, p4) {
      return p1 || p2 || p3 || p4;
    }));


  }

  function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  }

  var tokens = {};

  function addParseToken(token, callback) {
    var i,
    func = callback,
    tokenLen;
    if (typeof token === 'string') {
      token = [token];
    }
    if (isNumber(callback)) {
      func = function func(input, array) {
        array[callback] = toInt(input);
      };
    }
    tokenLen = token.length;
    for (i = 0; i < tokenLen; i++) {
      tokens[token[i]] = func;
    }
  }

  function addWeekParseToken(token, callback) {
    addParseToken(token, function (input, array, config, token) {
      config._w = config._w || {};
      callback(input, config._w, config, token);
    });
  }

  function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
      tokens[token](input, config._a, config, token);
    }
  }

  var YEAR = 0,
  MONTH = 1,
  DATE = 2,
  HOUR = 3,
  MINUTE = 4,
  SECOND = 5,
  MILLISECOND = 6,
  WEEK = 7,
  WEEKDAY = 8;

  function mod(n, x) {
    return (n % x + x) % x;
  }

  var indexOf;

  if (Array.prototype.indexOf) {
    indexOf = Array.prototype.indexOf;
  } else {
    indexOf = function indexOf(o) {
      // I know
      var i;
      for (i = 0; i < this.length; ++i) {
        if (this[i] === o) {
          return i;
        }
      }
      return -1;
    };
  }

  function daysInMonth(year, month) {
    if (isNaN(year) || isNaN(month)) {
      return NaN;
    }
    var modMonth = mod(month, 12);
    year += (month - modMonth) / 12;
    return modMonth === 1 ?
    isLeapYear(year) ?
    29 :
    28 :
    31 - modMonth % 7 % 2;
  }

  // FORMATTING

  addFormatToken('M', ['MM', 2], 'Mo', function () {
    return this.month() + 1;
  });

  addFormatToken('MMM', 0, 0, function (format) {
    return this.localeData().monthsShort(this, format);
  });

  addFormatToken('MMMM', 0, 0, function (format) {
    return this.localeData().months(this, format);
  });

  // ALIASES

  addUnitAlias('month', 'M');

  // PRIORITY

  addUnitPriority('month', 8);

  // PARSING

  addRegexToken('M', match1to2);
  addRegexToken('MM', match1to2, match2);
  addRegexToken('MMM', function (isStrict, locale) {
    return locale.monthsShortRegex(isStrict);
  });
  addRegexToken('MMMM', function (isStrict, locale) {
    return locale.monthsRegex(isStrict);
  });

  addParseToken(['M', 'MM'], function (input, array) {
    array[MONTH] = toInt(input) - 1;
  });

  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    // if we didn't find a month name, mark the date as invalid.
    if (month != null) {
      array[MONTH] = month;
    } else {
      getParsingFlags(config).invalidMonth = input;
    }
  });

  // LOCALES

  var defaultLocaleMonths =
  'January_February_March_April_May_June_July_August_September_October_November_December'.split(
  '_'),

  defaultLocaleMonthsShort =
  'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
  MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
  defaultMonthsShortRegex = matchWord,
  defaultMonthsRegex = matchWord;

  function localeMonths(m, format) {
    if (!m) {
      return isArray(this._months) ?
      this._months :
      this._months['standalone'];
    }
    return isArray(this._months) ?
    this._months[m.month()] :
    this._months[
    (this._months.isFormat || MONTHS_IN_FORMAT).test(format) ?
    'format' :
    'standalone'][
    m.month()];
  }

  function localeMonthsShort(m, format) {
    if (!m) {
      return isArray(this._monthsShort) ?
      this._monthsShort :
      this._monthsShort['standalone'];
    }
    return isArray(this._monthsShort) ?
    this._monthsShort[m.month()] :
    this._monthsShort[
    MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][
    m.month()];
  }

  function handleStrictParse(monthName, format, strict) {
    var i,
    ii,
    mom,
    llc = monthName.toLocaleLowerCase();
    if (!this._monthsParse) {
      // this is not used
      this._monthsParse = [];
      this._longMonthsParse = [];
      this._shortMonthsParse = [];
      for (i = 0; i < 12; ++i) {
        mom = createUTC([2000, i]);
        this._shortMonthsParse[i] = this.monthsShort(
        mom,
        '').
        toLocaleLowerCase();
        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
      }
    }

    if (strict) {
      if (format === 'MMM') {
        ii = indexOf.call(this._shortMonthsParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._longMonthsParse, llc);
        return ii !== -1 ? ii : null;
      }
    } else {
      if (format === 'MMM') {
        ii = indexOf.call(this._shortMonthsParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._longMonthsParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._longMonthsParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._shortMonthsParse, llc);
        return ii !== -1 ? ii : null;
      }
    }
  }

  function localeMonthsParse(monthName, format, strict) {
    var i, mom, regex;

    if (this._monthsParseExact) {
      return handleStrictParse.call(this, monthName, format, strict);
    }

    if (!this._monthsParse) {
      this._monthsParse = [];
      this._longMonthsParse = [];
      this._shortMonthsParse = [];
    }

    // TODO: add sorting
    // Sorting makes sure if one month (or abbr) is a prefix of another
    // see sorting in computeMonthsParse
    for (i = 0; i < 12; i++) {
      // make the regex if we don't have it already
      mom = createUTC([2000, i]);
      if (strict && !this._longMonthsParse[i]) {
        this._longMonthsParse[i] = new RegExp(
        '^' + this.months(mom, '').replace('.', '') + '$',
        'i');

        this._shortMonthsParse[i] = new RegExp(
        '^' + this.monthsShort(mom, '').replace('.', '') + '$',
        'i');

      }
      if (!strict && !this._monthsParse[i]) {
        regex =
        '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      // test the regex
      if (
      strict &&
      format === 'MMMM' &&
      this._longMonthsParse[i].test(monthName))
      {
        return i;
      } else if (
      strict &&
      format === 'MMM' &&
      this._shortMonthsParse[i].test(monthName))
      {
        return i;
      } else if (!strict && this._monthsParse[i].test(monthName)) {
        return i;
      }
    }
  }

  // MOMENTS

  function setMonth(mom, value) {
    var dayOfMonth;

    if (!mom.isValid()) {
      // No op
      return mom;
    }

    if (typeof value === 'string') {
      if (/^\d+$/.test(value)) {
        value = toInt(value);
      } else {
        value = mom.localeData().monthsParse(value);
        // TODO: Another silent failure?
        if (!isNumber(value)) {
          return mom;
        }
      }
    }

    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
  }

  function getSetMonth(value) {
    if (value != null) {
      setMonth(this, value);
      hooks.updateOffset(this, true);
      return this;
    } else {
      return get(this, 'Month');
    }
  }

  function getDaysInMonth() {
    return daysInMonth(this.year(), this.month());
  }

  function monthsShortRegex(isStrict) {
    if (this._monthsParseExact) {
      if (!hasOwnProp(this, '_monthsRegex')) {
        computeMonthsParse.call(this);
      }
      if (isStrict) {
        return this._monthsShortStrictRegex;
      } else {
        return this._monthsShortRegex;
      }
    } else {
      if (!hasOwnProp(this, '_monthsShortRegex')) {
        this._monthsShortRegex = defaultMonthsShortRegex;
      }
      return this._monthsShortStrictRegex && isStrict ?
      this._monthsShortStrictRegex :
      this._monthsShortRegex;
    }
  }

  function monthsRegex(isStrict) {
    if (this._monthsParseExact) {
      if (!hasOwnProp(this, '_monthsRegex')) {
        computeMonthsParse.call(this);
      }
      if (isStrict) {
        return this._monthsStrictRegex;
      } else {
        return this._monthsRegex;
      }
    } else {
      if (!hasOwnProp(this, '_monthsRegex')) {
        this._monthsRegex = defaultMonthsRegex;
      }
      return this._monthsStrictRegex && isStrict ?
      this._monthsStrictRegex :
      this._monthsRegex;
    }
  }

  function computeMonthsParse() {
    function cmpLenRev(a, b) {
      return b.length - a.length;
    }

    var shortPieces = [],
    longPieces = [],
    mixedPieces = [],
    i,
    mom;
    for (i = 0; i < 12; i++) {
      // make the regex if we don't have it already
      mom = createUTC([2000, i]);
      shortPieces.push(this.monthsShort(mom, ''));
      longPieces.push(this.months(mom, ''));
      mixedPieces.push(this.months(mom, ''));
      mixedPieces.push(this.monthsShort(mom, ''));
    }
    // Sorting makes sure if one month (or abbr) is a prefix of another it
    // will match the longer piece.
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 12; i++) {
      shortPieces[i] = regexEscape(shortPieces[i]);
      longPieces[i] = regexEscape(longPieces[i]);
    }
    for (i = 0; i < 24; i++) {
      mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._monthsShortRegex = this._monthsRegex;
    this._monthsStrictRegex = new RegExp(
    '^(' + longPieces.join('|') + ')',
    'i');

    this._monthsShortStrictRegex = new RegExp(
    '^(' + shortPieces.join('|') + ')',
    'i');

  }

  // FORMATTING

  addFormatToken('Y', 0, 0, function () {
    var y = this.year();
    return y <= 9999 ? zeroFill(y, 4) : '+' + y;
  });

  addFormatToken(0, ['YY', 2], 0, function () {
    return this.year() % 100;
  });

  addFormatToken(0, ['YYYY', 4], 0, 'year');
  addFormatToken(0, ['YYYYY', 5], 0, 'year');
  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

  // ALIASES

  addUnitAlias('year', 'y');

  // PRIORITIES

  addUnitPriority('year', 1);

  // PARSING

  addRegexToken('Y', matchSigned);
  addRegexToken('YY', match1to2, match2);
  addRegexToken('YYYY', match1to4, match4);
  addRegexToken('YYYYY', match1to6, match6);
  addRegexToken('YYYYYY', match1to6, match6);

  addParseToken(['YYYYY', 'YYYYYY'], YEAR);
  addParseToken('YYYY', function (input, array) {
    array[YEAR] =
    input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
  });
  addParseToken('YY', function (input, array) {
    array[YEAR] = hooks.parseTwoDigitYear(input);
  });
  addParseToken('Y', function (input, array) {
    array[YEAR] = parseInt(input, 10);
  });

  // HELPERS

  function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
  }

  // HOOKS

  hooks.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
  };

  // MOMENTS

  var getSetYear = makeGetSet('FullYear', true);

  function getIsLeapYear() {
    return isLeapYear(this.year());
  }

  function createDate(y, m, d, h, M, s, ms) {
    // can't just apply() to create a date:
    // https://stackoverflow.com/q/181348
    var date;
    // the date constructor remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0) {
      // preserve leap years using a full 400 year cycle, then reset
      date = new Date(y + 400, m, d, h, M, s, ms);
      if (isFinite(date.getFullYear())) {
        date.setFullYear(y);
      }
    } else {
      date = new Date(y, m, d, h, M, s, ms);
    }

    return date;
  }

  function createUTCDate(y) {
    var date, args;
    // the Date.UTC function remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0) {
      args = Array.prototype.slice.call(arguments);
      // preserve leap years using a full 400 year cycle, then reset
      args[0] = y + 400;
      date = new Date(Date.UTC.apply(null, args));
      if (isFinite(date.getUTCFullYear())) {
        date.setUTCFullYear(y);
      }
    } else {
      date = new Date(Date.UTC.apply(null, arguments));
    }

    return date;
  }

  // start-of-first-week - start-of-year
  function firstWeekOffset(year, dow, doy) {
    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
    fwd = 7 + dow - doy,
    // first-week day local weekday -- which local weekday is fwd
    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

    return -fwdlw + fwd - 1;
  }

  // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var localWeekday = (7 + weekday - dow) % 7,
    weekOffset = firstWeekOffset(year, dow, doy),
    dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
    resYear,
    resDayOfYear;

    if (dayOfYear <= 0) {
      resYear = year - 1;
      resDayOfYear = daysInYear(resYear) + dayOfYear;
    } else if (dayOfYear > daysInYear(year)) {
      resYear = year + 1;
      resDayOfYear = dayOfYear - daysInYear(year);
    } else {
      resYear = year;
      resDayOfYear = dayOfYear;
    }

    return {
      year: resYear,
      dayOfYear: resDayOfYear };

  }

  function weekOfYear(mom, dow, doy) {
    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
    week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
    resWeek,
    resYear;

    if (week < 1) {
      resYear = mom.year() - 1;
      resWeek = week + weeksInYear(resYear, dow, doy);
    } else if (week > weeksInYear(mom.year(), dow, doy)) {
      resWeek = week - weeksInYear(mom.year(), dow, doy);
      resYear = mom.year() + 1;
    } else {
      resYear = mom.year();
      resWeek = week;
    }

    return {
      week: resWeek,
      year: resYear };

  }

  function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy),
    weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
  }

  // FORMATTING

  addFormatToken('w', ['ww', 2], 'wo', 'week');
  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

  // ALIASES

  addUnitAlias('week', 'w');
  addUnitAlias('isoWeek', 'W');

  // PRIORITIES

  addUnitPriority('week', 5);
  addUnitPriority('isoWeek', 5);

  // PARSING

  addRegexToken('w', match1to2);
  addRegexToken('ww', match1to2, match2);
  addRegexToken('W', match1to2);
  addRegexToken('WW', match1to2, match2);

  addWeekParseToken(
  ['w', 'ww', 'W', 'WW'],
  function (input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input);
  });


  // HELPERS

  // LOCALES

  function localeWeek(mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
  }

  var defaultLocaleWeek = {
    dow: 0, // Sunday is the first day of the week.
    doy: 6 // The week that contains Jan 6th is the first week of the year.
  };

  function localeFirstDayOfWeek() {
    return this._week.dow;
  }

  function localeFirstDayOfYear() {
    return this._week.doy;
  }

  // MOMENTS

  function getSetWeek(input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
  }

  function getSetISOWeek(input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
  }

  // FORMATTING

  addFormatToken('d', 0, 'do', 'day');

  addFormatToken('dd', 0, 0, function (format) {
    return this.localeData().weekdaysMin(this, format);
  });

  addFormatToken('ddd', 0, 0, function (format) {
    return this.localeData().weekdaysShort(this, format);
  });

  addFormatToken('dddd', 0, 0, function (format) {
    return this.localeData().weekdays(this, format);
  });

  addFormatToken('e', 0, 0, 'weekday');
  addFormatToken('E', 0, 0, 'isoWeekday');

  // ALIASES

  addUnitAlias('day', 'd');
  addUnitAlias('weekday', 'e');
  addUnitAlias('isoWeekday', 'E');

  // PRIORITY
  addUnitPriority('day', 11);
  addUnitPriority('weekday', 11);
  addUnitPriority('isoWeekday', 11);

  // PARSING

  addRegexToken('d', match1to2);
  addRegexToken('e', match1to2);
  addRegexToken('E', match1to2);
  addRegexToken('dd', function (isStrict, locale) {
    return locale.weekdaysMinRegex(isStrict);
  });
  addRegexToken('ddd', function (isStrict, locale) {
    return locale.weekdaysShortRegex(isStrict);
  });
  addRegexToken('dddd', function (isStrict, locale) {
    return locale.weekdaysRegex(isStrict);
  });

  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    // if we didn't get a weekday name, mark the date as invalid
    if (weekday != null) {
      week.d = weekday;
    } else {
      getParsingFlags(config).invalidWeekday = input;
    }
  });

  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
    week[token] = toInt(input);
  });

  // HELPERS

  function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
      return input;
    }

    if (!isNaN(input)) {
      return parseInt(input, 10);
    }

    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
      return input;
    }

    return null;
  }

  function parseIsoWeekday(input, locale) {
    if (typeof input === 'string') {
      return locale.weekdaysParse(input) % 7 || 7;
    }
    return isNaN(input) ? null : input;
  }

  // LOCALES
  function shiftWeekdays(ws, n) {
    return ws.slice(n, 7).concat(ws.slice(0, n));
  }

  var defaultLocaleWeekdays =
  'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
  defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
  defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
  defaultWeekdaysRegex = matchWord,
  defaultWeekdaysShortRegex = matchWord,
  defaultWeekdaysMinRegex = matchWord;

  function localeWeekdays(m, format) {
    var weekdays = isArray(this._weekdays) ?
    this._weekdays :
    this._weekdays[
    m && m !== true && this._weekdays.isFormat.test(format) ?
    'format' :
    'standalone'];

    return m === true ?
    shiftWeekdays(weekdays, this._week.dow) :
    m ?
    weekdays[m.day()] :
    weekdays;
  }

  function localeWeekdaysShort(m) {
    return m === true ?
    shiftWeekdays(this._weekdaysShort, this._week.dow) :
    m ?
    this._weekdaysShort[m.day()] :
    this._weekdaysShort;
  }

  function localeWeekdaysMin(m) {
    return m === true ?
    shiftWeekdays(this._weekdaysMin, this._week.dow) :
    m ?
    this._weekdaysMin[m.day()] :
    this._weekdaysMin;
  }

  function handleStrictParse$1(weekdayName, format, strict) {
    var i,
    ii,
    mom,
    llc = weekdayName.toLocaleLowerCase();
    if (!this._weekdaysParse) {
      this._weekdaysParse = [];
      this._shortWeekdaysParse = [];
      this._minWeekdaysParse = [];

      for (i = 0; i < 7; ++i) {
        mom = createUTC([2000, 1]).day(i);
        this._minWeekdaysParse[i] = this.weekdaysMin(
        mom,
        '').
        toLocaleLowerCase();
        this._shortWeekdaysParse[i] = this.weekdaysShort(
        mom,
        '').
        toLocaleLowerCase();
        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
      }
    }

    if (strict) {
      if (format === 'dddd') {
        ii = indexOf.call(this._weekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else if (format === 'ddd') {
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      }
    } else {
      if (format === 'dddd') {
        ii = indexOf.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else if (format === 'ddd') {
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._minWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      }
    }
  }

  function localeWeekdaysParse(weekdayName, format, strict) {
    var i, mom, regex;

    if (this._weekdaysParseExact) {
      return handleStrictParse$1.call(this, weekdayName, format, strict);
    }

    if (!this._weekdaysParse) {
      this._weekdaysParse = [];
      this._minWeekdaysParse = [];
      this._shortWeekdaysParse = [];
      this._fullWeekdaysParse = [];
    }

    for (i = 0; i < 7; i++) {
      // make the regex if we don't have it already

      mom = createUTC([2000, 1]).day(i);
      if (strict && !this._fullWeekdaysParse[i]) {
        this._fullWeekdaysParse[i] = new RegExp(
        '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
        'i');

        this._shortWeekdaysParse[i] = new RegExp(
        '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
        'i');

        this._minWeekdaysParse[i] = new RegExp(
        '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
        'i');

      }
      if (!this._weekdaysParse[i]) {
        regex =
        '^' +
        this.weekdays(mom, '') +
        '|^' +
        this.weekdaysShort(mom, '') +
        '|^' +
        this.weekdaysMin(mom, '');
        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      // test the regex
      if (
      strict &&
      format === 'dddd' &&
      this._fullWeekdaysParse[i].test(weekdayName))
      {
        return i;
      } else if (
      strict &&
      format === 'ddd' &&
      this._shortWeekdaysParse[i].test(weekdayName))
      {
        return i;
      } else if (
      strict &&
      format === 'dd' &&
      this._minWeekdaysParse[i].test(weekdayName))
      {
        return i;
      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
        return i;
      }
    }
  }

  // MOMENTS

  function getSetDayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
      input = parseWeekday(input, this.localeData());
      return this.add(input - day, 'd');
    } else {
      return day;
    }
  }

  function getSetLocaleDayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
  }

  function getSetISODayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }

    // behaves the same as moment#day except
    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
    // as a setter, sunday should belong to the previous week.

    if (input != null) {
      var weekday = parseIsoWeekday(input, this.localeData());
      return this.day(this.day() % 7 ? weekday : weekday - 7);
    } else {
      return this.day() || 7;
    }
  }

  function weekdaysRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysStrictRegex;
      } else {
        return this._weekdaysRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        this._weekdaysRegex = defaultWeekdaysRegex;
      }
      return this._weekdaysStrictRegex && isStrict ?
      this._weekdaysStrictRegex :
      this._weekdaysRegex;
    }
  }

  function weekdaysShortRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysShortStrictRegex;
      } else {
        return this._weekdaysShortRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysShortRegex')) {
        this._weekdaysShortRegex = defaultWeekdaysShortRegex;
      }
      return this._weekdaysShortStrictRegex && isStrict ?
      this._weekdaysShortStrictRegex :
      this._weekdaysShortRegex;
    }
  }

  function weekdaysMinRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysMinStrictRegex;
      } else {
        return this._weekdaysMinRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysMinRegex')) {
        this._weekdaysMinRegex = defaultWeekdaysMinRegex;
      }
      return this._weekdaysMinStrictRegex && isStrict ?
      this._weekdaysMinStrictRegex :
      this._weekdaysMinRegex;
    }
  }

  function computeWeekdaysParse() {
    function cmpLenRev(a, b) {
      return b.length - a.length;
    }

    var minPieces = [],
    shortPieces = [],
    longPieces = [],
    mixedPieces = [],
    i,
    mom,
    minp,
    shortp,
    longp;
    for (i = 0; i < 7; i++) {
      // make the regex if we don't have it already
      mom = createUTC([2000, 1]).day(i);
      minp = regexEscape(this.weekdaysMin(mom, ''));
      shortp = regexEscape(this.weekdaysShort(mom, ''));
      longp = regexEscape(this.weekdays(mom, ''));
      minPieces.push(minp);
      shortPieces.push(shortp);
      longPieces.push(longp);
      mixedPieces.push(minp);
      mixedPieces.push(shortp);
      mixedPieces.push(longp);
    }
    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
    // will match the longer piece.
    minPieces.sort(cmpLenRev);
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);

    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._weekdaysShortRegex = this._weekdaysRegex;
    this._weekdaysMinRegex = this._weekdaysRegex;

    this._weekdaysStrictRegex = new RegExp(
    '^(' + longPieces.join('|') + ')',
    'i');

    this._weekdaysShortStrictRegex = new RegExp(
    '^(' + shortPieces.join('|') + ')',
    'i');

    this._weekdaysMinStrictRegex = new RegExp(
    '^(' + minPieces.join('|') + ')',
    'i');

  }

  // FORMATTING

  function hFormat() {
    return this.hours() % 12 || 12;
  }

  function kFormat() {
    return this.hours() || 24;
  }

  addFormatToken('H', ['HH', 2], 0, 'hour');
  addFormatToken('h', ['hh', 2], 0, hFormat);
  addFormatToken('k', ['kk', 2], 0, kFormat);

  addFormatToken('hmm', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
  });

  addFormatToken('hmmss', 0, 0, function () {
    return (
      '' +
      hFormat.apply(this) +
      zeroFill(this.minutes(), 2) +
      zeroFill(this.seconds(), 2));

  });

  addFormatToken('Hmm', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2);
  });

  addFormatToken('Hmmss', 0, 0, function () {
    return (
      '' +
      this.hours() +
      zeroFill(this.minutes(), 2) +
      zeroFill(this.seconds(), 2));

  });

  function meridiem(token, lowercase) {
    addFormatToken(token, 0, 0, function () {
      return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      lowercase);

    });
  }

  meridiem('a', true);
  meridiem('A', false);

  // ALIASES

  addUnitAlias('hour', 'h');

  // PRIORITY
  addUnitPriority('hour', 13);

  // PARSING

  function matchMeridiem(isStrict, locale) {
    return locale._meridiemParse;
  }

  addRegexToken('a', matchMeridiem);
  addRegexToken('A', matchMeridiem);
  addRegexToken('H', match1to2);
  addRegexToken('h', match1to2);
  addRegexToken('k', match1to2);
  addRegexToken('HH', match1to2, match2);
  addRegexToken('hh', match1to2, match2);
  addRegexToken('kk', match1to2, match2);

  addRegexToken('hmm', match3to4);
  addRegexToken('hmmss', match5to6);
  addRegexToken('Hmm', match3to4);
  addRegexToken('Hmmss', match5to6);

  addParseToken(['H', 'HH'], HOUR);
  addParseToken(['k', 'kk'], function (input, array, config) {
    var kInput = toInt(input);
    array[HOUR] = kInput === 24 ? 0 : kInput;
  });
  addParseToken(['a', 'A'], function (input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
  });
  addParseToken(['h', 'hh'], function (input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmmss', function (input, array, config) {
    var pos1 = input.length - 4,
    pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('Hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
  });
  addParseToken('Hmmss', function (input, array, config) {
    var pos1 = input.length - 4,
    pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
  });

  // LOCALES

  function localeIsPM(input) {
    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
    // Using charAt should be more compatible.
    return (input + '').toLowerCase().charAt(0) === 'p';
  }

  var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
  // Setting the hour should keep the time, because the user explicitly
  // specified which hour they want. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  getSetHour = makeGetSet('Hours', true);

  function localeMeridiem(hours, minutes, isLower) {
    if (hours > 11) {
      return isLower ? 'pm' : 'PM';
    } else {
      return isLower ? 'am' : 'AM';
    }
  }

  var baseConfig = {
    calendar: defaultCalendar,
    longDateFormat: defaultLongDateFormat,
    invalidDate: defaultInvalidDate,
    ordinal: defaultOrdinal,
    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
    relativeTime: defaultRelativeTime,

    months: defaultLocaleMonths,
    monthsShort: defaultLocaleMonthsShort,

    week: defaultLocaleWeek,

    weekdays: defaultLocaleWeekdays,
    weekdaysMin: defaultLocaleWeekdaysMin,
    weekdaysShort: defaultLocaleWeekdaysShort,

    meridiemParse: defaultLocaleMeridiemParse };


  // internal storage for locale config files
  var locales = {},
  localeFamilies = {},
  globalLocale;

  function commonPrefix(arr1, arr2) {
    var i,
    minl = Math.min(arr1.length, arr2.length);
    for (i = 0; i < minl; i += 1) {
      if (arr1[i] !== arr2[i]) {
        return i;
      }
    }
    return minl;
  }

  function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
  }

  // pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names) {
    var i = 0,
    j,
    next,
    locale,
    split;

    while (i < names.length) {
      split = normalizeLocale(names[i]).split('-');
      j = split.length;
      next = normalizeLocale(names[i + 1]);
      next = next ? next.split('-') : null;
      while (j > 0) {
        locale = loadLocale(split.slice(0, j).join('-'));
        if (locale) {
          return locale;
        }
        if (
        next &&
        next.length >= j &&
        commonPrefix(split, next) >= j - 1)
        {
          //the next array item is better than a shallower substring of this one
          break;
        }
        j--;
      }
      i++;
    }
    return globalLocale;
  }

  function isLocaleNameSane(name) {
    // Prevent names that look like filesystem paths, i.e contain '/' or '\'
    return name.match('^[^/\\\\]*$') != null;
  }

  function loadLocale(name) {
    var oldLocale = null,
    aliasedRequire;
    // TODO: Find a better way to register and load all the locales in Node
    if (
    locales[name] === undefined &&
    typeof module !== 'undefined' &&
    module &&
    module.exports &&
    isLocaleNameSane(name))
    {
      try {
        oldLocale = globalLocale._abbr;
        aliasedRequire = require;
        __webpack_require__(24)("./" + name);
        getSetGlobalLocale(oldLocale);
      } catch (e) {
        // mark as not found to avoid repeating expensive file require call causing high CPU
        // when trying to find en-US, en_US, en-us for every format call
        locales[name] = null; // null means not found
      }
    }
    return locales[name];
  }

  // This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale(key, values) {
    var data;
    if (key) {
      if (isUndefined(values)) {
        data = getLocale(key);
      } else {
        data = defineLocale(key, values);
      }

      if (data) {
        // moment.duration._locale = moment._locale = data;
        globalLocale = data;
      } else {
        if (typeof console !== 'undefined' && console.warn) {
          //warn user if arguments are passed but the locale could not be set
          console.warn(
          'Locale ' + key + ' not found. Did you forget to load it?');

        }
      }
    }

    return globalLocale._abbr;
  }

  function defineLocale(name, config) {
    if (config !== null) {
      var locale,
      parentConfig = baseConfig;
      config.abbr = name;
      if (locales[name] != null) {
        deprecateSimple(
        'defineLocaleOverride',
        'use moment.updateLocale(localeName, config) to change ' +
        'an existing locale. moment.defineLocale(localeName, ' +
        'config) should only be used for creating a new locale ' +
        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');

        parentConfig = locales[name]._config;
      } else if (config.parentLocale != null) {
        if (locales[config.parentLocale] != null) {
          parentConfig = locales[config.parentLocale]._config;
        } else {
          locale = loadLocale(config.parentLocale);
          if (locale != null) {
            parentConfig = locale._config;
          } else {
            if (!localeFamilies[config.parentLocale]) {
              localeFamilies[config.parentLocale] = [];
            }
            localeFamilies[config.parentLocale].push({
              name: name,
              config: config });

            return null;
          }
        }
      }
      locales[name] = new Locale(mergeConfigs(parentConfig, config));

      if (localeFamilies[name]) {
        localeFamilies[name].forEach(function (x) {
          defineLocale(x.name, x.config);
        });
      }

      // backwards compat for now: also set the locale
      // make sure we set the locale AFTER all child locales have been
      // created, so we won't end up with the child locale set.
      getSetGlobalLocale(name);

      return locales[name];
    } else {
      // useful for testing
      delete locales[name];
      return null;
    }
  }

  function updateLocale(name, config) {
    if (config != null) {
      var locale,
      tmpLocale,
      parentConfig = baseConfig;

      if (locales[name] != null && locales[name].parentLocale != null) {
        // Update existing child locale in-place to avoid memory-leaks
        locales[name].set(mergeConfigs(locales[name]._config, config));
      } else {
        // MERGE
        tmpLocale = loadLocale(name);
        if (tmpLocale != null) {
          parentConfig = tmpLocale._config;
        }
        config = mergeConfigs(parentConfig, config);
        if (tmpLocale == null) {
          // updateLocale is called for creating a new locale
          // Set abbr so it will have a name (getters return
          // undefined otherwise).
          config.abbr = name;
        }
        locale = new Locale(config);
        locale.parentLocale = locales[name];
        locales[name] = locale;
      }

      // backwards compat for now: also set the locale
      getSetGlobalLocale(name);
    } else {
      // pass null for config to unupdate, useful for tests
      if (locales[name] != null) {
        if (locales[name].parentLocale != null) {
          locales[name] = locales[name].parentLocale;
          if (name === getSetGlobalLocale()) {
            getSetGlobalLocale(name);
          }
        } else if (locales[name] != null) {
          delete locales[name];
        }
      }
    }
    return locales[name];
  }

  // returns locale data
  function getLocale(key) {
    var locale;

    if (key && key._locale && key._locale._abbr) {
      key = key._locale._abbr;
    }

    if (!key) {
      return globalLocale;
    }

    if (!isArray(key)) {
      //short-circuit everything else
      locale = loadLocale(key);
      if (locale) {
        return locale;
      }
      key = [key];
    }

    return chooseLocale(key);
  }

  function listLocales() {
    return keys(locales);
  }

  function checkOverflow(m) {
    var overflow,
    a = m._a;

    if (a && getParsingFlags(m).overflow === -2) {
      overflow =
      a[MONTH] < 0 || a[MONTH] > 11 ?
      MONTH :
      a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ?
      DATE :
      a[HOUR] < 0 ||
      a[HOUR] > 24 ||
      a[HOUR] === 24 && (
      a[MINUTE] !== 0 ||
      a[SECOND] !== 0 ||
      a[MILLISECOND] !== 0) ?
      HOUR :
      a[MINUTE] < 0 || a[MINUTE] > 59 ?
      MINUTE :
      a[SECOND] < 0 || a[SECOND] > 59 ?
      SECOND :
      a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ?
      MILLISECOND :
      -1;

      if (
      getParsingFlags(m)._overflowDayOfYear && (
      overflow < YEAR || overflow > DATE))
      {
        overflow = DATE;
      }
      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
        overflow = WEEK;
      }
      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
        overflow = WEEKDAY;
      }

      getParsingFlags(m).overflow = overflow;
    }

    return m;
  }

  // iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex =
  /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
  basicIsoRegex =
  /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
  tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
  isoDates = [
  ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
  ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
  ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
  ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
  ['YYYY-DDD', /\d{4}-\d{3}/],
  ['YYYY-MM', /\d{4}-\d\d/, false],
  ['YYYYYYMMDD', /[+-]\d{10}/],
  ['YYYYMMDD', /\d{8}/],
  ['GGGG[W]WWE', /\d{4}W\d{3}/],
  ['GGGG[W]WW', /\d{4}W\d{2}/, false],
  ['YYYYDDD', /\d{7}/],
  ['YYYYMM', /\d{6}/, false],
  ['YYYY', /\d{4}/, false]],

  // iso time formats and regexes
  isoTimes = [
  ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
  ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
  ['HH:mm:ss', /\d\d:\d\d:\d\d/],
  ['HH:mm', /\d\d:\d\d/],
  ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
  ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
  ['HHmmss', /\d\d\d\d\d\d/],
  ['HHmm', /\d\d\d\d/],
  ['HH', /\d\d/]],

  aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
  // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
  rfc2822 =
  /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
  obsOffsets = {
    UT: 0,
    GMT: 0,
    EDT: -4 * 60,
    EST: -5 * 60,
    CDT: -5 * 60,
    CST: -6 * 60,
    MDT: -6 * 60,
    MST: -7 * 60,
    PDT: -7 * 60,
    PST: -8 * 60 };


  // date from iso format
  function configFromISO(config) {
    var i,
    l,
    string = config._i,
    match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
    allowTime,
    dateFormat,
    timeFormat,
    tzFormat,
    isoDatesLen = isoDates.length,
    isoTimesLen = isoTimes.length;

    if (match) {
      getParsingFlags(config).iso = true;
      for (i = 0, l = isoDatesLen; i < l; i++) {
        if (isoDates[i][1].exec(match[1])) {
          dateFormat = isoDates[i][0];
          allowTime = isoDates[i][2] !== false;
          break;
        }
      }
      if (dateFormat == null) {
        config._isValid = false;
        return;
      }
      if (match[3]) {
        for (i = 0, l = isoTimesLen; i < l; i++) {
          if (isoTimes[i][1].exec(match[3])) {
            // match[2] should be 'T' or space
            timeFormat = (match[2] || ' ') + isoTimes[i][0];
            break;
          }
        }
        if (timeFormat == null) {
          config._isValid = false;
          return;
        }
      }
      if (!allowTime && timeFormat != null) {
        config._isValid = false;
        return;
      }
      if (match[4]) {
        if (tzRegex.exec(match[4])) {
          tzFormat = 'Z';
        } else {
          config._isValid = false;
          return;
        }
      }
      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
      configFromStringAndFormat(config);
    } else {
      config._isValid = false;
    }
  }

  function extractFromRFC2822Strings(
  yearStr,
  monthStr,
  dayStr,
  hourStr,
  minuteStr,
  secondStr)
  {
    var result = [
    untruncateYear(yearStr),
    defaultLocaleMonthsShort.indexOf(monthStr),
    parseInt(dayStr, 10),
    parseInt(hourStr, 10),
    parseInt(minuteStr, 10)];


    if (secondStr) {
      result.push(parseInt(secondStr, 10));
    }

    return result;
  }

  function untruncateYear(yearStr) {
    var year = parseInt(yearStr, 10);
    if (year <= 49) {
      return 2000 + year;
    } else if (year <= 999) {
      return 1900 + year;
    }
    return year;
  }

  function preprocessRFC2822(s) {
    // Remove comments and folding whitespace and replace multiple-spaces with a single space
    return s.
    replace(/\([^)]*\)|[\n\t]/g, ' ').
    replace(/(\s\s+)/g, ' ').
    replace(/^\s\s*/, '').
    replace(/\s\s*$/, '');
  }

  function checkWeekday(weekdayStr, parsedInput, config) {
    if (weekdayStr) {
      // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
      weekdayActual = new Date(
      parsedInput[0],
      parsedInput[1],
      parsedInput[2]).
      getDay();
      if (weekdayProvided !== weekdayActual) {
        getParsingFlags(config).weekdayMismatch = true;
        config._isValid = false;
        return false;
      }
    }
    return true;
  }

  function calculateOffset(obsOffset, militaryOffset, numOffset) {
    if (obsOffset) {
      return obsOffsets[obsOffset];
    } else if (militaryOffset) {
      // the only allowed military tz is Z
      return 0;
    } else {
      var hm = parseInt(numOffset, 10),
      m = hm % 100,
      h = (hm - m) / 100;
      return h * 60 + m;
    }
  }

  // date and time from ref 2822 format
  function configFromRFC2822(config) {
    var match = rfc2822.exec(preprocessRFC2822(config._i)),
    parsedArray;
    if (match) {
      parsedArray = extractFromRFC2822Strings(
      match[4],
      match[3],
      match[2],
      match[5],
      match[6],
      match[7]);

      if (!checkWeekday(match[1], parsedArray, config)) {
        return;
      }

      config._a = parsedArray;
      config._tzm = calculateOffset(match[8], match[9], match[10]);

      config._d = createUTCDate.apply(null, config._a);
      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

      getParsingFlags(config).rfc2822 = true;
    } else {
      config._isValid = false;
    }
  }

  // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
  function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);
    if (matched !== null) {
      config._d = new Date(+matched[1]);
      return;
    }

    configFromISO(config);
    if (config._isValid === false) {
      delete config._isValid;
    } else {
      return;
    }

    configFromRFC2822(config);
    if (config._isValid === false) {
      delete config._isValid;
    } else {
      return;
    }

    if (config._strict) {
      config._isValid = false;
    } else {
      // Final attempt, use Input Fallback
      hooks.createFromInputFallback(config);
    }
  }

  hooks.createFromInputFallback = deprecate(
  'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
  'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
  'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
  function (config) {
    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
  });


  // Pick the first defined of two or three arguments.
  function defaults(a, b, c) {
    if (a != null) {
      return a;
    }
    if (b != null) {
      return b;
    }
    return c;
  }

  function currentDateArray(config) {
    // hooks is actually the exported moment object
    var nowValue = new Date(hooks.now());
    if (config._useUTC) {
      return [
      nowValue.getUTCFullYear(),
      nowValue.getUTCMonth(),
      nowValue.getUTCDate()];

    }
    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
  }

  // convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config) {
    var i,
    date,
    input = [],
    currentDate,
    expectedWeekday,
    yearToUse;

    if (config._d) {
      return;
    }

    currentDate = currentDateArray(config);

    //compute day of the year from weeks and weekdays
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
      dayOfYearFromWeekInfo(config);
    }

    //if the day of the year is set, figure out what it is
    if (config._dayOfYear != null) {
      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

      if (
      config._dayOfYear > daysInYear(yearToUse) ||
      config._dayOfYear === 0)
      {
        getParsingFlags(config)._overflowDayOfYear = true;
      }

      date = createUTCDate(yearToUse, 0, config._dayOfYear);
      config._a[MONTH] = date.getUTCMonth();
      config._a[DATE] = date.getUTCDate();
    }

    // Default to current date.
    // * if no year, month, day of month are given, default to today
    // * if day of month is given, default month and year
    // * if month is given, default only year
    // * if year is given, don't default anything
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
      config._a[i] = input[i] = currentDate[i];
    }

    // Zero out whatever was not defaulted, including time
    for (; i < 7; i++) {
      config._a[i] = input[i] =
      config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
    }

    // Check for 24:00:00.000
    if (
    config._a[HOUR] === 24 &&
    config._a[MINUTE] === 0 &&
    config._a[SECOND] === 0 &&
    config._a[MILLISECOND] === 0)
    {
      config._nextDay = true;
      config._a[HOUR] = 0;
    }

    config._d = (config._useUTC ? createUTCDate : createDate).apply(
    null,
    input);

    expectedWeekday = config._useUTC ?
    config._d.getUTCDay() :
    config._d.getDay();

    // Apply timezone offset from input. The actual utcOffset can be changed
    // with parseZone.
    if (config._tzm != null) {
      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }

    if (config._nextDay) {
      config._a[HOUR] = 24;
    }

    // check for mismatching day of week
    if (
    config._w &&
    typeof config._w.d !== 'undefined' &&
    config._w.d !== expectedWeekday)
    {
      getParsingFlags(config).weekdayMismatch = true;
    }
  }

  function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
      dow = 1;
      doy = 4;

      // TODO: We need to take the current isoWeekYear, but that depends on
      // how we interpret now (local, utc, fixed offset). So create
      // a now version of current config (take local/utc/offset flags, and
      // create now).
      weekYear = defaults(
      w.GG,
      config._a[YEAR],
      weekOfYear(createLocal(), 1, 4).year);

      week = defaults(w.W, 1);
      weekday = defaults(w.E, 1);
      if (weekday < 1 || weekday > 7) {
        weekdayOverflow = true;
      }
    } else {
      dow = config._locale._week.dow;
      doy = config._locale._week.doy;

      curWeek = weekOfYear(createLocal(), dow, doy);

      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

      // Default to current week.
      week = defaults(w.w, curWeek.week);

      if (w.d != null) {
        // weekday -- low day numbers are considered next week
        weekday = w.d;
        if (weekday < 0 || weekday > 6) {
          weekdayOverflow = true;
        }
      } else if (w.e != null) {
        // local weekday -- counting starts from beginning of week
        weekday = w.e + dow;
        if (w.e < 0 || w.e > 6) {
          weekdayOverflow = true;
        }
      } else {
        // default to beginning of week
        weekday = dow;
      }
    }
    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
      getParsingFlags(config)._overflowWeeks = true;
    } else if (weekdayOverflow != null) {
      getParsingFlags(config)._overflowWeekday = true;
    } else {
      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
      config._a[YEAR] = temp.year;
      config._dayOfYear = temp.dayOfYear;
    }
  }

  // constant that refers to the ISO standard
  hooks.ISO_8601 = function () {};

  // constant that refers to the RFC 2822 form
  hooks.RFC_2822 = function () {};

  // date from string and format string
  function configFromStringAndFormat(config) {
    // TODO: Move this to another part of the creation flow to prevent circular deps
    if (config._f === hooks.ISO_8601) {
      configFromISO(config);
      return;
    }
    if (config._f === hooks.RFC_2822) {
      configFromRFC2822(config);
      return;
    }
    config._a = [];
    getParsingFlags(config).empty = true;

    // This array is used to make a Date, either with `new Date` or `Date.UTC`
    var string = '' + config._i,
    i,
    parsedInput,
    tokens,
    token,
    skipped,
    stringLength = string.length,
    totalParsedInputLength = 0,
    era,
    tokenLen;

    tokens =
    expandFormat(config._f, config._locale).match(formattingTokens) || [];
    tokenLen = tokens.length;
    for (i = 0; i < tokenLen; i++) {
      token = tokens[i];
      parsedInput = (string.match(getParseRegexForToken(token, config)) ||
      [])[0];
      if (parsedInput) {
        skipped = string.substr(0, string.indexOf(parsedInput));
        if (skipped.length > 0) {
          getParsingFlags(config).unusedInput.push(skipped);
        }
        string = string.slice(
        string.indexOf(parsedInput) + parsedInput.length);

        totalParsedInputLength += parsedInput.length;
      }
      // don't parse if it's not a known token
      if (formatTokenFunctions[token]) {
        if (parsedInput) {
          getParsingFlags(config).empty = false;
        } else {
          getParsingFlags(config).unusedTokens.push(token);
        }
        addTimeToArrayFromToken(token, parsedInput, config);
      } else if (config._strict && !parsedInput) {
        getParsingFlags(config).unusedTokens.push(token);
      }
    }

    // add remaining unparsed input length to the string
    getParsingFlags(config).charsLeftOver =
    stringLength - totalParsedInputLength;
    if (string.length > 0) {
      getParsingFlags(config).unusedInput.push(string);
    }

    // clear _12h flag if hour is <= 12
    if (
    config._a[HOUR] <= 12 &&
    getParsingFlags(config).bigHour === true &&
    config._a[HOUR] > 0)
    {
      getParsingFlags(config).bigHour = undefined;
    }

    getParsingFlags(config).parsedDateParts = config._a.slice(0);
    getParsingFlags(config).meridiem = config._meridiem;
    // handle meridiem
    config._a[HOUR] = meridiemFixWrap(
    config._locale,
    config._a[HOUR],
    config._meridiem);


    // handle era
    era = getParsingFlags(config).era;
    if (era !== null) {
      config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
    }

    configFromArray(config);
    checkOverflow(config);
  }

  function meridiemFixWrap(locale, hour, meridiem) {
    var isPm;

    if (meridiem == null) {
      // nothing to do
      return hour;
    }
    if (locale.meridiemHour != null) {
      return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
      // Fallback
      isPm = locale.isPM(meridiem);
      if (isPm && hour < 12) {
        hour += 12;
      }
      if (!isPm && hour === 12) {
        hour = 0;
      }
      return hour;
    } else {
      // this is not supposed to happen
      return hour;
    }
  }

  // date from string and array of format strings
  function configFromStringAndArray(config) {
    var tempConfig,
    bestMoment,
    scoreToBeat,
    i,
    currentScore,
    validFormatFound,
    bestFormatIsValid = false,
    configfLen = config._f.length;

    if (configfLen === 0) {
      getParsingFlags(config).invalidFormat = true;
      config._d = new Date(NaN);
      return;
    }

    for (i = 0; i < configfLen; i++) {
      currentScore = 0;
      validFormatFound = false;
      tempConfig = copyConfig({}, config);
      if (config._useUTC != null) {
        tempConfig._useUTC = config._useUTC;
      }
      tempConfig._f = config._f[i];
      configFromStringAndFormat(tempConfig);

      if (isValid(tempConfig)) {
        validFormatFound = true;
      }

      // if there is any input that was not parsed add a penalty for that format
      currentScore += getParsingFlags(tempConfig).charsLeftOver;

      //or tokens
      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

      getParsingFlags(tempConfig).score = currentScore;

      if (!bestFormatIsValid) {
        if (
        scoreToBeat == null ||
        currentScore < scoreToBeat ||
        validFormatFound)
        {
          scoreToBeat = currentScore;
          bestMoment = tempConfig;
          if (validFormatFound) {
            bestFormatIsValid = true;
          }
        }
      } else {
        if (currentScore < scoreToBeat) {
          scoreToBeat = currentScore;
          bestMoment = tempConfig;
        }
      }
    }

    extend(config, bestMoment || tempConfig);
  }

  function configFromObject(config) {
    if (config._d) {
      return;
    }

    var i = normalizeObjectUnits(config._i),
    dayOrDate = i.day === undefined ? i.date : i.day;
    config._a = map(
    [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
    function (obj) {
      return obj && parseInt(obj, 10);
    });


    configFromArray(config);
  }

  function createFromConfig(config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
      // Adding is smart enough around DST
      res.add(1, 'd');
      res._nextDay = undefined;
    }

    return res;
  }

  function prepareConfig(config) {
    var input = config._i,
    format = config._f;

    config._locale = config._locale || getLocale(config._l);

    if (input === null || format === undefined && input === '') {
      return createInvalid({ nullInput: true });
    }

    if (typeof input === 'string') {
      config._i = input = config._locale.preparse(input);
    }

    if (isMoment(input)) {
      return new Moment(checkOverflow(input));
    } else if (isDate(input)) {
      config._d = input;
    } else if (isArray(format)) {
      configFromStringAndArray(config);
    } else if (format) {
      configFromStringAndFormat(config);
    } else {
      configFromInput(config);
    }

    if (!isValid(config)) {
      config._d = null;
    }

    return config;
  }

  function configFromInput(config) {
    var input = config._i;
    if (isUndefined(input)) {
      config._d = new Date(hooks.now());
    } else if (isDate(input)) {
      config._d = new Date(input.valueOf());
    } else if (typeof input === 'string') {
      configFromString(config);
    } else if (isArray(input)) {
      config._a = map(input.slice(0), function (obj) {
        return parseInt(obj, 10);
      });
      configFromArray(config);
    } else if (isObject(input)) {
      configFromObject(config);
    } else if (isNumber(input)) {
      // from milliseconds
      config._d = new Date(input);
    } else {
      hooks.createFromInputFallback(config);
    }
  }

  function createLocalOrUTC(input, format, locale, strict, isUTC) {
    var c = {};

    if (format === true || format === false) {
      strict = format;
      format = undefined;
    }

    if (locale === true || locale === false) {
      strict = locale;
      locale = undefined;
    }

    if (
    isObject(input) && isObjectEmpty(input) ||
    isArray(input) && input.length === 0)
    {
      input = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;

    return createFromConfig(c);
  }

  function createLocal(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
  }

  var prototypeMin = deprecate(
  'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
  function () {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other < this ? this : other;
    } else {
      return createInvalid();
    }
  }),

  prototypeMax = deprecate(
  'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
  function () {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other > this ? this : other;
    } else {
      return createInvalid();
    }
  });


  // Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn, moments) {
    var res, i;
    if (moments.length === 1 && isArray(moments[0])) {
      moments = moments[0];
    }
    if (!moments.length) {
      return createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
      if (!moments[i].isValid() || moments[i][fn](res)) {
        res = moments[i];
      }
    }
    return res;
  }

  // TODO: Use [].sort instead?
  function min() {
    var args = [].slice.call(arguments, 0);

    return pickBy('isBefore', args);
  }

  function max() {
    var args = [].slice.call(arguments, 0);

    return pickBy('isAfter', args);
  }

  var now = function now() {
    return Date.now ? Date.now() : +new Date();
  };

  var ordering = [
  'year',
  'quarter',
  'month',
  'week',
  'day',
  'hour',
  'minute',
  'second',
  'millisecond'];


  function isDurationValid(m) {
    var key,
    unitHasDecimal = false,
    i,
    orderLen = ordering.length;
    for (key in m) {
      if (
      hasOwnProp(m, key) &&
      !(
      indexOf.call(ordering, key) !== -1 && (
      m[key] == null || !isNaN(m[key]))))

      {
        return false;
      }
    }

    for (i = 0; i < orderLen; ++i) {
      if (m[ordering[i]]) {
        if (unitHasDecimal) {
          return false; // only allow non-integers for smallest unit
        }
        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
          unitHasDecimal = true;
        }
      }
    }

    return true;
  }

  function isValid$1() {
    return this._isValid;
  }

  function createInvalid$1() {
    return createDuration(NaN);
  }

  function Duration(duration) {
    var normalizedInput = normalizeObjectUnits(duration),
    years = normalizedInput.year || 0,
    quarters = normalizedInput.quarter || 0,
    months = normalizedInput.month || 0,
    weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
    days = normalizedInput.day || 0,
    hours = normalizedInput.hour || 0,
    minutes = normalizedInput.minute || 0,
    seconds = normalizedInput.second || 0,
    milliseconds = normalizedInput.millisecond || 0;

    this._isValid = isDurationValid(normalizedInput);

    // representation for dateAddRemove
    this._milliseconds =
    +milliseconds +
    seconds * 1e3 + // 1000
    minutes * 6e4 + // 1000 * 60
    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
    // Because of dateAddRemove treats 24 hours as different from a
    // day when working around DST, we need to store them separately
    this._days = +days + weeks * 7;
    // It is impossible to translate months into days without knowing
    // which months you are are talking about, so we have to store
    // it separately.
    this._months = +months + quarters * 3 + years * 12;

    this._data = {};

    this._locale = getLocale();

    this._bubble();
  }

  function isDuration(obj) {
    return obj instanceof Duration;
  }

  function absRound(number) {
    if (number < 0) {
      return Math.round(-1 * number) * -1;
    } else {
      return Math.round(number);
    }
  }

  // compare two arrays, return the number of differences
  function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
    lengthDiff = Math.abs(array1.length - array2.length),
    diffs = 0,
    i;
    for (i = 0; i < len; i++) {
      if (
      dontConvert && array1[i] !== array2[i] ||
      !dontConvert && toInt(array1[i]) !== toInt(array2[i]))
      {
        diffs++;
      }
    }
    return diffs + lengthDiff;
  }

  // FORMATTING

  function offset(token, separator) {
    addFormatToken(token, 0, 0, function () {
      var offset = this.utcOffset(),
      sign = '+';
      if (offset < 0) {
        offset = -offset;
        sign = '-';
      }
      return (
        sign +
        zeroFill(~~(offset / 60), 2) +
        separator +
        zeroFill(~~offset % 60, 2));

    });
  }

  offset('Z', ':');
  offset('ZZ', '');

  // PARSING

  addRegexToken('Z', matchShortOffset);
  addRegexToken('ZZ', matchShortOffset);
  addParseToken(['Z', 'ZZ'], function (input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(matchShortOffset, input);
  });

  // HELPERS

  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset = /([\+\-]|\d\d)/gi;

  function offsetFromString(matcher, string) {
    var matches = (string || '').match(matcher),
    chunk,
    parts,
    minutes;

    if (matches === null) {
      return null;
    }

    chunk = matches[matches.length - 1] || [];
    parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    minutes = +(parts[1] * 60) + toInt(parts[2]);

    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
  }

  // Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input, model) {
    var res, diff;
    if (model._isUTC) {
      res = model.clone();
      diff =
      (isMoment(input) || isDate(input) ?
      input.valueOf() :
      createLocal(input).valueOf()) - res.valueOf();
      // Use low-level api, because this fn is low-level api.
      res._d.setTime(res._d.valueOf() + diff);
      hooks.updateOffset(res, false);
      return res;
    } else {
      return createLocal(input).local();
    }
  }

  function getDateOffset(m) {
    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
    // https://github.com/moment/moment/pull/1871
    return -Math.round(m._d.getTimezoneOffset());
  }

  // HOOKS

  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset = function () {};

  // MOMENTS

  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input, keepLocalTime, keepMinutes) {
    var offset = this._offset || 0,
    localAdjust;
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    if (input != null) {
      if (typeof input === 'string') {
        input = offsetFromString(matchShortOffset, input);
        if (input === null) {
          return this;
        }
      } else if (Math.abs(input) < 16 && !keepMinutes) {
        input = input * 60;
      }
      if (!this._isUTC && keepLocalTime) {
        localAdjust = getDateOffset(this);
      }
      this._offset = input;
      this._isUTC = true;
      if (localAdjust != null) {
        this.add(localAdjust, 'm');
      }
      if (offset !== input) {
        if (!keepLocalTime || this._changeInProgress) {
          addSubtract(
          this,
          createDuration(input - offset, 'm'),
          1,
          false);

        } else if (!this._changeInProgress) {
          this._changeInProgress = true;
          hooks.updateOffset(this, true);
          this._changeInProgress = null;
        }
      }
      return this;
    } else {
      return this._isUTC ? offset : getDateOffset(this);
    }
  }

  function getSetZone(input, keepLocalTime) {
    if (input != null) {
      if (typeof input !== 'string') {
        input = -input;
      }

      this.utcOffset(input, keepLocalTime);

      return this;
    } else {
      return -this.utcOffset();
    }
  }

  function setOffsetToUTC(keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
  }

  function setOffsetToLocal(keepLocalTime) {
    if (this._isUTC) {
      this.utcOffset(0, keepLocalTime);
      this._isUTC = false;

      if (keepLocalTime) {
        this.subtract(getDateOffset(this), 'm');
      }
    }
    return this;
  }

  function setOffsetToParsedOffset() {
    if (this._tzm != null) {
      this.utcOffset(this._tzm, false, true);
    } else if (typeof this._i === 'string') {
      var tZone = offsetFromString(matchOffset, this._i);
      if (tZone != null) {
        this.utcOffset(tZone);
      } else {
        this.utcOffset(0, true);
      }
    }
    return this;
  }

  function hasAlignedHourOffset(input) {
    if (!this.isValid()) {
      return false;
    }
    input = input ? createLocal(input).utcOffset() : 0;

    return (this.utcOffset() - input) % 60 === 0;
  }

  function isDaylightSavingTime() {
    return (
      this.utcOffset() > this.clone().month(0).utcOffset() ||
      this.utcOffset() > this.clone().month(5).utcOffset());

  }

  function isDaylightSavingTimeShifted() {
    if (!isUndefined(this._isDSTShifted)) {
      return this._isDSTShifted;
    }

    var c = {},
    other;

    copyConfig(c, this);
    c = prepareConfig(c);

    if (c._a) {
      other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
      this._isDSTShifted =
      this.isValid() && compareArrays(c._a, other.toArray()) > 0;
    } else {
      this._isDSTShifted = false;
    }

    return this._isDSTShifted;
  }

  function isLocal() {
    return this.isValid() ? !this._isUTC : false;
  }

  function isUtcOffset() {
    return this.isValid() ? this._isUTC : false;
  }

  function isUtc() {
    return this.isValid() ? this._isUTC && this._offset === 0 : false;
  }

  // ASP.NET json date format regex
  var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
  // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  isoRegex =
  /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

  function createDuration(input, key) {
    var duration = input,
    // matching against regexp is expensive, do it on demand
    match = null,
    sign,
    ret,
    diffRes;

    if (isDuration(input)) {
      duration = {
        ms: input._milliseconds,
        d: input._days,
        M: input._months };

    } else if (isNumber(input) || !isNaN(+input)) {
      duration = {};
      if (key) {
        duration[key] = +input;
      } else {
        duration.milliseconds = +input;
      }
    } else if (match = aspNetRegex.exec(input)) {
      sign = match[1] === '-' ? -1 : 1;
      duration = {
        y: 0,
        d: toInt(match[DATE]) * sign,
        h: toInt(match[HOUR]) * sign,
        m: toInt(match[MINUTE]) * sign,
        s: toInt(match[SECOND]) * sign,
        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
      };
    } else if (match = isoRegex.exec(input)) {
      sign = match[1] === '-' ? -1 : 1;
      duration = {
        y: parseIso(match[2], sign),
        M: parseIso(match[3], sign),
        w: parseIso(match[4], sign),
        d: parseIso(match[5], sign),
        h: parseIso(match[6], sign),
        m: parseIso(match[7], sign),
        s: parseIso(match[8], sign) };

    } else if (duration == null) {
      // checks for null or undefined
      duration = {};
    } else if (
    typeof duration === 'object' && (
    'from' in duration || 'to' in duration))
    {
      diffRes = momentsDifference(
      createLocal(duration.from),
      createLocal(duration.to));


      duration = {};
      duration.ms = diffRes.milliseconds;
      duration.M = diffRes.months;
    }

    ret = new Duration(duration);

    if (isDuration(input) && hasOwnProp(input, '_locale')) {
      ret._locale = input._locale;
    }

    if (isDuration(input) && hasOwnProp(input, '_isValid')) {
      ret._isValid = input._isValid;
    }

    return ret;
  }

  createDuration.fn = Duration.prototype;
  createDuration.invalid = createInvalid$1;

  function parseIso(inp, sign) {
    // We'd normally use ~~inp for this, but unfortunately it also
    // converts floats to ints.
    // inp may be undefined, so careful calling replace on it.
    var res = inp && parseFloat(inp.replace(',', '.'));
    // apply sign while we're at it
    return (isNaN(res) ? 0 : res) * sign;
  }

  function positiveMomentsDifference(base, other) {
    var res = {};

    res.months =
    other.month() - base.month() + (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
      --res.months;
    }

    res.milliseconds = +other - +base.clone().add(res.months, 'M');

    return res;
  }

  function momentsDifference(base, other) {
    var res;
    if (!(base.isValid() && other.isValid())) {
      return { milliseconds: 0, months: 0 };
    }

    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
      res = positiveMomentsDifference(base, other);
    } else {
      res = positiveMomentsDifference(other, base);
      res.milliseconds = -res.milliseconds;
      res.months = -res.months;
    }

    return res;
  }

  // TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction, name) {
    return function (val, period) {
      var dur, tmp;
      //invert the arguments, but complain about it
      if (period !== null && !isNaN(+period)) {
        deprecateSimple(
        name,
        'moment().' +
        name +
        '(period, number) is deprecated. Please use moment().' +
        name +
        '(number, period). ' +
        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');

        tmp = val;
        val = period;
        period = tmp;
      }

      dur = createDuration(val, period);
      addSubtract(this, dur, direction);
      return this;
    };
  }

  function addSubtract(mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
    days = absRound(duration._days),
    months = absRound(duration._months);

    if (!mom.isValid()) {
      // No op
      return;
    }

    updateOffset = updateOffset == null ? true : updateOffset;

    if (months) {
      setMonth(mom, get(mom, 'Month') + months * isAdding);
    }
    if (days) {
      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
    }
    if (milliseconds) {
      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }
    if (updateOffset) {
      hooks.updateOffset(mom, days || months);
    }
  }

  var add = createAdder(1, 'add'),
  subtract = createAdder(-1, 'subtract');

  function isString(input) {
    return typeof input === 'string' || input instanceof String;
  }

  // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
  function isMomentInput(input) {
    return (
      isMoment(input) ||
      isDate(input) ||
      isString(input) ||
      isNumber(input) ||
      isNumberOrStringArray(input) ||
      isMomentInputObject(input) ||
      input === null ||
      input === undefined);

  }

  function isMomentInputObject(input) {
    var objectTest = isObject(input) && !isObjectEmpty(input),
    propertyTest = false,
    properties = [
    'years',
    'year',
    'y',
    'months',
    'month',
    'M',
    'days',
    'day',
    'd',
    'dates',
    'date',
    'D',
    'hours',
    'hour',
    'h',
    'minutes',
    'minute',
    'm',
    'seconds',
    'second',
    's',
    'milliseconds',
    'millisecond',
    'ms'],

    i,
    property,
    propertyLen = properties.length;

    for (i = 0; i < propertyLen; i += 1) {
      property = properties[i];
      propertyTest = propertyTest || hasOwnProp(input, property);
    }

    return objectTest && propertyTest;
  }

  function isNumberOrStringArray(input) {
    var arrayTest = isArray(input),
    dataTypeTest = false;
    if (arrayTest) {
      dataTypeTest =
      input.filter(function (item) {
        return !isNumber(item) && isString(input);
      }).length === 0;
    }
    return arrayTest && dataTypeTest;
  }

  function isCalendarSpec(input) {
    var objectTest = isObject(input) && !isObjectEmpty(input),
    propertyTest = false,
    properties = [
    'sameDay',
    'nextDay',
    'lastDay',
    'nextWeek',
    'lastWeek',
    'sameElse'],

    i,
    property;

    for (i = 0; i < properties.length; i += 1) {
      property = properties[i];
      propertyTest = propertyTest || hasOwnProp(input, property);
    }

    return objectTest && propertyTest;
  }

  function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ?
    'sameElse' :
    diff < -1 ?
    'lastWeek' :
    diff < 0 ?
    'lastDay' :
    diff < 1 ?
    'sameDay' :
    diff < 2 ?
    'nextDay' :
    diff < 7 ?
    'nextWeek' :
    'sameElse';
  }

  function calendar$1(time, formats) {
    // Support for single parameter, formats only overload to the calendar function
    if (arguments.length === 1) {
      if (!arguments[0]) {
        time = undefined;
        formats = undefined;
      } else if (isMomentInput(arguments[0])) {
        time = arguments[0];
        formats = undefined;
      } else if (isCalendarSpec(arguments[0])) {
        formats = arguments[0];
        time = undefined;
      }
    }
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || createLocal(),
    sod = cloneWithOffset(now, this).startOf('day'),
    format = hooks.calendarFormat(this, sod) || 'sameElse',
    output =
    formats && (
    isFunction(formats[format]) ?
    formats[format].call(this, now) :
    formats[format]);

    return this.format(
    output || this.localeData().calendar(format, this, createLocal(now)));

  }

  function clone() {
    return new Moment(this);
  }

  function isAfter(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(units) || 'millisecond';
    if (units === 'millisecond') {
      return this.valueOf() > localInput.valueOf();
    } else {
      return localInput.valueOf() < this.clone().startOf(units).valueOf();
    }
  }

  function isBefore(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(units) || 'millisecond';
    if (units === 'millisecond') {
      return this.valueOf() < localInput.valueOf();
    } else {
      return this.clone().endOf(units).valueOf() < localInput.valueOf();
    }
  }

  function isBetween(from, to, units, inclusivity) {
    var localFrom = isMoment(from) ? from : createLocal(from),
    localTo = isMoment(to) ? to : createLocal(to);
    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
      return false;
    }
    inclusivity = inclusivity || '()';
    return (
      (inclusivity[0] === '(' ?
      this.isAfter(localFrom, units) :
      !this.isBefore(localFrom, units)) && (
      inclusivity[1] === ')' ?
      this.isBefore(localTo, units) :
      !this.isAfter(localTo, units)));

  }

  function isSame(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input),
    inputMs;
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(units) || 'millisecond';
    if (units === 'millisecond') {
      return this.valueOf() === localInput.valueOf();
    } else {
      inputMs = localInput.valueOf();
      return (
        this.clone().startOf(units).valueOf() <= inputMs &&
        inputMs <= this.clone().endOf(units).valueOf());

    }
  }

  function isSameOrAfter(input, units) {
    return this.isSame(input, units) || this.isAfter(input, units);
  }

  function isSameOrBefore(input, units) {
    return this.isSame(input, units) || this.isBefore(input, units);
  }

  function diff(input, units, asFloat) {
    var that, zoneDelta, output;

    if (!this.isValid()) {
      return NaN;
    }

    that = cloneWithOffset(input, this);

    if (!that.isValid()) {
      return NaN;
    }

    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

    units = normalizeUnits(units);

    switch (units) {
      case 'year':
        output = monthDiff(this, that) / 12;
        break;
      case 'month':
        output = monthDiff(this, that);
        break;
      case 'quarter':
        output = monthDiff(this, that) / 3;
        break;
      case 'second':
        output = (this - that) / 1e3;
        break; // 1000
      case 'minute':
        output = (this - that) / 6e4;
        break; // 1000 * 60
      case 'hour':
        output = (this - that) / 36e5;
        break; // 1000 * 60 * 60
      case 'day':
        output = (this - that - zoneDelta) / 864e5;
        break; // 1000 * 60 * 60 * 24, negate dst
      case 'week':
        output = (this - that - zoneDelta) / 6048e5;
        break; // 1000 * 60 * 60 * 24 * 7, negate dst
      default:
        output = this - that;}


    return asFloat ? output : absFloor(output);
  }

  function monthDiff(a, b) {
    if (a.date() < b.date()) {
      // end-of-month calculations work correct when the start month has more
      // days than the end month.
      return -monthDiff(b, a);
    }
    // difference in months
    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
    // b is in (anchor - 1 month, anchor + 1 month)
    anchor = a.clone().add(wholeMonthDiff, 'months'),
    anchor2,
    adjust;

    if (b - anchor < 0) {
      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
      // linear across the month
      adjust = (b - anchor) / (anchor - anchor2);
    } else {
      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
      // linear across the month
      adjust = (b - anchor) / (anchor2 - anchor);
    }

    //check for negative zero, return zero if negative zero
    return -(wholeMonthDiff + adjust) || 0;
  }

  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

  function toString() {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
  }

  function toISOString(keepOffset) {
    if (!this.isValid()) {
      return null;
    }
    var utc = keepOffset !== true,
    m = utc ? this.clone().utc() : this;
    if (m.year() < 0 || m.year() > 9999) {
      return formatMoment(
      m,
      utc ?
      'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' :
      'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');

    }
    if (isFunction(Date.prototype.toISOString)) {
      // native implementation is ~50x faster, use it when we can
      if (utc) {
        return this.toDate().toISOString();
      } else {
        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).
        toISOString().
        replace('Z', formatMoment(m, 'Z'));
      }
    }
    return formatMoment(
    m,
    utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');

  }

  /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
  function inspect() {
    if (!this.isValid()) {
      return 'moment.invalid(/* ' + this._i + ' */)';
    }
    var func = 'moment',
    zone = '',
    prefix,
    year,
    datetime,
    suffix;
    if (!this.isLocal()) {
      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
      zone = 'Z';
    }
    prefix = '[' + func + '("]';
    year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
    datetime = '-MM-DD[T]HH:mm:ss.SSS';
    suffix = zone + '[")]';

    return this.format(prefix + year + datetime + suffix);
  }

  function format(inputString) {
    if (!inputString) {
      inputString = this.isUtc() ?
      hooks.defaultFormatUtc :
      hooks.defaultFormat;
    }
    var output = formatMoment(this, inputString);
    return this.localeData().postformat(output);
  }

  function from(time, withoutSuffix) {
    if (
    this.isValid() && (
    isMoment(time) && time.isValid() || createLocal(time).isValid()))
    {
      return createDuration({ to: this, from: time }).
      locale(this.locale()).
      humanize(!withoutSuffix);
    } else {
      return this.localeData().invalidDate();
    }
  }

  function fromNow(withoutSuffix) {
    return this.from(createLocal(), withoutSuffix);
  }

  function to(time, withoutSuffix) {
    if (
    this.isValid() && (
    isMoment(time) && time.isValid() || createLocal(time).isValid()))
    {
      return createDuration({ from: this, to: time }).
      locale(this.locale()).
      humanize(!withoutSuffix);
    } else {
      return this.localeData().invalidDate();
    }
  }

  function toNow(withoutSuffix) {
    return this.to(createLocal(), withoutSuffix);
  }

  // If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale(key) {
    var newLocaleData;

    if (key === undefined) {
      return this._locale._abbr;
    } else {
      newLocaleData = getLocale(key);
      if (newLocaleData != null) {
        this._locale = newLocaleData;
      }
      return this;
    }
  }

  var lang = deprecate(
  'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
  function (key) {
    if (key === undefined) {
      return this.localeData();
    } else {
      return this.locale(key);
    }
  });


  function localeData() {
    return this._locale;
  }

  var MS_PER_SECOND = 1000,
  MS_PER_MINUTE = 60 * MS_PER_SECOND,
  MS_PER_HOUR = 60 * MS_PER_MINUTE,
  MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

  // actual modulo - handles negative numbers (for dates before 1970):
  function mod$1(dividend, divisor) {
    return (dividend % divisor + divisor) % divisor;
  }

  function localStartOfDate(y, m, d) {
    // the date constructor remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0) {
      // preserve leap years using a full 400 year cycle, then reset
      return new Date(y + 400, m, d) - MS_PER_400_YEARS;
    } else {
      return new Date(y, m, d).valueOf();
    }
  }

  function utcStartOfDate(y, m, d) {
    // Date.UTC remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0) {
      // preserve leap years using a full 400 year cycle, then reset
      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
    } else {
      return Date.UTC(y, m, d);
    }
  }

  function startOf(units) {
    var time, startOfDate;
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond' || !this.isValid()) {
      return this;
    }

    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

    switch (units) {
      case 'year':
        time = startOfDate(this.year(), 0, 1);
        break;
      case 'quarter':
        time = startOfDate(
        this.year(),
        this.month() - this.month() % 3,
        1);

        break;
      case 'month':
        time = startOfDate(this.year(), this.month(), 1);
        break;
      case 'week':
        time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday());

        break;
      case 'isoWeek':
        time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1));

        break;
      case 'day':
      case 'date':
        time = startOfDate(this.year(), this.month(), this.date());
        break;
      case 'hour':
        time = this._d.valueOf();
        time -= mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR);

        break;
      case 'minute':
        time = this._d.valueOf();
        time -= mod$1(time, MS_PER_MINUTE);
        break;
      case 'second':
        time = this._d.valueOf();
        time -= mod$1(time, MS_PER_SECOND);
        break;}


    this._d.setTime(time);
    hooks.updateOffset(this, true);
    return this;
  }

  function endOf(units) {
    var time, startOfDate;
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond' || !this.isValid()) {
      return this;
    }

    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

    switch (units) {
      case 'year':
        time = startOfDate(this.year() + 1, 0, 1) - 1;
        break;
      case 'quarter':
        time =
        startOfDate(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1) -
        1;
        break;
      case 'month':
        time = startOfDate(this.year(), this.month() + 1, 1) - 1;
        break;
      case 'week':
        time =
        startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7) -
        1;
        break;
      case 'isoWeek':
        time =
        startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7) -
        1;
        break;
      case 'day':
      case 'date':
        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
        break;
      case 'hour':
        time = this._d.valueOf();
        time +=
        MS_PER_HOUR -
        mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR) -

        1;
        break;
      case 'minute':
        time = this._d.valueOf();
        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
        break;
      case 'second':
        time = this._d.valueOf();
        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
        break;}


    this._d.setTime(time);
    hooks.updateOffset(this, true);
    return this;
  }

  function valueOf() {
    return this._d.valueOf() - (this._offset || 0) * 60000;
  }

  function unix() {
    return Math.floor(this.valueOf() / 1000);
  }

  function toDate() {
    return new Date(this.valueOf());
  }

  function toArray() {
    var m = this;
    return [
    m.year(),
    m.month(),
    m.date(),
    m.hour(),
    m.minute(),
    m.second(),
    m.millisecond()];

  }

  function toObject() {
    var m = this;
    return {
      years: m.year(),
      months: m.month(),
      date: m.date(),
      hours: m.hours(),
      minutes: m.minutes(),
      seconds: m.seconds(),
      milliseconds: m.milliseconds() };

  }

  function toJSON() {
    // new Date(NaN).toJSON() === null
    return this.isValid() ? this.toISOString() : null;
  }

  function isValid$2() {
    return isValid(this);
  }

  function parsingFlags() {
    return extend({}, getParsingFlags(this));
  }

  function invalidAt() {
    return getParsingFlags(this).overflow;
  }

  function creationData() {
    return {
      input: this._i,
      format: this._f,
      locale: this._locale,
      isUTC: this._isUTC,
      strict: this._strict };

  }

  addFormatToken('N', 0, 0, 'eraAbbr');
  addFormatToken('NN', 0, 0, 'eraAbbr');
  addFormatToken('NNN', 0, 0, 'eraAbbr');
  addFormatToken('NNNN', 0, 0, 'eraName');
  addFormatToken('NNNNN', 0, 0, 'eraNarrow');

  addFormatToken('y', ['y', 1], 'yo', 'eraYear');
  addFormatToken('y', ['yy', 2], 0, 'eraYear');
  addFormatToken('y', ['yyy', 3], 0, 'eraYear');
  addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

  addRegexToken('N', matchEraAbbr);
  addRegexToken('NN', matchEraAbbr);
  addRegexToken('NNN', matchEraAbbr);
  addRegexToken('NNNN', matchEraName);
  addRegexToken('NNNNN', matchEraNarrow);

  addParseToken(
  ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],
  function (input, array, config, token) {
    var era = config._locale.erasParse(input, token, config._strict);
    if (era) {
      getParsingFlags(config).era = era;
    } else {
      getParsingFlags(config).invalidEra = input;
    }
  });


  addRegexToken('y', matchUnsigned);
  addRegexToken('yy', matchUnsigned);
  addRegexToken('yyy', matchUnsigned);
  addRegexToken('yyyy', matchUnsigned);
  addRegexToken('yo', matchEraYearOrdinal);

  addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
  addParseToken(['yo'], function (input, array, config, token) {
    var match;
    if (config._locale._eraYearOrdinalRegex) {
      match = input.match(config._locale._eraYearOrdinalRegex);
    }

    if (config._locale.eraYearOrdinalParse) {
      array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
    } else {
      array[YEAR] = parseInt(input, 10);
    }
  });

  function localeEras(m, format) {
    var i,
    l,
    date,
    eras = this._eras || getLocale('en')._eras;
    for (i = 0, l = eras.length; i < l; ++i) {
      switch (typeof eras[i].since) {
        case 'string':
          // truncate time
          date = hooks(eras[i].since).startOf('day');
          eras[i].since = date.valueOf();
          break;}


      switch (typeof eras[i].until) {
        case 'undefined':
          eras[i].until = +Infinity;
          break;
        case 'string':
          // truncate time
          date = hooks(eras[i].until).startOf('day').valueOf();
          eras[i].until = date.valueOf();
          break;}

    }
    return eras;
  }

  function localeErasParse(eraName, format, strict) {
    var i,
    l,
    eras = this.eras(),
    name,
    abbr,
    narrow;
    eraName = eraName.toUpperCase();

    for (i = 0, l = eras.length; i < l; ++i) {
      name = eras[i].name.toUpperCase();
      abbr = eras[i].abbr.toUpperCase();
      narrow = eras[i].narrow.toUpperCase();

      if (strict) {
        switch (format) {
          case 'N':
          case 'NN':
          case 'NNN':
            if (abbr === eraName) {
              return eras[i];
            }
            break;

          case 'NNNN':
            if (name === eraName) {
              return eras[i];
            }
            break;

          case 'NNNNN':
            if (narrow === eraName) {
              return eras[i];
            }
            break;}

      } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
        return eras[i];
      }
    }
  }

  function localeErasConvertYear(era, year) {
    var dir = era.since <= era.until ? +1 : -1;
    if (year === undefined) {
      return hooks(era.since).year();
    } else {
      return hooks(era.since).year() + (year - era.offset) * dir;
    }
  }

  function getEraName() {
    var i,
    l,
    val,
    eras = this.localeData().eras();
    for (i = 0, l = eras.length; i < l; ++i) {
      // truncate time
      val = this.clone().startOf('day').valueOf();

      if (eras[i].since <= val && val <= eras[i].until) {
        return eras[i].name;
      }
      if (eras[i].until <= val && val <= eras[i].since) {
        return eras[i].name;
      }
    }

    return '';
  }

  function getEraNarrow() {
    var i,
    l,
    val,
    eras = this.localeData().eras();
    for (i = 0, l = eras.length; i < l; ++i) {
      // truncate time
      val = this.clone().startOf('day').valueOf();

      if (eras[i].since <= val && val <= eras[i].until) {
        return eras[i].narrow;
      }
      if (eras[i].until <= val && val <= eras[i].since) {
        return eras[i].narrow;
      }
    }

    return '';
  }

  function getEraAbbr() {
    var i,
    l,
    val,
    eras = this.localeData().eras();
    for (i = 0, l = eras.length; i < l; ++i) {
      // truncate time
      val = this.clone().startOf('day').valueOf();

      if (eras[i].since <= val && val <= eras[i].until) {
        return eras[i].abbr;
      }
      if (eras[i].until <= val && val <= eras[i].since) {
        return eras[i].abbr;
      }
    }

    return '';
  }

  function getEraYear() {
    var i,
    l,
    dir,
    val,
    eras = this.localeData().eras();
    for (i = 0, l = eras.length; i < l; ++i) {
      dir = eras[i].since <= eras[i].until ? +1 : -1;

      // truncate time
      val = this.clone().startOf('day').valueOf();

      if (
      eras[i].since <= val && val <= eras[i].until ||
      eras[i].until <= val && val <= eras[i].since)
      {
        return (
          (this.year() - hooks(eras[i].since).year()) * dir +
          eras[i].offset);

      }
    }

    return this.year();
  }

  function erasNameRegex(isStrict) {
    if (!hasOwnProp(this, '_erasNameRegex')) {
      computeErasParse.call(this);
    }
    return isStrict ? this._erasNameRegex : this._erasRegex;
  }

  function erasAbbrRegex(isStrict) {
    if (!hasOwnProp(this, '_erasAbbrRegex')) {
      computeErasParse.call(this);
    }
    return isStrict ? this._erasAbbrRegex : this._erasRegex;
  }

  function erasNarrowRegex(isStrict) {
    if (!hasOwnProp(this, '_erasNarrowRegex')) {
      computeErasParse.call(this);
    }
    return isStrict ? this._erasNarrowRegex : this._erasRegex;
  }

  function matchEraAbbr(isStrict, locale) {
    return locale.erasAbbrRegex(isStrict);
  }

  function matchEraName(isStrict, locale) {
    return locale.erasNameRegex(isStrict);
  }

  function matchEraNarrow(isStrict, locale) {
    return locale.erasNarrowRegex(isStrict);
  }

  function matchEraYearOrdinal(isStrict, locale) {
    return locale._eraYearOrdinalRegex || matchUnsigned;
  }

  function computeErasParse() {
    var abbrPieces = [],
    namePieces = [],
    narrowPieces = [],
    mixedPieces = [],
    i,
    l,
    eras = this.eras();

    for (i = 0, l = eras.length; i < l; ++i) {
      namePieces.push(regexEscape(eras[i].name));
      abbrPieces.push(regexEscape(eras[i].abbr));
      narrowPieces.push(regexEscape(eras[i].narrow));

      mixedPieces.push(regexEscape(eras[i].name));
      mixedPieces.push(regexEscape(eras[i].abbr));
      mixedPieces.push(regexEscape(eras[i].narrow));
    }

    this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
    this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
    this._erasNarrowRegex = new RegExp(
    '^(' + narrowPieces.join('|') + ')',
    'i');

  }

  // FORMATTING

  addFormatToken(0, ['gg', 2], 0, function () {
    return this.weekYear() % 100;
  });

  addFormatToken(0, ['GG', 2], 0, function () {
    return this.isoWeekYear() % 100;
  });

  function addWeekYearFormatToken(token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
  }

  addWeekYearFormatToken('gggg', 'weekYear');
  addWeekYearFormatToken('ggggg', 'weekYear');
  addWeekYearFormatToken('GGGG', 'isoWeekYear');
  addWeekYearFormatToken('GGGGG', 'isoWeekYear');

  // ALIASES

  addUnitAlias('weekYear', 'gg');
  addUnitAlias('isoWeekYear', 'GG');

  // PRIORITY

  addUnitPriority('weekYear', 1);
  addUnitPriority('isoWeekYear', 1);

  // PARSING

  addRegexToken('G', matchSigned);
  addRegexToken('g', matchSigned);
  addRegexToken('GG', match1to2, match2);
  addRegexToken('gg', match1to2, match2);
  addRegexToken('GGGG', match1to4, match4);
  addRegexToken('gggg', match1to4, match4);
  addRegexToken('GGGGG', match1to6, match6);
  addRegexToken('ggggg', match1to6, match6);

  addWeekParseToken(
  ['gggg', 'ggggg', 'GGGG', 'GGGGG'],
  function (input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input);
  });


  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
    week[token] = hooks.parseTwoDigitYear(input);
  });

  // MOMENTS

  function getSetWeekYear(input) {
    return getSetWeekYearHelper.call(
    this,
    input,
    this.week(),
    this.weekday(),
    this.localeData()._week.dow,
    this.localeData()._week.doy);

  }

  function getSetISOWeekYear(input) {
    return getSetWeekYearHelper.call(
    this,
    input,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4);

  }

  function getISOWeeksInYear() {
    return weeksInYear(this.year(), 1, 4);
  }

  function getISOWeeksInISOWeekYear() {
    return weeksInYear(this.isoWeekYear(), 1, 4);
  }

  function getWeeksInYear() {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
  }

  function getWeeksInWeekYear() {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
  }

  function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    if (input == null) {
      return weekOfYear(this, dow, doy).year;
    } else {
      weeksTarget = weeksInYear(input, dow, doy);
      if (week > weeksTarget) {
        week = weeksTarget;
      }
      return setWeekAll.call(this, input, week, weekday, dow, doy);
    }
  }

  function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
    date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

    this.year(date.getUTCFullYear());
    this.month(date.getUTCMonth());
    this.date(date.getUTCDate());
    return this;
  }

  // FORMATTING

  addFormatToken('Q', 0, 'Qo', 'quarter');

  // ALIASES

  addUnitAlias('quarter', 'Q');

  // PRIORITY

  addUnitPriority('quarter', 7);

  // PARSING

  addRegexToken('Q', match1);
  addParseToken('Q', function (input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
  });

  // MOMENTS

  function getSetQuarter(input) {
    return input == null ?
    Math.ceil((this.month() + 1) / 3) :
    this.month((input - 1) * 3 + this.month() % 3);
  }

  // FORMATTING

  addFormatToken('D', ['DD', 2], 'Do', 'date');

  // ALIASES

  addUnitAlias('date', 'D');

  // PRIORITY
  addUnitPriority('date', 9);

  // PARSING

  addRegexToken('D', match1to2);
  addRegexToken('DD', match1to2, match2);
  addRegexToken('Do', function (isStrict, locale) {
    // TODO: Remove "ordinalParse" fallback in next major release.
    return isStrict ?
    locale._dayOfMonthOrdinalParse || locale._ordinalParse :
    locale._dayOfMonthOrdinalParseLenient;
  });

  addParseToken(['D', 'DD'], DATE);
  addParseToken('Do', function (input, array) {
    array[DATE] = toInt(input.match(match1to2)[0]);
  });

  // MOMENTS

  var getSetDayOfMonth = makeGetSet('Date', true);

  // FORMATTING

  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

  // ALIASES

  addUnitAlias('dayOfYear', 'DDD');

  // PRIORITY
  addUnitPriority('dayOfYear', 4);

  // PARSING

  addRegexToken('DDD', match1to3);
  addRegexToken('DDDD', match3);
  addParseToken(['DDD', 'DDDD'], function (input, array, config) {
    config._dayOfYear = toInt(input);
  });

  // HELPERS

  // MOMENTS

  function getSetDayOfYear(input) {
    var dayOfYear =
    Math.round(
    (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) +
    1;
    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
  }

  // FORMATTING

  addFormatToken('m', ['mm', 2], 0, 'minute');

  // ALIASES

  addUnitAlias('minute', 'm');

  // PRIORITY

  addUnitPriority('minute', 14);

  // PARSING

  addRegexToken('m', match1to2);
  addRegexToken('mm', match1to2, match2);
  addParseToken(['m', 'mm'], MINUTE);

  // MOMENTS

  var getSetMinute = makeGetSet('Minutes', false);

  // FORMATTING

  addFormatToken('s', ['ss', 2], 0, 'second');

  // ALIASES

  addUnitAlias('second', 's');

  // PRIORITY

  addUnitPriority('second', 15);

  // PARSING

  addRegexToken('s', match1to2);
  addRegexToken('ss', match1to2, match2);
  addParseToken(['s', 'ss'], SECOND);

  // MOMENTS

  var getSetSecond = makeGetSet('Seconds', false);

  // FORMATTING

  addFormatToken('S', 0, 0, function () {
    return ~~(this.millisecond() / 100);
  });

  addFormatToken(0, ['SS', 2], 0, function () {
    return ~~(this.millisecond() / 10);
  });

  addFormatToken(0, ['SSS', 3], 0, 'millisecond');
  addFormatToken(0, ['SSSS', 4], 0, function () {
    return this.millisecond() * 10;
  });
  addFormatToken(0, ['SSSSS', 5], 0, function () {
    return this.millisecond() * 100;
  });
  addFormatToken(0, ['SSSSSS', 6], 0, function () {
    return this.millisecond() * 1000;
  });
  addFormatToken(0, ['SSSSSSS', 7], 0, function () {
    return this.millisecond() * 10000;
  });
  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
    return this.millisecond() * 100000;
  });
  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
    return this.millisecond() * 1000000;
  });

  // ALIASES

  addUnitAlias('millisecond', 'ms');

  // PRIORITY

  addUnitPriority('millisecond', 16);

  // PARSING

  addRegexToken('S', match1to3, match1);
  addRegexToken('SS', match1to3, match2);
  addRegexToken('SSS', match1to3, match3);

  var token, getSetMillisecond;
  for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
  }

  function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
  }

  for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
  }

  getSetMillisecond = makeGetSet('Milliseconds', false);

  // FORMATTING

  addFormatToken('z', 0, 0, 'zoneAbbr');
  addFormatToken('zz', 0, 0, 'zoneName');

  // MOMENTS

  function getZoneAbbr() {
    return this._isUTC ? 'UTC' : '';
  }

  function getZoneName() {
    return this._isUTC ? 'Coordinated Universal Time' : '';
  }

  var proto = Moment.prototype;

  proto.add = add;
  proto.calendar = calendar$1;
  proto.clone = clone;
  proto.diff = diff;
  proto.endOf = endOf;
  proto.format = format;
  proto.from = from;
  proto.fromNow = fromNow;
  proto.to = to;
  proto.toNow = toNow;
  proto.get = stringGet;
  proto.invalidAt = invalidAt;
  proto.isAfter = isAfter;
  proto.isBefore = isBefore;
  proto.isBetween = isBetween;
  proto.isSame = isSame;
  proto.isSameOrAfter = isSameOrAfter;
  proto.isSameOrBefore = isSameOrBefore;
  proto.isValid = isValid$2;
  proto.lang = lang;
  proto.locale = locale;
  proto.localeData = localeData;
  proto.max = prototypeMax;
  proto.min = prototypeMin;
  proto.parsingFlags = parsingFlags;
  proto.set = stringSet;
  proto.startOf = startOf;
  proto.subtract = subtract;
  proto.toArray = toArray;
  proto.toObject = toObject;
  proto.toDate = toDate;
  proto.toISOString = toISOString;
  proto.inspect = inspect;
  if (typeof Symbol !== 'undefined' && Symbol.for != null) {
    proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
      return 'Moment<' + this.format() + '>';
    };
  }
  proto.toJSON = toJSON;
  proto.toString = toString;
  proto.unix = unix;
  proto.valueOf = valueOf;
  proto.creationData = creationData;
  proto.eraName = getEraName;
  proto.eraNarrow = getEraNarrow;
  proto.eraAbbr = getEraAbbr;
  proto.eraYear = getEraYear;
  proto.year = getSetYear;
  proto.isLeapYear = getIsLeapYear;
  proto.weekYear = getSetWeekYear;
  proto.isoWeekYear = getSetISOWeekYear;
  proto.quarter = proto.quarters = getSetQuarter;
  proto.month = getSetMonth;
  proto.daysInMonth = getDaysInMonth;
  proto.week = proto.weeks = getSetWeek;
  proto.isoWeek = proto.isoWeeks = getSetISOWeek;
  proto.weeksInYear = getWeeksInYear;
  proto.weeksInWeekYear = getWeeksInWeekYear;
  proto.isoWeeksInYear = getISOWeeksInYear;
  proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
  proto.date = getSetDayOfMonth;
  proto.day = proto.days = getSetDayOfWeek;
  proto.weekday = getSetLocaleDayOfWeek;
  proto.isoWeekday = getSetISODayOfWeek;
  proto.dayOfYear = getSetDayOfYear;
  proto.hour = proto.hours = getSetHour;
  proto.minute = proto.minutes = getSetMinute;
  proto.second = proto.seconds = getSetSecond;
  proto.millisecond = proto.milliseconds = getSetMillisecond;
  proto.utcOffset = getSetOffset;
  proto.utc = setOffsetToUTC;
  proto.local = setOffsetToLocal;
  proto.parseZone = setOffsetToParsedOffset;
  proto.hasAlignedHourOffset = hasAlignedHourOffset;
  proto.isDST = isDaylightSavingTime;
  proto.isLocal = isLocal;
  proto.isUtcOffset = isUtcOffset;
  proto.isUtc = isUtc;
  proto.isUTC = isUtc;
  proto.zoneAbbr = getZoneAbbr;
  proto.zoneName = getZoneName;
  proto.dates = deprecate(
  'dates accessor is deprecated. Use date instead.',
  getSetDayOfMonth);

  proto.months = deprecate(
  'months accessor is deprecated. Use month instead',
  getSetMonth);

  proto.years = deprecate(
  'years accessor is deprecated. Use year instead',
  getSetYear);

  proto.zone = deprecate(
  'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
  getSetZone);

  proto.isDSTShifted = deprecate(
  'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
  isDaylightSavingTimeShifted);


  function createUnix(input) {
    return createLocal(input * 1000);
  }

  function createInZone() {
    return createLocal.apply(null, arguments).parseZone();
  }

  function preParsePostFormat(string) {
    return string;
  }

  var proto$1 = Locale.prototype;

  proto$1.calendar = calendar;
  proto$1.longDateFormat = longDateFormat;
  proto$1.invalidDate = invalidDate;
  proto$1.ordinal = ordinal;
  proto$1.preparse = preParsePostFormat;
  proto$1.postformat = preParsePostFormat;
  proto$1.relativeTime = relativeTime;
  proto$1.pastFuture = pastFuture;
  proto$1.set = set;
  proto$1.eras = localeEras;
  proto$1.erasParse = localeErasParse;
  proto$1.erasConvertYear = localeErasConvertYear;
  proto$1.erasAbbrRegex = erasAbbrRegex;
  proto$1.erasNameRegex = erasNameRegex;
  proto$1.erasNarrowRegex = erasNarrowRegex;

  proto$1.months = localeMonths;
  proto$1.monthsShort = localeMonthsShort;
  proto$1.monthsParse = localeMonthsParse;
  proto$1.monthsRegex = monthsRegex;
  proto$1.monthsShortRegex = monthsShortRegex;
  proto$1.week = localeWeek;
  proto$1.firstDayOfYear = localeFirstDayOfYear;
  proto$1.firstDayOfWeek = localeFirstDayOfWeek;

  proto$1.weekdays = localeWeekdays;
  proto$1.weekdaysMin = localeWeekdaysMin;
  proto$1.weekdaysShort = localeWeekdaysShort;
  proto$1.weekdaysParse = localeWeekdaysParse;

  proto$1.weekdaysRegex = weekdaysRegex;
  proto$1.weekdaysShortRegex = weekdaysShortRegex;
  proto$1.weekdaysMinRegex = weekdaysMinRegex;

  proto$1.isPM = localeIsPM;
  proto$1.meridiem = localeMeridiem;

  function get$1(format, index, field, setter) {
    var locale = getLocale(),
    utc = createUTC().set(setter, index);
    return locale[field](utc, format);
  }

  function listMonthsImpl(format, index, field) {
    if (isNumber(format)) {
      index = format;
      format = undefined;
    }

    format = format || '';

    if (index != null) {
      return get$1(format, index, field, 'month');
    }

    var i,
    out = [];
    for (i = 0; i < 12; i++) {
      out[i] = get$1(format, i, field, 'month');
    }
    return out;
  }

  // ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl(localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
      if (isNumber(format)) {
        index = format;
        format = undefined;
      }

      format = format || '';
    } else {
      format = localeSorted;
      index = format;
      localeSorted = false;

      if (isNumber(format)) {
        index = format;
        format = undefined;
      }

      format = format || '';
    }

    var locale = getLocale(),
    shift = localeSorted ? locale._week.dow : 0,
    i,
    out = [];

    if (index != null) {
      return get$1(format, (index + shift) % 7, field, 'day');
    }

    for (i = 0; i < 7; i++) {
      out[i] = get$1(format, (i + shift) % 7, field, 'day');
    }
    return out;
  }

  function listMonths(format, index) {
    return listMonthsImpl(format, index, 'months');
  }

  function listMonthsShort(format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
  }

  function listWeekdays(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
  }

  function listWeekdaysShort(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
  }

  function listWeekdaysMin(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
  }

  getSetGlobalLocale('en', {
    eras: [
    {
      since: '0001-01-01',
      until: +Infinity,
      offset: 1,
      name: 'Anno Domini',
      narrow: 'AD',
      abbr: 'AD' },

    {
      since: '0000-12-31',
      until: -Infinity,
      offset: 1,
      name: 'Before Christ',
      narrow: 'BC',
      abbr: 'BC' }],


    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      toInt(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    } });


  // Side effect imports

  hooks.lang = deprecate(
  'moment.lang is deprecated. Use moment.locale instead.',
  getSetGlobalLocale);

  hooks.langData = deprecate(
  'moment.langData is deprecated. Use moment.localeData instead.',
  getLocale);


  var mathAbs = Math.abs;

  function abs() {
    var data = this._data;

    this._milliseconds = mathAbs(this._milliseconds);
    this._days = mathAbs(this._days);
    this._months = mathAbs(this._months);

    data.milliseconds = mathAbs(data.milliseconds);
    data.seconds = mathAbs(data.seconds);
    data.minutes = mathAbs(data.minutes);
    data.hours = mathAbs(data.hours);
    data.months = mathAbs(data.months);
    data.years = mathAbs(data.years);

    return this;
  }

  function addSubtract$1(duration, input, value, direction) {
    var other = createDuration(input, value);

    duration._milliseconds += direction * other._milliseconds;
    duration._days += direction * other._days;
    duration._months += direction * other._months;

    return duration._bubble();
  }

  // supports only 2.0-style add(1, 's') or add(duration)
  function add$1(input, value) {
    return addSubtract$1(this, input, value, 1);
  }

  // supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1(input, value) {
    return addSubtract$1(this, input, value, -1);
  }

  function absCeil(number) {
    if (number < 0) {
      return Math.floor(number);
    } else {
      return Math.ceil(number);
    }
  }

  function bubble() {
    var milliseconds = this._milliseconds,
    days = this._days,
    months = this._months,
    data = this._data,
    seconds,
    minutes,
    hours,
    years,
    monthsFromDays;

    // if we have a mix of positive and negative values, bubble down first
    // check: https://github.com/moment/moment/issues/2166
    if (
    !(
    milliseconds >= 0 && days >= 0 && months >= 0 ||
    milliseconds <= 0 && days <= 0 && months <= 0))

    {
      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
      days = 0;
      months = 0;
    }

    // The following code bubbles up values, see the tests for
    // examples of what that means.
    data.milliseconds = milliseconds % 1000;

    seconds = absFloor(milliseconds / 1000);
    data.seconds = seconds % 60;

    minutes = absFloor(seconds / 60);
    data.minutes = minutes % 60;

    hours = absFloor(minutes / 60);
    data.hours = hours % 24;

    days += absFloor(hours / 24);

    // convert days to months
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    data.days = days;
    data.months = months;
    data.years = years;

    return this;
  }

  function daysToMonths(days) {
    // 400 years have 146097 days (taking into account leap year rules)
    // 400 years have 12 months === 4800
    return days * 4800 / 146097;
  }

  function monthsToDays(months) {
    // the reverse of daysToMonths
    return months * 146097 / 4800;
  }

  function as(units) {
    if (!this.isValid()) {
      return NaN;
    }
    var days,
    months,
    milliseconds = this._milliseconds;

    units = normalizeUnits(units);

    if (units === 'month' || units === 'quarter' || units === 'year') {
      days = this._days + milliseconds / 864e5;
      months = this._months + daysToMonths(days);
      switch (units) {
        case 'month':
          return months;
        case 'quarter':
          return months / 3;
        case 'year':
          return months / 12;}

    } else {
      // handle milliseconds separately because of floating point math errors (issue #1867)
      days = this._days + Math.round(monthsToDays(this._months));
      switch (units) {
        case 'week':
          return days / 7 + milliseconds / 6048e5;
        case 'day':
          return days + milliseconds / 864e5;
        case 'hour':
          return days * 24 + milliseconds / 36e5;
        case 'minute':
          return days * 1440 + milliseconds / 6e4;
        case 'second':
          return days * 86400 + milliseconds / 1000;
        // Math.floor prevents floating point math errors here
        case 'millisecond':
          return Math.floor(days * 864e5) + milliseconds;
        default:
          throw new Error('Unknown unit ' + units);}

    }
  }

  // TODO: Use this.as('ms')?
  function valueOf$1() {
    if (!this.isValid()) {
      return NaN;
    }
    return (
      this._milliseconds +
      this._days * 864e5 +
      this._months % 12 * 2592e6 +
      toInt(this._months / 12) * 31536e6);

  }

  function makeAs(alias) {
    return function () {
      return this.as(alias);
    };
  }

  var asMilliseconds = makeAs('ms'),
  asSeconds = makeAs('s'),
  asMinutes = makeAs('m'),
  asHours = makeAs('h'),
  asDays = makeAs('d'),
  asWeeks = makeAs('w'),
  asMonths = makeAs('M'),
  asQuarters = makeAs('Q'),
  asYears = makeAs('y');

  function clone$1() {
    return createDuration(this);
  }

  function get$2(units) {
    units = normalizeUnits(units);
    return this.isValid() ? this[units + 's']() : NaN;
  }

  function makeGetter(name) {
    return function () {
      return this.isValid() ? this._data[name] : NaN;
    };
  }

  var milliseconds = makeGetter('milliseconds'),
  seconds = makeGetter('seconds'),
  minutes = makeGetter('minutes'),
  hours = makeGetter('hours'),
  days = makeGetter('days'),
  months = makeGetter('months'),
  years = makeGetter('years');

  function weeks() {
    return absFloor(this.days() / 7);
  }

  var round = Math.round,
  thresholds = {
    ss: 44, // a few seconds to seconds
    s: 45, // seconds to minute
    m: 45, // minutes to hour
    h: 22, // hours to day
    d: 26, // days to month/week
    w: null, // weeks to month
    M: 11 // months to year
  };

  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
  }

  function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
    var duration = createDuration(posNegDuration).abs(),
    seconds = round(duration.as('s')),
    minutes = round(duration.as('m')),
    hours = round(duration.as('h')),
    days = round(duration.as('d')),
    months = round(duration.as('M')),
    weeks = round(duration.as('w')),
    years = round(duration.as('y')),
    a =
    seconds <= thresholds.ss && ['s', seconds] ||
    seconds < thresholds.s && ['ss', seconds] ||
    minutes <= 1 && ['m'] ||
    minutes < thresholds.m && ['mm', minutes] ||
    hours <= 1 && ['h'] ||
    hours < thresholds.h && ['hh', hours] ||
    days <= 1 && ['d'] ||
    days < thresholds.d && ['dd', days];

    if (thresholds.w != null) {
      a =
      a ||
      weeks <= 1 && ['w'] ||
      weeks < thresholds.w && ['ww', weeks];
    }
    a = a ||
    months <= 1 && ['M'] ||
    months < thresholds.M && ['MM', months] ||
    years <= 1 && ['y'] || ['yy', years];

    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
  }

  // This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding(roundingFunction) {
    if (roundingFunction === undefined) {
      return round;
    }
    if (typeof roundingFunction === 'function') {
      round = roundingFunction;
      return true;
    }
    return false;
  }

  // This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold(threshold, limit) {
    if (thresholds[threshold] === undefined) {
      return false;
    }
    if (limit === undefined) {
      return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    if (threshold === 's') {
      thresholds.ss = limit - 1;
    }
    return true;
  }

  function humanize(argWithSuffix, argThresholds) {
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }

    var withSuffix = false,
    th = thresholds,
    locale,
    output;

    if (typeof argWithSuffix === 'object') {
      argThresholds = argWithSuffix;
      argWithSuffix = false;
    }
    if (typeof argWithSuffix === 'boolean') {
      withSuffix = argWithSuffix;
    }
    if (typeof argThresholds === 'object') {
      th = Object.assign({}, thresholds, argThresholds);
      if (argThresholds.s != null && argThresholds.ss == null) {
        th.ss = argThresholds.s - 1;
      }
    }

    locale = this.localeData();
    output = relativeTime$1(this, !withSuffix, th, locale);

    if (withSuffix) {
      output = locale.pastFuture(+this, output);
    }

    return locale.postformat(output);
  }

  var abs$1 = Math.abs;

  function sign(x) {
    return (x > 0) - (x < 0) || +x;
  }

  function toISOString$1() {
    // for ISO strings we do not use the normal bubbling rules:
    //  * milliseconds bubble up until they become hours
    //  * days do not bubble at all
    //  * months bubble up until they become years
    // This is because there is no context-free conversion between hours and days
    // (think of clock changes)
    // and also not between days and months (28-31 days per month)
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }

    var seconds = abs$1(this._milliseconds) / 1000,
    days = abs$1(this._days),
    months = abs$1(this._months),
    minutes,
    hours,
    years,
    s,
    total = this.asSeconds(),
    totalSign,
    ymSign,
    daysSign,
    hmsSign;

    if (!total) {
      // this is the same as C#'s (Noda) and python (isodate)...
      // but not other JS (goog.date)
      return 'P0D';
    }

    // 3600 seconds -> 60 minutes -> 1 hour
    minutes = absFloor(seconds / 60);
    hours = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
    s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

    totalSign = total < 0 ? '-' : '';
    ymSign = sign(this._months) !== sign(total) ? '-' : '';
    daysSign = sign(this._days) !== sign(total) ? '-' : '';
    hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

    return (
      totalSign +
      'P' + (
      years ? ymSign + years + 'Y' : '') + (
      months ? ymSign + months + 'M' : '') + (
      days ? daysSign + days + 'D' : '') + (
      hours || minutes || seconds ? 'T' : '') + (
      hours ? hmsSign + hours + 'H' : '') + (
      minutes ? hmsSign + minutes + 'M' : '') + (
      seconds ? hmsSign + s + 'S' : ''));

  }

  var proto$2 = Duration.prototype;

  proto$2.isValid = isValid$1;
  proto$2.abs = abs;
  proto$2.add = add$1;
  proto$2.subtract = subtract$1;
  proto$2.as = as;
  proto$2.asMilliseconds = asMilliseconds;
  proto$2.asSeconds = asSeconds;
  proto$2.asMinutes = asMinutes;
  proto$2.asHours = asHours;
  proto$2.asDays = asDays;
  proto$2.asWeeks = asWeeks;
  proto$2.asMonths = asMonths;
  proto$2.asQuarters = asQuarters;
  proto$2.asYears = asYears;
  proto$2.valueOf = valueOf$1;
  proto$2._bubble = bubble;
  proto$2.clone = clone$1;
  proto$2.get = get$2;
  proto$2.milliseconds = milliseconds;
  proto$2.seconds = seconds;
  proto$2.minutes = minutes;
  proto$2.hours = hours;
  proto$2.days = days;
  proto$2.weeks = weeks;
  proto$2.months = months;
  proto$2.years = years;
  proto$2.humanize = humanize;
  proto$2.toISOString = toISOString$1;
  proto$2.toString = toISOString$1;
  proto$2.toJSON = toISOString$1;
  proto$2.locale = locale;
  proto$2.localeData = localeData;

  proto$2.toIsoString = deprecate(
  'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
  toISOString$1);

  proto$2.lang = lang;

  // FORMATTING

  addFormatToken('X', 0, 0, 'unix');
  addFormatToken('x', 0, 0, 'valueOf');

  // PARSING

  addRegexToken('x', matchSigned);
  addRegexToken('X', matchTimestamp);
  addParseToken('X', function (input, array, config) {
    config._d = new Date(parseFloat(input) * 1000);
  });
  addParseToken('x', function (input, array, config) {
    config._d = new Date(toInt(input));
  });

  //! moment.js

  hooks.version = '2.29.3';

  setHookCallback(createLocal);

  hooks.fn = proto;
  hooks.min = min;
  hooks.max = max;
  hooks.now = now;
  hooks.utc = createUTC;
  hooks.unix = createUnix;
  hooks.months = listMonths;
  hooks.isDate = isDate;
  hooks.locale = getSetGlobalLocale;
  hooks.invalid = createInvalid;
  hooks.duration = createDuration;
  hooks.isMoment = isMoment;
  hooks.weekdays = listWeekdays;
  hooks.parseZone = createInZone;
  hooks.localeData = getLocale;
  hooks.isDuration = isDuration;
  hooks.monthsShort = listMonthsShort;
  hooks.weekdaysMin = listWeekdaysMin;
  hooks.defineLocale = defineLocale;
  hooks.updateLocale = updateLocale;
  hooks.locales = listLocales;
  hooks.weekdaysShort = listWeekdaysShort;
  hooks.normalizeUnits = normalizeUnits;
  hooks.relativeTimeRounding = getSetRelativeTimeRounding;
  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
  hooks.calendarFormat = getCalendarFormat;
  hooks.prototype = proto;

  // currently HTML5 input type only supports 24-hour formats
  hooks.HTML5_FMT = {
    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
    DATE: 'YYYY-MM-DD', // <input type="date" />
    TIME: 'HH:mm', // <input type="time" />
    TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
    TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
    WEEK: 'GGGG-[W]WW', // <input type="week" />
    MONTH: 'YYYY-MM' // <input type="month" />
  };

  return hooks;

});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! (webpack)/buildin/module.js */ 23)(module)))

/***/ }),
/* 23 */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 24 */
/*!**********************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale sync ^\.\/.*$ ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 25,
	"./af.js": 25,
	"./ar": 26,
	"./ar-dz": 27,
	"./ar-dz.js": 27,
	"./ar-kw": 28,
	"./ar-kw.js": 28,
	"./ar-ly": 29,
	"./ar-ly.js": 29,
	"./ar-ma": 30,
	"./ar-ma.js": 30,
	"./ar-sa": 31,
	"./ar-sa.js": 31,
	"./ar-tn": 32,
	"./ar-tn.js": 32,
	"./ar.js": 26,
	"./az": 33,
	"./az.js": 33,
	"./be": 34,
	"./be.js": 34,
	"./bg": 35,
	"./bg.js": 35,
	"./bm": 36,
	"./bm.js": 36,
	"./bn": 37,
	"./bn-bd": 38,
	"./bn-bd.js": 38,
	"./bn.js": 37,
	"./bo": 39,
	"./bo.js": 39,
	"./br": 40,
	"./br.js": 40,
	"./bs": 41,
	"./bs.js": 41,
	"./ca": 42,
	"./ca.js": 42,
	"./cs": 43,
	"./cs.js": 43,
	"./cv": 44,
	"./cv.js": 44,
	"./cy": 45,
	"./cy.js": 45,
	"./da": 46,
	"./da.js": 46,
	"./de": 47,
	"./de-at": 48,
	"./de-at.js": 48,
	"./de-ch": 49,
	"./de-ch.js": 49,
	"./de.js": 47,
	"./dv": 50,
	"./dv.js": 50,
	"./el": 51,
	"./el.js": 51,
	"./en-au": 52,
	"./en-au.js": 52,
	"./en-ca": 53,
	"./en-ca.js": 53,
	"./en-gb": 54,
	"./en-gb.js": 54,
	"./en-ie": 55,
	"./en-ie.js": 55,
	"./en-il": 56,
	"./en-il.js": 56,
	"./en-in": 57,
	"./en-in.js": 57,
	"./en-nz": 58,
	"./en-nz.js": 58,
	"./en-sg": 59,
	"./en-sg.js": 59,
	"./eo": 60,
	"./eo.js": 60,
	"./es": 61,
	"./es-do": 62,
	"./es-do.js": 62,
	"./es-mx": 63,
	"./es-mx.js": 63,
	"./es-us": 64,
	"./es-us.js": 64,
	"./es.js": 61,
	"./et": 65,
	"./et.js": 65,
	"./eu": 66,
	"./eu.js": 66,
	"./fa": 67,
	"./fa.js": 67,
	"./fi": 68,
	"./fi.js": 68,
	"./fil": 69,
	"./fil.js": 69,
	"./fo": 70,
	"./fo.js": 70,
	"./fr": 71,
	"./fr-ca": 72,
	"./fr-ca.js": 72,
	"./fr-ch": 73,
	"./fr-ch.js": 73,
	"./fr.js": 71,
	"./fy": 74,
	"./fy.js": 74,
	"./ga": 75,
	"./ga.js": 75,
	"./gd": 76,
	"./gd.js": 76,
	"./gl": 77,
	"./gl.js": 77,
	"./gom-deva": 78,
	"./gom-deva.js": 78,
	"./gom-latn": 79,
	"./gom-latn.js": 79,
	"./gu": 80,
	"./gu.js": 80,
	"./he": 81,
	"./he.js": 81,
	"./hi": 82,
	"./hi.js": 82,
	"./hr": 83,
	"./hr.js": 83,
	"./hu": 84,
	"./hu.js": 84,
	"./hy-am": 85,
	"./hy-am.js": 85,
	"./id": 86,
	"./id.js": 86,
	"./is": 87,
	"./is.js": 87,
	"./it": 88,
	"./it-ch": 89,
	"./it-ch.js": 89,
	"./it.js": 88,
	"./ja": 90,
	"./ja.js": 90,
	"./jv": 91,
	"./jv.js": 91,
	"./ka": 92,
	"./ka.js": 92,
	"./kk": 93,
	"./kk.js": 93,
	"./km": 94,
	"./km.js": 94,
	"./kn": 95,
	"./kn.js": 95,
	"./ko": 96,
	"./ko.js": 96,
	"./ku": 97,
	"./ku.js": 97,
	"./ky": 98,
	"./ky.js": 98,
	"./lb": 99,
	"./lb.js": 99,
	"./lo": 100,
	"./lo.js": 100,
	"./lt": 101,
	"./lt.js": 101,
	"./lv": 102,
	"./lv.js": 102,
	"./me": 103,
	"./me.js": 103,
	"./mi": 104,
	"./mi.js": 104,
	"./mk": 105,
	"./mk.js": 105,
	"./ml": 106,
	"./ml.js": 106,
	"./mn": 107,
	"./mn.js": 107,
	"./mr": 108,
	"./mr.js": 108,
	"./ms": 109,
	"./ms-my": 110,
	"./ms-my.js": 110,
	"./ms.js": 109,
	"./mt": 111,
	"./mt.js": 111,
	"./my": 112,
	"./my.js": 112,
	"./nb": 113,
	"./nb.js": 113,
	"./ne": 114,
	"./ne.js": 114,
	"./nl": 115,
	"./nl-be": 116,
	"./nl-be.js": 116,
	"./nl.js": 115,
	"./nn": 117,
	"./nn.js": 117,
	"./oc-lnc": 118,
	"./oc-lnc.js": 118,
	"./pa-in": 119,
	"./pa-in.js": 119,
	"./pl": 120,
	"./pl.js": 120,
	"./pt": 121,
	"./pt-br": 122,
	"./pt-br.js": 122,
	"./pt.js": 121,
	"./ro": 123,
	"./ro.js": 123,
	"./ru": 124,
	"./ru.js": 124,
	"./sd": 125,
	"./sd.js": 125,
	"./se": 126,
	"./se.js": 126,
	"./si": 127,
	"./si.js": 127,
	"./sk": 128,
	"./sk.js": 128,
	"./sl": 129,
	"./sl.js": 129,
	"./sq": 130,
	"./sq.js": 130,
	"./sr": 131,
	"./sr-cyrl": 132,
	"./sr-cyrl.js": 132,
	"./sr.js": 131,
	"./ss": 133,
	"./ss.js": 133,
	"./sv": 134,
	"./sv.js": 134,
	"./sw": 135,
	"./sw.js": 135,
	"./ta": 136,
	"./ta.js": 136,
	"./te": 137,
	"./te.js": 137,
	"./tet": 138,
	"./tet.js": 138,
	"./tg": 139,
	"./tg.js": 139,
	"./th": 140,
	"./th.js": 140,
	"./tk": 141,
	"./tk.js": 141,
	"./tl-ph": 142,
	"./tl-ph.js": 142,
	"./tlh": 143,
	"./tlh.js": 143,
	"./tr": 144,
	"./tr.js": 144,
	"./tzl": 145,
	"./tzl.js": 145,
	"./tzm": 146,
	"./tzm-latn": 147,
	"./tzm-latn.js": 147,
	"./tzm.js": 146,
	"./ug-cn": 148,
	"./ug-cn.js": 148,
	"./uk": 149,
	"./uk.js": 149,
	"./ur": 150,
	"./ur.js": 150,
	"./uz": 151,
	"./uz-latn": 152,
	"./uz-latn.js": 152,
	"./uz.js": 151,
	"./vi": 153,
	"./vi.js": 153,
	"./x-pseudo": 154,
	"./x-pseudo.js": 154,
	"./yo": 155,
	"./yo.js": 155,
	"./zh-cn": 156,
	"./zh-cn.js": 156,
	"./zh-hk": 157,
	"./zh-hk.js": 157,
	"./zh-mo": 158,
	"./zh-mo.js": 158,
	"./zh-tw": 159,
	"./zh-tw.js": 159
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 24;

/***/ }),
/* 25 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/af.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Afrikaans [af]
//! author : Werner Mollentze : https://github.com/wernerm

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var af = moment.defineLocale('af', {
    months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
    weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(
    '_'),

    weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
    weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
    meridiemParse: /vm|nm/i,
    isPM: function isPM(input) {
      return /^nm$/i.test(input);
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 12) {
        return isLower ? 'vm' : 'VM';
      } else {
        return isLower ? 'nm' : 'NM';
      }
    },
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Vandag om] LT',
      nextDay: '[Môre om] LT',
      nextWeek: 'dddd [om] LT',
      lastDay: '[Gister om] LT',
      lastWeek: '[Laas] dddd [om] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'oor %s',
      past: '%s gelede',
      s: "'n paar sekondes",
      ss: '%d sekondes',
      m: "'n minuut",
      mm: '%d minute',
      h: "'n uur",
      hh: '%d ure',
      d: "'n dag",
      dd: '%d dae',
      M: "'n maand",
      MM: '%d maande',
      y: "'n jaar",
      yy: '%d jaar' },

    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal: function ordinal(number) {
      return (
        number + (
        number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'));
      // Thanks to Joris Röling : https://github.com/jjupiter
    },
    week: {
      dow: 1, // Maandag is die eerste dag van die week.
      doy: 4 // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
    } });


  return af;

});

/***/ }),
/* 26 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ar.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic [ar]
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '١',
    2: '٢',
    3: '٣',
    4: '٤',
    5: '٥',
    6: '٦',
    7: '٧',
    8: '٨',
    9: '٩',
    0: '٠' },

  numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0' },

  pluralForm = function pluralForm(n) {
    return n === 0 ?
    0 :
    n === 1 ?
    1 :
    n === 2 ?
    2 :
    n % 100 >= 3 && n % 100 <= 10 ?
    3 :
    n % 100 >= 11 ?
    4 :
    5;
  },
  plurals = {
    s: [
    'أقل من ثانية',
    'ثانية واحدة',
    ['ثانيتان', 'ثانيتين'],
    '%d ثوان',
    '%d ثانية',
    '%d ثانية'],

    m: [
    'أقل من دقيقة',
    'دقيقة واحدة',
    ['دقيقتان', 'دقيقتين'],
    '%d دقائق',
    '%d دقيقة',
    '%d دقيقة'],

    h: [
    'أقل من ساعة',
    'ساعة واحدة',
    ['ساعتان', 'ساعتين'],
    '%d ساعات',
    '%d ساعة',
    '%d ساعة'],

    d: [
    'أقل من يوم',
    'يوم واحد',
    ['يومان', 'يومين'],
    '%d أيام',
    '%d يومًا',
    '%d يوم'],

    M: [
    'أقل من شهر',
    'شهر واحد',
    ['شهران', 'شهرين'],
    '%d أشهر',
    '%d شهرا',
    '%d شهر'],

    y: [
    'أقل من عام',
    'عام واحد',
    ['عامان', 'عامين'],
    '%d أعوام',
    '%d عامًا',
    '%d عام'] },


  pluralize = function pluralize(u) {
    return function (number, withoutSuffix, string, isFuture) {
      var f = pluralForm(number),
      str = plurals[u][pluralForm(number)];
      if (f === 2) {
        str = str[withoutSuffix ? 0 : 1];
      }
      return str.replace(/%d/i, number);
    };
  },
  months = [
  'يناير',
  'فبراير',
  'مارس',
  'أبريل',
  'مايو',
  'يونيو',
  'يوليو',
  'أغسطس',
  'سبتمبر',
  'أكتوبر',
  'نوفمبر',
  'ديسمبر'];


  var ar = moment.defineLocale('ar', {
    months: months,
    monthsShort: months,
    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: "D/\u200FM/\u200FYYYY",
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /ص|م/,
    isPM: function isPM(input) {
      return 'م' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ص';
      } else {
        return 'م';
      }
    },
    calendar: {
      sameDay: '[اليوم عند الساعة] LT',
      nextDay: '[غدًا عند الساعة] LT',
      nextWeek: 'dddd [عند الساعة] LT',
      lastDay: '[أمس عند الساعة] LT',
      lastWeek: 'dddd [عند الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'بعد %s',
      past: 'منذ %s',
      s: pluralize('s'),
      ss: pluralize('s'),
      m: pluralize('m'),
      mm: pluralize('m'),
      h: pluralize('h'),
      hh: pluralize('h'),
      d: pluralize('d'),
      dd: pluralize('d'),
      M: pluralize('M'),
      MM: pluralize('M'),
      y: pluralize('y'),
      yy: pluralize('y') },

    preparse: function preparse(string) {
      return string.
      replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
        return numberMap[match];
      }).
      replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return ar;

});

/***/ }),
/* 27 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ar-dz.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Algeria) [ar-dz]
//! author : Amine Roukh: https://github.com/Amine27
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi
//! author : Noureddine LOUAHEDJ : https://github.com/noureddinem

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var pluralForm = function pluralForm(n) {
    return n === 0 ?
    0 :
    n === 1 ?
    1 :
    n === 2 ?
    2 :
    n % 100 >= 3 && n % 100 <= 10 ?
    3 :
    n % 100 >= 11 ?
    4 :
    5;
  },
  plurals = {
    s: [
    'أقل من ثانية',
    'ثانية واحدة',
    ['ثانيتان', 'ثانيتين'],
    '%d ثوان',
    '%d ثانية',
    '%d ثانية'],

    m: [
    'أقل من دقيقة',
    'دقيقة واحدة',
    ['دقيقتان', 'دقيقتين'],
    '%d دقائق',
    '%d دقيقة',
    '%d دقيقة'],

    h: [
    'أقل من ساعة',
    'ساعة واحدة',
    ['ساعتان', 'ساعتين'],
    '%d ساعات',
    '%d ساعة',
    '%d ساعة'],

    d: [
    'أقل من يوم',
    'يوم واحد',
    ['يومان', 'يومين'],
    '%d أيام',
    '%d يومًا',
    '%d يوم'],

    M: [
    'أقل من شهر',
    'شهر واحد',
    ['شهران', 'شهرين'],
    '%d أشهر',
    '%d شهرا',
    '%d شهر'],

    y: [
    'أقل من عام',
    'عام واحد',
    ['عامان', 'عامين'],
    '%d أعوام',
    '%d عامًا',
    '%d عام'] },


  pluralize = function pluralize(u) {
    return function (number, withoutSuffix, string, isFuture) {
      var f = pluralForm(number),
      str = plurals[u][pluralForm(number)];
      if (f === 2) {
        str = str[withoutSuffix ? 0 : 1];
      }
      return str.replace(/%d/i, number);
    };
  },
  months = [
  'جانفي',
  'فيفري',
  'مارس',
  'أفريل',
  'ماي',
  'جوان',
  'جويلية',
  'أوت',
  'سبتمبر',
  'أكتوبر',
  'نوفمبر',
  'ديسمبر'];


  var arDz = moment.defineLocale('ar-dz', {
    months: months,
    monthsShort: months,
    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: "D/\u200FM/\u200FYYYY",
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /ص|م/,
    isPM: function isPM(input) {
      return 'م' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ص';
      } else {
        return 'م';
      }
    },
    calendar: {
      sameDay: '[اليوم عند الساعة] LT',
      nextDay: '[غدًا عند الساعة] LT',
      nextWeek: 'dddd [عند الساعة] LT',
      lastDay: '[أمس عند الساعة] LT',
      lastWeek: 'dddd [عند الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'بعد %s',
      past: 'منذ %s',
      s: pluralize('s'),
      ss: pluralize('s'),
      m: pluralize('m'),
      mm: pluralize('m'),
      h: pluralize('h'),
      hh: pluralize('h'),
      d: pluralize('d'),
      dd: pluralize('d'),
      M: pluralize('M'),
      MM: pluralize('M'),
      y: pluralize('y'),
      yy: pluralize('y') },

    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return arDz;

});

/***/ }),
/* 28 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ar-kw.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Kuwait) [ar-kw]
//! author : Nusret Parlak: https://github.com/nusretparlak

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var arKw = moment.defineLocale('ar-kw', {
    months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
    '_'),

    monthsShort:
    'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
    '_'),

    weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[اليوم على الساعة] LT',
      nextDay: '[غدا على الساعة] LT',
      nextWeek: 'dddd [على الساعة] LT',
      lastDay: '[أمس على الساعة] LT',
      lastWeek: 'dddd [على الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'في %s',
      past: 'منذ %s',
      s: 'ثوان',
      ss: '%d ثانية',
      m: 'دقيقة',
      mm: '%d دقائق',
      h: 'ساعة',
      hh: '%d ساعات',
      d: 'يوم',
      dd: '%d أيام',
      M: 'شهر',
      MM: '%d أشهر',
      y: 'سنة',
      yy: '%d سنوات' },

    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return arKw;

});

/***/ }),
/* 29 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ar-ly.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Libya) [ar-ly]
//! author : Ali Hmer: https://github.com/kikoanis

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '1',
    2: '2',
    3: '3',
    4: '4',
    5: '5',
    6: '6',
    7: '7',
    8: '8',
    9: '9',
    0: '0' },

  pluralForm = function pluralForm(n) {
    return n === 0 ?
    0 :
    n === 1 ?
    1 :
    n === 2 ?
    2 :
    n % 100 >= 3 && n % 100 <= 10 ?
    3 :
    n % 100 >= 11 ?
    4 :
    5;
  },
  plurals = {
    s: [
    'أقل من ثانية',
    'ثانية واحدة',
    ['ثانيتان', 'ثانيتين'],
    '%d ثوان',
    '%d ثانية',
    '%d ثانية'],

    m: [
    'أقل من دقيقة',
    'دقيقة واحدة',
    ['دقيقتان', 'دقيقتين'],
    '%d دقائق',
    '%d دقيقة',
    '%d دقيقة'],

    h: [
    'أقل من ساعة',
    'ساعة واحدة',
    ['ساعتان', 'ساعتين'],
    '%d ساعات',
    '%d ساعة',
    '%d ساعة'],

    d: [
    'أقل من يوم',
    'يوم واحد',
    ['يومان', 'يومين'],
    '%d أيام',
    '%d يومًا',
    '%d يوم'],

    M: [
    'أقل من شهر',
    'شهر واحد',
    ['شهران', 'شهرين'],
    '%d أشهر',
    '%d شهرا',
    '%d شهر'],

    y: [
    'أقل من عام',
    'عام واحد',
    ['عامان', 'عامين'],
    '%d أعوام',
    '%d عامًا',
    '%d عام'] },


  pluralize = function pluralize(u) {
    return function (number, withoutSuffix, string, isFuture) {
      var f = pluralForm(number),
      str = plurals[u][pluralForm(number)];
      if (f === 2) {
        str = str[withoutSuffix ? 0 : 1];
      }
      return str.replace(/%d/i, number);
    };
  },
  months = [
  'يناير',
  'فبراير',
  'مارس',
  'أبريل',
  'مايو',
  'يونيو',
  'يوليو',
  'أغسطس',
  'سبتمبر',
  'أكتوبر',
  'نوفمبر',
  'ديسمبر'];


  var arLy = moment.defineLocale('ar-ly', {
    months: months,
    monthsShort: months,
    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: "D/\u200FM/\u200FYYYY",
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /ص|م/,
    isPM: function isPM(input) {
      return 'م' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ص';
      } else {
        return 'م';
      }
    },
    calendar: {
      sameDay: '[اليوم عند الساعة] LT',
      nextDay: '[غدًا عند الساعة] LT',
      nextWeek: 'dddd [عند الساعة] LT',
      lastDay: '[أمس عند الساعة] LT',
      lastWeek: 'dddd [عند الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'بعد %s',
      past: 'منذ %s',
      s: pluralize('s'),
      ss: pluralize('s'),
      m: pluralize('m'),
      mm: pluralize('m'),
      h: pluralize('h'),
      hh: pluralize('h'),
      d: pluralize('d'),
      dd: pluralize('d'),
      M: pluralize('M'),
      MM: pluralize('M'),
      y: pluralize('y'),
      yy: pluralize('y') },

    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return arLy;

});

/***/ }),
/* 30 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ar-ma.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Morocco) [ar-ma]
//! author : ElFadili Yassine : https://github.com/ElFadiliY
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var arMa = moment.defineLocale('ar-ma', {
    months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
    '_'),

    monthsShort:
    'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
    '_'),

    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[اليوم على الساعة] LT',
      nextDay: '[غدا على الساعة] LT',
      nextWeek: 'dddd [على الساعة] LT',
      lastDay: '[أمس على الساعة] LT',
      lastWeek: 'dddd [على الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'في %s',
      past: 'منذ %s',
      s: 'ثوان',
      ss: '%d ثانية',
      m: 'دقيقة',
      mm: '%d دقائق',
      h: 'ساعة',
      hh: '%d ساعات',
      d: 'يوم',
      dd: '%d أيام',
      M: 'شهر',
      MM: '%d أشهر',
      y: 'سنة',
      yy: '%d سنوات' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return arMa;

});

/***/ }),
/* 31 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ar-sa.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Saudi Arabia) [ar-sa]
//! author : Suhail Alkowaileet : https://github.com/xsoh

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '١',
    2: '٢',
    3: '٣',
    4: '٤',
    5: '٥',
    6: '٦',
    7: '٧',
    8: '٨',
    9: '٩',
    0: '٠' },

  numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0' };


  var arSa = moment.defineLocale('ar-sa', {
    months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
    '_'),

    monthsShort:
    'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
    '_'),

    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /ص|م/,
    isPM: function isPM(input) {
      return 'م' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ص';
      } else {
        return 'م';
      }
    },
    calendar: {
      sameDay: '[اليوم على الساعة] LT',
      nextDay: '[غدا على الساعة] LT',
      nextWeek: 'dddd [على الساعة] LT',
      lastDay: '[أمس على الساعة] LT',
      lastWeek: 'dddd [على الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'في %s',
      past: 'منذ %s',
      s: 'ثوان',
      ss: '%d ثانية',
      m: 'دقيقة',
      mm: '%d دقائق',
      h: 'ساعة',
      hh: '%d ساعات',
      d: 'يوم',
      dd: '%d أيام',
      M: 'شهر',
      MM: '%d أشهر',
      y: 'سنة',
      yy: '%d سنوات' },

    preparse: function preparse(string) {
      return string.
      replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
        return numberMap[match];
      }).
      replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return arSa;

});

/***/ }),
/* 32 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ar-tn.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale  :  Arabic (Tunisia) [ar-tn]
//! author : Nader Toukabri : https://github.com/naderio

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var arTn = moment.defineLocale('ar-tn', {
    months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
    '_'),

    monthsShort:
    'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
    '_'),

    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[اليوم على الساعة] LT',
      nextDay: '[غدا على الساعة] LT',
      nextWeek: 'dddd [على الساعة] LT',
      lastDay: '[أمس على الساعة] LT',
      lastWeek: 'dddd [على الساعة] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'في %s',
      past: 'منذ %s',
      s: 'ثوان',
      ss: '%d ثانية',
      m: 'دقيقة',
      mm: '%d دقائق',
      h: 'ساعة',
      hh: '%d ساعات',
      d: 'يوم',
      dd: '%d أيام',
      M: 'شهر',
      MM: '%d أشهر',
      y: 'سنة',
      yy: '%d سنوات' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return arTn;

});

/***/ }),
/* 33 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/az.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Azerbaijani [az]
//! author : topchiyev : https://github.com/topchiyev

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    1: '-inci',
    5: '-inci',
    8: '-inci',
    70: '-inci',
    80: '-inci',
    2: '-nci',
    7: '-nci',
    20: '-nci',
    50: '-nci',
    3: '-üncü',
    4: '-üncü',
    100: '-üncü',
    6: '-ncı',
    9: '-uncu',
    10: '-uncu',
    30: '-uncu',
    60: '-ıncı',
    90: '-ıncı' };


  var az = moment.defineLocale('az', {
    months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(
    '_'),

    monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
    weekdays:
    'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(
    '_'),

    weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
    weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[bugün saat] LT',
      nextDay: '[sabah saat] LT',
      nextWeek: '[gələn həftə] dddd [saat] LT',
      lastDay: '[dünən] LT',
      lastWeek: '[keçən həftə] dddd [saat] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s sonra',
      past: '%s əvvəl',
      s: 'bir neçə saniyə',
      ss: '%d saniyə',
      m: 'bir dəqiqə',
      mm: '%d dəqiqə',
      h: 'bir saat',
      hh: '%d saat',
      d: 'bir gün',
      dd: '%d gün',
      M: 'bir ay',
      MM: '%d ay',
      y: 'bir il',
      yy: '%d il' },

    meridiemParse: /gecə|səhər|gündüz|axşam/,
    isPM: function isPM(input) {
      return /^(gündüz|axşam)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'gecə';
      } else if (hour < 12) {
        return 'səhər';
      } else if (hour < 17) {
        return 'gündüz';
      } else {
        return 'axşam';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
    ordinal: function ordinal(number) {
      if (number === 0) {
        // special case for zero
        return number + '-ıncı';
      }
      var a = number % 10,
      b = number % 100 - a,
      c = number >= 100 ? 100 : null;
      return number + (suffixes[a] || suffixes[b] || suffixes[c]);
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return az;

});

/***/ }),
/* 34 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/be.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Belarusian [be]
//! author : Dmitry Demidov : https://github.com/demidov91
//! author: Praleska: http://praleska.pro/
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ?
    forms[0] :
    num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ?
    forms[1] :
    forms[2];
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
      ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
      mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
      hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
      dd: 'дзень_дні_дзён',
      MM: 'месяц_месяцы_месяцаў',
      yy: 'год_гады_гадоў' };

    if (key === 'm') {
      return withoutSuffix ? 'хвіліна' : 'хвіліну';
    } else if (key === 'h') {
      return withoutSuffix ? 'гадзіна' : 'гадзіну';
    } else {
      return number + ' ' + plural(format[key], +number);
    }
  }

  var be = moment.defineLocale('be', {
    months: {
      format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(
      '_'),

      standalone:
      'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(
      '_') },


    monthsShort:
    'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
    weekdays: {
      format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(
      '_'),

      standalone:
      'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(
      '_'),

      isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/ },

    weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY г.',
      LLL: 'D MMMM YYYY г., HH:mm',
      LLLL: 'dddd, D MMMM YYYY г., HH:mm' },

    calendar: {
      sameDay: '[Сёння ў] LT',
      nextDay: '[Заўтра ў] LT',
      lastDay: '[Учора ў] LT',
      nextWeek: function nextWeek() {
        return '[У] dddd [ў] LT';
      },
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
          case 5:
          case 6:
            return '[У мінулую] dddd [ў] LT';
          case 1:
          case 2:
          case 4:
            return '[У мінулы] dddd [ў] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'праз %s',
      past: '%s таму',
      s: 'некалькі секунд',
      m: relativeTimeWithPlural,
      mm: relativeTimeWithPlural,
      h: relativeTimeWithPlural,
      hh: relativeTimeWithPlural,
      d: 'дзень',
      dd: relativeTimeWithPlural,
      M: 'месяц',
      MM: relativeTimeWithPlural,
      y: 'год',
      yy: relativeTimeWithPlural },

    meridiemParse: /ночы|раніцы|дня|вечара/,
    isPM: function isPM(input) {
      return /^(дня|вечара)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ночы';
      } else if (hour < 12) {
        return 'раніцы';
      } else if (hour < 17) {
        return 'дня';
      } else {
        return 'вечара';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'M':
        case 'd':
        case 'DDD':
        case 'w':
        case 'W':
          return (number % 10 === 2 || number % 10 === 3) &&
          number % 100 !== 12 &&
          number % 100 !== 13 ?
          number + '-і' :
          number + '-ы';
        case 'D':
          return number + '-га';
        default:
          return number;}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return be;

});

/***/ }),
/* 35 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/bg.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bulgarian [bg]
//! author : Krasen Borisov : https://github.com/kraz

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var bg = moment.defineLocale('bg', {
    months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(
    '_'),

    monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
    weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(
    '_'),

    weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'D.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY H:mm',
      LLLL: 'dddd, D MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[Днес в] LT',
      nextDay: '[Утре в] LT',
      nextWeek: 'dddd [в] LT',
      lastDay: '[Вчера в] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
          case 6:
            return '[Миналата] dddd [в] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[Миналия] dddd [в] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'след %s',
      past: 'преди %s',
      s: 'няколко секунди',
      ss: '%d секунди',
      m: 'минута',
      mm: '%d минути',
      h: 'час',
      hh: '%d часа',
      d: 'ден',
      dd: '%d дена',
      w: 'седмица',
      ww: '%d седмици',
      M: 'месец',
      MM: '%d месеца',
      y: 'година',
      yy: '%d години' },

    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal: function ordinal(number) {
      var lastDigit = number % 10,
      last2Digits = number % 100;
      if (number === 0) {
        return number + '-ев';
      } else if (last2Digits === 0) {
        return number + '-ен';
      } else if (last2Digits > 10 && last2Digits < 20) {
        return number + '-ти';
      } else if (lastDigit === 1) {
        return number + '-ви';
      } else if (lastDigit === 2) {
        return number + '-ри';
      } else if (lastDigit === 7 || lastDigit === 8) {
        return number + '-ми';
      } else {
        return number + '-ти';
      }
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return bg;

});

/***/ }),
/* 36 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/bm.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bambara [bm]
//! author : Estelle Comment : https://github.com/estellecomment

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var bm = moment.defineLocale('bm', {
    months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(
    '_'),

    monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
    weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
    weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
    weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'MMMM [tile] D [san] YYYY',
      LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
      LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm' },

    calendar: {
      sameDay: '[Bi lɛrɛ] LT',
      nextDay: '[Sini lɛrɛ] LT',
      nextWeek: 'dddd [don lɛrɛ] LT',
      lastDay: '[Kunu lɛrɛ] LT',
      lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s kɔnɔ',
      past: 'a bɛ %s bɔ',
      s: 'sanga dama dama',
      ss: 'sekondi %d',
      m: 'miniti kelen',
      mm: 'miniti %d',
      h: 'lɛrɛ kelen',
      hh: 'lɛrɛ %d',
      d: 'tile kelen',
      dd: 'tile %d',
      M: 'kalo kelen',
      MM: 'kalo %d',
      y: 'san kelen',
      yy: 'san %d' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return bm;

});

/***/ }),
/* 37 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/bn.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali [bn]
//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '১',
    2: '২',
    3: '৩',
    4: '৪',
    5: '৫',
    6: '৬',
    7: '৭',
    8: '৮',
    9: '৯',
    0: '০' },

  numberMap = {
    '১': '1',
    '২': '2',
    '৩': '3',
    '৪': '4',
    '৫': '5',
    '৬': '6',
    '৭': '7',
    '৮': '8',
    '৯': '9',
    '০': '0' };


  var bn = moment.defineLocale('bn', {
    months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
    '_'),

    monthsShort:
    'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
    '_'),

    weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
    '_'),

    weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
    weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
    longDateFormat: {
      LT: 'A h:mm সময়',
      LTS: 'A h:mm:ss সময়',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm সময়',
      LLLL: 'dddd, D MMMM YYYY, A h:mm সময়' },

    calendar: {
      sameDay: '[আজ] LT',
      nextDay: '[আগামীকাল] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[গতকাল] LT',
      lastWeek: '[গত] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s পরে',
      past: '%s আগে',
      s: 'কয়েক সেকেন্ড',
      ss: '%d সেকেন্ড',
      m: 'এক মিনিট',
      mm: '%d মিনিট',
      h: 'এক ঘন্টা',
      hh: '%d ঘন্টা',
      d: 'এক দিন',
      dd: '%d দিন',
      M: 'এক মাস',
      MM: '%d মাস',
      y: 'এক বছর',
      yy: '%d বছর' },

    preparse: function preparse(string) {
      return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (
      meridiem === 'রাত' && hour >= 4 ||
      meridiem === 'দুপুর' && hour < 5 ||
      meridiem === 'বিকাল')
      {
        return hour + 12;
      } else {
        return hour;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'রাত';
      } else if (hour < 10) {
        return 'সকাল';
      } else if (hour < 17) {
        return 'দুপুর';
      } else if (hour < 20) {
        return 'বিকাল';
      } else {
        return 'রাত';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return bn;

});

/***/ }),
/* 38 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/bn-bd.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali (Bangladesh) [bn-bd]
//! author : Asraf Hossain Patoary : https://github.com/ashwoolford

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '১',
    2: '২',
    3: '৩',
    4: '৪',
    5: '৫',
    6: '৬',
    7: '৭',
    8: '৮',
    9: '৯',
    0: '০' },

  numberMap = {
    '১': '1',
    '২': '2',
    '৩': '3',
    '৪': '4',
    '৫': '5',
    '৬': '6',
    '৭': '7',
    '৮': '8',
    '৯': '9',
    '০': '0' };


  var bnBd = moment.defineLocale('bn-bd', {
    months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
    '_'),

    monthsShort:
    'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
    '_'),

    weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
    '_'),

    weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
    weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
    longDateFormat: {
      LT: 'A h:mm সময়',
      LTS: 'A h:mm:ss সময়',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm সময়',
      LLLL: 'dddd, D MMMM YYYY, A h:mm সময়' },

    calendar: {
      sameDay: '[আজ] LT',
      nextDay: '[আগামীকাল] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[গতকাল] LT',
      lastWeek: '[গত] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s পরে',
      past: '%s আগে',
      s: 'কয়েক সেকেন্ড',
      ss: '%d সেকেন্ড',
      m: 'এক মিনিট',
      mm: '%d মিনিট',
      h: 'এক ঘন্টা',
      hh: '%d ঘন্টা',
      d: 'এক দিন',
      dd: '%d দিন',
      M: 'এক মাস',
      MM: '%d মাস',
      y: 'এক বছর',
      yy: '%d বছর' },

    preparse: function preparse(string) {
      return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },

    meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'রাত') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'ভোর') {
        return hour;
      } else if (meridiem === 'সকাল') {
        return hour;
      } else if (meridiem === 'দুপুর') {
        return hour >= 3 ? hour : hour + 12;
      } else if (meridiem === 'বিকাল') {
        return hour + 12;
      } else if (meridiem === 'সন্ধ্যা') {
        return hour + 12;
      }
    },

    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'রাত';
      } else if (hour < 6) {
        return 'ভোর';
      } else if (hour < 12) {
        return 'সকাল';
      } else if (hour < 15) {
        return 'দুপুর';
      } else if (hour < 18) {
        return 'বিকাল';
      } else if (hour < 20) {
        return 'সন্ধ্যা';
      } else {
        return 'রাত';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return bnBd;

});

/***/ }),
/* 39 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/bo.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tibetan [bo]
//! author : Thupten N. Chakrishar : https://github.com/vajradog

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '༡',
    2: '༢',
    3: '༣',
    4: '༤',
    5: '༥',
    6: '༦',
    7: '༧',
    8: '༨',
    9: '༩',
    0: '༠' },

  numberMap = {
    '༡': '1',
    '༢': '2',
    '༣': '3',
    '༤': '4',
    '༥': '5',
    '༦': '6',
    '༧': '7',
    '༨': '8',
    '༩': '9',
    '༠': '0' };


  var bo = moment.defineLocale('bo', {
    months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(
    '_'),

    monthsShort:
    'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(
    '_'),

    monthsShortRegex: /^(ཟླ་\d{1,2})/,
    monthsParseExact: true,
    weekdays:
    'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(
    '_'),

    weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(
    '_'),

    weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),
    longDateFormat: {
      LT: 'A h:mm',
      LTS: 'A h:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm',
      LLLL: 'dddd, D MMMM YYYY, A h:mm' },

    calendar: {
      sameDay: '[དི་རིང] LT',
      nextDay: '[སང་ཉིན] LT',
      nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
      lastDay: '[ཁ་སང] LT',
      lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ལ་',
      past: '%s སྔན་ལ',
      s: 'ལམ་སང',
      ss: '%d སྐར་ཆ།',
      m: 'སྐར་མ་གཅིག',
      mm: '%d སྐར་མ',
      h: 'ཆུ་ཚོད་གཅིག',
      hh: '%d ཆུ་ཚོད',
      d: 'ཉིན་གཅིག',
      dd: '%d ཉིན་',
      M: 'ཟླ་བ་གཅིག',
      MM: '%d ཟླ་བ',
      y: 'ལོ་གཅིག',
      yy: '%d ལོ' },

    preparse: function preparse(string) {
      return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (
      meridiem === 'མཚན་མོ' && hour >= 4 ||
      meridiem === 'ཉིན་གུང' && hour < 5 ||
      meridiem === 'དགོང་དག')
      {
        return hour + 12;
      } else {
        return hour;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'མཚན་མོ';
      } else if (hour < 10) {
        return 'ཞོགས་ཀས';
      } else if (hour < 17) {
        return 'ཉིན་གུང';
      } else if (hour < 20) {
        return 'དགོང་དག';
      } else {
        return 'མཚན་མོ';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return bo;

});

/***/ }),
/* 40 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/br.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Breton [br]
//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function relativeTimeWithMutation(number, withoutSuffix, key) {
    var format = {
      mm: 'munutenn',
      MM: 'miz',
      dd: 'devezh' };

    return number + ' ' + mutation(format[key], number);
  }
  function specialMutationForYears(number) {
    switch (lastNumber(number)) {
      case 1:
      case 3:
      case 4:
      case 5:
      case 9:
        return number + ' bloaz';
      default:
        return number + ' vloaz';}

  }
  function lastNumber(number) {
    if (number > 9) {
      return lastNumber(number % 10);
    }
    return number;
  }
  function mutation(text, number) {
    if (number === 2) {
      return softMutation(text);
    }
    return text;
  }
  function softMutation(text) {
    var mutationTable = {
      m: 'v',
      b: 'v',
      d: 'z' };

    if (mutationTable[text.charAt(0)] === undefined) {
      return text;
    }
    return mutationTable[text.charAt(0)] + text.substring(1);
  }

  var monthsParse = [
  /^gen/i,
  /^c[ʼ\']hwe/i,
  /^meu/i,
  /^ebr/i,
  /^mae/i,
  /^(mez|eve)/i,
  /^gou/i,
  /^eos/i,
  /^gwe/i,
  /^her/i,
  /^du/i,
  /^ker/i],

  monthsRegex =
  /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
  monthsStrictRegex =
  /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
  monthsShortStrictRegex =
  /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
  fullWeekdaysParse = [
  /^sul/i,
  /^lun/i,
  /^meurzh/i,
  /^merc[ʼ\']her/i,
  /^yaou/i,
  /^gwener/i,
  /^sadorn/i],

  shortWeekdaysParse = [
  /^Sul/i,
  /^Lun/i,
  /^Meu/i,
  /^Mer/i,
  /^Yao/i,
  /^Gwe/i,
  /^Sad/i],

  minWeekdaysParse = [
  /^Su/i,
  /^Lu/i,
  /^Me([^r]|$)/i,
  /^Mer/i,
  /^Ya/i,
  /^Gw/i,
  /^Sa/i];


  var br = moment.defineLocale('br', {
    months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(
    '_'),

    monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
    weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),
    weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
    weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
    weekdaysParse: minWeekdaysParse,
    fullWeekdaysParse: fullWeekdaysParse,
    shortWeekdaysParse: shortWeekdaysParse,
    minWeekdaysParse: minWeekdaysParse,

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: monthsStrictRegex,
    monthsShortStrictRegex: monthsShortStrictRegex,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,

    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [a viz] MMMM YYYY',
      LLL: 'D [a viz] MMMM YYYY HH:mm',
      LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Hiziv da] LT',
      nextDay: '[Warcʼhoazh da] LT',
      nextWeek: 'dddd [da] LT',
      lastDay: '[Decʼh da] LT',
      lastWeek: 'dddd [paset da] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'a-benn %s',
      past: '%s ʼzo',
      s: 'un nebeud segondennoù',
      ss: '%d eilenn',
      m: 'ur vunutenn',
      mm: relativeTimeWithMutation,
      h: 'un eur',
      hh: '%d eur',
      d: 'un devezh',
      dd: relativeTimeWithMutation,
      M: 'ur miz',
      MM: relativeTimeWithMutation,
      y: 'ur bloaz',
      yy: specialMutationForYears },

    dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
    ordinal: function ordinal(number) {
      var output = number === 1 ? 'añ' : 'vet';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    },
    meridiemParse: /a.m.|g.m./, // goude merenn | a-raok merenn
    isPM: function isPM(token) {
      return token === 'g.m.';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      return hour < 12 ? 'a.m.' : 'g.m.';
    } });


  return br;

});

/***/ }),
/* 41 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/bs.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bosnian [bs]
//! author : Nedim Cholich : https://github.com/frontyard
//! based on (hr) translation by Bojan Marković

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
      case 'ss':
        if (number === 1) {
          result += 'sekunda';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'sekunde';
        } else {
          result += 'sekundi';
        }
        return result;
      case 'm':
        return withoutSuffix ? 'jedna minuta' : 'jedne minute';
      case 'mm':
        if (number === 1) {
          result += 'minuta';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'minute';
        } else {
          result += 'minuta';
        }
        return result;
      case 'h':
        return withoutSuffix ? 'jedan sat' : 'jednog sata';
      case 'hh':
        if (number === 1) {
          result += 'sat';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'sata';
        } else {
          result += 'sati';
        }
        return result;
      case 'dd':
        if (number === 1) {
          result += 'dan';
        } else {
          result += 'dana';
        }
        return result;
      case 'MM':
        if (number === 1) {
          result += 'mjesec';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'mjeseca';
        } else {
          result += 'mjeseci';
        }
        return result;
      case 'yy':
        if (number === 1) {
          result += 'godina';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'godine';
        } else {
          result += 'godina';
        }
        return result;}

  }

  var bs = moment.defineLocale('bs', {
    months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(
    '_'),

    monthsShort:
    'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
    '_'),

    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd, D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[danas u] LT',
      nextDay: '[sutra u] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[u] [nedjelju] [u] LT';
          case 3:
            return '[u] [srijedu] [u] LT';
          case 6:
            return '[u] [subotu] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[u] dddd [u] LT';}

      },
      lastDay: '[jučer u] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
            return '[prošlu] dddd [u] LT';
          case 6:
            return '[prošle] [subote] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[prošli] dddd [u] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'prije %s',
      s: 'par sekundi',
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: 'dan',
      dd: translate,
      M: 'mjesec',
      MM: translate,
      y: 'godinu',
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return bs;

});

/***/ }),
/* 42 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ca.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Catalan [ca]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ca = moment.defineLocale('ca', {
    months: {
      standalone:
      'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(
      '_'),

      format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
      '_'),

      isFormat: /D[oD]?(\s)+MMMM/ },

    monthsShort:
    'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(
    '_'),

    monthsParseExact: true,
    weekdays:
    'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(
    '_'),

    weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
    weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM [de] YYYY',
      ll: 'D MMM YYYY',
      LLL: 'D MMMM [de] YYYY [a les] H:mm',
      lll: 'D MMM YYYY, H:mm',
      LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',
      llll: 'ddd D MMM YYYY, H:mm' },

    calendar: {
      sameDay: function sameDay() {
        return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
      },
      nextDay: function nextDay() {
        return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [passat a ' + (
          this.hours() !== 1 ? 'les' : 'la') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: "d'aquí %s",
      past: 'fa %s',
      s: 'uns segons',
      ss: '%d segons',
      m: 'un minut',
      mm: '%d minuts',
      h: 'una hora',
      hh: '%d hores',
      d: 'un dia',
      dd: '%d dies',
      M: 'un mes',
      MM: '%d mesos',
      y: 'un any',
      yy: '%d anys' },

    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
    ordinal: function ordinal(number, period) {
      var output =
      number === 1 ?
      'r' :
      number === 2 ?
      'n' :
      number === 3 ?
      'r' :
      number === 4 ?
      't' :
      'è';
      if (period === 'w' || period === 'W') {
        output = 'a';
      }
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ca;

});

/***/ }),
/* 43 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/cs.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Czech [cs]
//! author : petrbela : https://github.com/petrbela

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = {
    format: 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(
    '_'),

    standalone:
    'ledna_února_března_dubna_května_června_července_srpna_září_října_listopadu_prosince'.split(
    '_') },


  monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),
  monthsParse = [
  /^led/i,
  /^úno/i,
  /^bře/i,
  /^dub/i,
  /^kvě/i,
  /^(čvn|červen$|června)/i,
  /^(čvc|červenec|července)/i,
  /^srp/i,
  /^zář/i,
  /^říj/i,
  /^lis/i,
  /^pro/i],

  // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
  // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
  monthsRegex =
  /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

  function plural(n) {
    return n > 1 && n < 5 && ~~(n / 10) !== 1;
  }
  function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
      case 's': // a few seconds / in a few seconds / a few seconds ago
        return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';
      case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'sekundy' : 'sekund');
        } else {
          return result + 'sekundami';
        }
      case 'm': // a minute / in a minute / a minute ago
        return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';
      case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'minuty' : 'minut');
        } else {
          return result + 'minutami';
        }
      case 'h': // an hour / in an hour / an hour ago
        return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
      case 'hh': // 9 hours / in 9 hours / 9 hours ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'hodiny' : 'hodin');
        } else {
          return result + 'hodinami';
        }
      case 'd': // a day / in a day / a day ago
        return withoutSuffix || isFuture ? 'den' : 'dnem';
      case 'dd': // 9 days / in 9 days / 9 days ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'dny' : 'dní');
        } else {
          return result + 'dny';
        }
      case 'M': // a month / in a month / a month ago
        return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';
      case 'MM': // 9 months / in 9 months / 9 months ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'měsíce' : 'měsíců');
        } else {
          return result + 'měsíci';
        }
      case 'y': // a year / in a year / a year ago
        return withoutSuffix || isFuture ? 'rok' : 'rokem';
      case 'yy': // 9 years / in 9 years / 9 years ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'roky' : 'let');
        } else {
          return result + 'lety';
        }}

  }

  var cs = moment.defineLocale('cs', {
    months: months,
    monthsShort: monthsShort,
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
    monthsStrictRegex:
    /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
    monthsShortStrictRegex:
    /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd D. MMMM YYYY H:mm',
      l: 'D. M. YYYY' },

    calendar: {
      sameDay: '[dnes v] LT',
      nextDay: '[zítra v] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[v neděli v] LT';
          case 1:
          case 2:
            return '[v] dddd [v] LT';
          case 3:
            return '[ve středu v] LT';
          case 4:
            return '[ve čtvrtek v] LT';
          case 5:
            return '[v pátek v] LT';
          case 6:
            return '[v sobotu v] LT';}

      },
      lastDay: '[včera v] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[minulou neděli v] LT';
          case 1:
          case 2:
            return '[minulé] dddd [v] LT';
          case 3:
            return '[minulou středu v] LT';
          case 4:
          case 5:
            return '[minulý] dddd [v] LT';
          case 6:
            return '[minulou sobotu v] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'před %s',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return cs;

});

/***/ }),
/* 44 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/cv.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chuvash [cv]
//! author : Anatoly Mironov : https://github.com/mirontoli

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var cv = moment.defineLocale('cv', {
    months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(
    '_'),

    monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
    weekdays:
    'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(
    '_'),

    weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
    weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD-MM-YYYY',
      LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
      LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
      LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm' },

    calendar: {
      sameDay: '[Паян] LT [сехетре]',
      nextDay: '[Ыран] LT [сехетре]',
      lastDay: '[Ӗнер] LT [сехетре]',
      nextWeek: '[Ҫитес] dddd LT [сехетре]',
      lastWeek: '[Иртнӗ] dddd LT [сехетре]',
      sameElse: 'L' },

    relativeTime: {
      future: function future(output) {
        var affix = /сехет$/i.exec(output) ?
        'рен' :
        /ҫул$/i.exec(output) ?
        'тан' :
        'ран';
        return output + affix;
      },
      past: '%s каялла',
      s: 'пӗр-ик ҫеккунт',
      ss: '%d ҫеккунт',
      m: 'пӗр минут',
      mm: '%d минут',
      h: 'пӗр сехет',
      hh: '%d сехет',
      d: 'пӗр кун',
      dd: '%d кун',
      M: 'пӗр уйӑх',
      MM: '%d уйӑх',
      y: 'пӗр ҫул',
      yy: '%d ҫул' },

    dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
    ordinal: '%d-мӗш',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return cv;

});

/***/ }),
/* 45 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/cy.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Welsh [cy]
//! author : Robert Allen : https://github.com/robgallen
//! author : https://github.com/ryangreaves

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var cy = moment.defineLocale('cy', {
    months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(
    '_'),

    monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split(
    '_'),

    weekdays:
    'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(
    '_'),

    weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
    weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
    weekdaysParseExact: true,
    // time formats are the same as en-gb
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Heddiw am] LT',
      nextDay: '[Yfory am] LT',
      nextWeek: 'dddd [am] LT',
      lastDay: '[Ddoe am] LT',
      lastWeek: 'dddd [diwethaf am] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'mewn %s',
      past: '%s yn ôl',
      s: 'ychydig eiliadau',
      ss: '%d eiliad',
      m: 'munud',
      mm: '%d munud',
      h: 'awr',
      hh: '%d awr',
      d: 'diwrnod',
      dd: '%d diwrnod',
      M: 'mis',
      MM: '%d mis',
      y: 'blwyddyn',
      yy: '%d flynedd' },

    dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
    ordinal: function ordinal(number) {
      var b = number,
      output = '',
      lookup = [
      '',
      'af',
      'il',
      'ydd',
      'ydd',
      'ed',
      'ed',
      'ed',
      'fed',
      'fed',
      'fed', // 1af to 10fed
      'eg',
      'fed',
      'eg',
      'eg',
      'fed',
      'eg',
      'eg',
      'fed',
      'eg',
      'fed' // 11eg to 20fed
      ];
      if (b > 20) {
        if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
          output = 'fed'; // not 30ain, 70ain or 90ain
        } else {
          output = 'ain';
        }
      } else if (b > 0) {
        output = lookup[b];
      }
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return cy;

});

/***/ }),
/* 46 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/da.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Danish [da]
//! author : Ulrik Nielsen : https://github.com/mrbase

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var da = moment.defineLocale('da', {
    months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY HH:mm',
      LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm' },

    calendar: {
      sameDay: '[i dag kl.] LT',
      nextDay: '[i morgen kl.] LT',
      nextWeek: 'på dddd [kl.] LT',
      lastDay: '[i går kl.] LT',
      lastWeek: '[i] dddd[s kl.] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'om %s',
      past: '%s siden',
      s: 'få sekunder',
      ss: '%d sekunder',
      m: 'et minut',
      mm: '%d minutter',
      h: 'en time',
      hh: '%d timer',
      d: 'en dag',
      dd: '%d dage',
      M: 'en måned',
      MM: '%d måneder',
      y: 'et år',
      yy: '%d år' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return da;

});

/***/ }),
/* 47 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/de.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German [de]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      m: ['eine Minute', 'einer Minute'],
      h: ['eine Stunde', 'einer Stunde'],
      d: ['ein Tag', 'einem Tag'],
      dd: [number + ' Tage', number + ' Tagen'],
      w: ['eine Woche', 'einer Woche'],
      M: ['ein Monat', 'einem Monat'],
      MM: [number + ' Monate', number + ' Monaten'],
      y: ['ein Jahr', 'einem Jahr'],
      yy: [number + ' Jahre', number + ' Jahren'] };

    return withoutSuffix ? format[key][0] : format[key][1];
  }

  var de = moment.defineLocale('de', {
    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
    '_'),

    monthsShort:
    'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact: true,
    weekdays:
    'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
    '_'),

    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY HH:mm',
      LLLL: 'dddd, D. MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[heute um] LT [Uhr]',
      sameElse: 'L',
      nextDay: '[morgen um] LT [Uhr]',
      nextWeek: 'dddd [um] LT [Uhr]',
      lastDay: '[gestern um] LT [Uhr]',
      lastWeek: '[letzten] dddd [um] LT [Uhr]' },

    relativeTime: {
      future: 'in %s',
      past: 'vor %s',
      s: 'ein paar Sekunden',
      ss: '%d Sekunden',
      m: processRelativeTime,
      mm: '%d Minuten',
      h: processRelativeTime,
      hh: '%d Stunden',
      d: processRelativeTime,
      dd: processRelativeTime,
      w: processRelativeTime,
      ww: '%d Wochen',
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return de;

});

/***/ }),
/* 48 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/de-at.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Austria) [de-at]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Martin Groller : https://github.com/MadMG
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      m: ['eine Minute', 'einer Minute'],
      h: ['eine Stunde', 'einer Stunde'],
      d: ['ein Tag', 'einem Tag'],
      dd: [number + ' Tage', number + ' Tagen'],
      w: ['eine Woche', 'einer Woche'],
      M: ['ein Monat', 'einem Monat'],
      MM: [number + ' Monate', number + ' Monaten'],
      y: ['ein Jahr', 'einem Jahr'],
      yy: [number + ' Jahre', number + ' Jahren'] };

    return withoutSuffix ? format[key][0] : format[key][1];
  }

  var deAt = moment.defineLocale('de-at', {
    months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
    '_'),

    monthsShort:
    'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact: true,
    weekdays:
    'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
    '_'),

    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY HH:mm',
      LLLL: 'dddd, D. MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[heute um] LT [Uhr]',
      sameElse: 'L',
      nextDay: '[morgen um] LT [Uhr]',
      nextWeek: 'dddd [um] LT [Uhr]',
      lastDay: '[gestern um] LT [Uhr]',
      lastWeek: '[letzten] dddd [um] LT [Uhr]' },

    relativeTime: {
      future: 'in %s',
      past: 'vor %s',
      s: 'ein paar Sekunden',
      ss: '%d Sekunden',
      m: processRelativeTime,
      mm: '%d Minuten',
      h: processRelativeTime,
      hh: '%d Stunden',
      d: processRelativeTime,
      dd: processRelativeTime,
      w: processRelativeTime,
      ww: '%d Wochen',
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return deAt;

});

/***/ }),
/* 49 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/de-ch.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Switzerland) [de-ch]
//! author : sschueller : https://github.com/sschueller

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      m: ['eine Minute', 'einer Minute'],
      h: ['eine Stunde', 'einer Stunde'],
      d: ['ein Tag', 'einem Tag'],
      dd: [number + ' Tage', number + ' Tagen'],
      w: ['eine Woche', 'einer Woche'],
      M: ['ein Monat', 'einem Monat'],
      MM: [number + ' Monate', number + ' Monaten'],
      y: ['ein Jahr', 'einem Jahr'],
      yy: [number + ' Jahre', number + ' Jahren'] };

    return withoutSuffix ? format[key][0] : format[key][1];
  }

  var deCh = moment.defineLocale('de-ch', {
    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
    '_'),

    monthsShort:
    'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact: true,
    weekdays:
    'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
    '_'),

    weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY HH:mm',
      LLLL: 'dddd, D. MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[heute um] LT [Uhr]',
      sameElse: 'L',
      nextDay: '[morgen um] LT [Uhr]',
      nextWeek: 'dddd [um] LT [Uhr]',
      lastDay: '[gestern um] LT [Uhr]',
      lastWeek: '[letzten] dddd [um] LT [Uhr]' },

    relativeTime: {
      future: 'in %s',
      past: 'vor %s',
      s: 'ein paar Sekunden',
      ss: '%d Sekunden',
      m: processRelativeTime,
      mm: '%d Minuten',
      h: processRelativeTime,
      hh: '%d Stunden',
      d: processRelativeTime,
      dd: processRelativeTime,
      w: processRelativeTime,
      ww: '%d Wochen',
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return deCh;

});

/***/ }),
/* 50 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/dv.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maldivian [dv]
//! author : Jawish Hameed : https://github.com/jawish

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'ޖެނުއަރީ',
  'ފެބްރުއަރީ',
  'މާރިޗު',
  'އޭޕްރީލު',
  'މޭ',
  'ޖޫން',
  'ޖުލައި',
  'އޯގަސްޓު',
  'ސެޕްޓެމްބަރު',
  'އޮކްޓޯބަރު',
  'ނޮވެމްބަރު',
  'ޑިސެމްބަރު'],

  weekdays = [
  'އާދިއްތަ',
  'ހޯމަ',
  'އަންގާރަ',
  'ބުދަ',
  'ބުރާސްފަތި',
  'ހުކުރު',
  'ހޮނިހިރު'];


  var dv = moment.defineLocale('dv', {
    months: months,
    monthsShort: months,
    weekdays: weekdays,
    weekdaysShort: weekdays,
    weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'D/M/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    meridiemParse: /މކ|މފ/,
    isPM: function isPM(input) {
      return 'މފ' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'މކ';
      } else {
        return 'މފ';
      }
    },
    calendar: {
      sameDay: '[މިއަދު] LT',
      nextDay: '[މާދަމާ] LT',
      nextWeek: 'dddd LT',
      lastDay: '[އިއްޔެ] LT',
      lastWeek: '[ފާއިތުވި] dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ތެރޭގައި %s',
      past: 'ކުރިން %s',
      s: 'ސިކުންތުކޮޅެއް',
      ss: 'd% ސިކުންތު',
      m: 'މިނިޓެއް',
      mm: 'މިނިޓު %d',
      h: 'ގަޑިއިރެއް',
      hh: 'ގަޑިއިރު %d',
      d: 'ދުވަހެއް',
      dd: 'ދުވަސް %d',
      M: 'މަހެއް',
      MM: 'މަސް %d',
      y: 'އަހަރެއް',
      yy: 'އަހަރު %d' },

    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      dow: 7, // Sunday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return dv;

});

/***/ }),
/* 51 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/el.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Greek [el]
//! author : Aggelos Karalias : https://github.com/mehiel

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function isFunction(input) {
    return (
      typeof Function !== 'undefined' && input instanceof Function ||
      Object.prototype.toString.call(input) === '[object Function]');

  }

  var el = moment.defineLocale('el', {
    monthsNominativeEl:
    'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(
    '_'),

    monthsGenitiveEl:
    'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(
    '_'),

    months: function months(momentToFormat, format) {
      if (!momentToFormat) {
        return this._monthsNominativeEl;
      } else if (
      typeof format === 'string' &&
      /D/.test(format.substring(0, format.indexOf('MMMM'))))
      {
        // if there is a day number before 'MMMM'
        return this._monthsGenitiveEl[momentToFormat.month()];
      } else {
        return this._monthsNominativeEl[momentToFormat.month()];
      }
    },
    monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
    weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(
    '_'),

    weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
    weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'μμ' : 'ΜΜ';
      } else {
        return isLower ? 'πμ' : 'ΠΜ';
      }
    },
    isPM: function isPM(input) {
      return (input + '').toLowerCase()[0] === 'μ';
    },
    meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendarEl: {
      sameDay: '[Σήμερα {}] LT',
      nextDay: '[Αύριο {}] LT',
      nextWeek: 'dddd [{}] LT',
      lastDay: '[Χθες {}] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 6:
            return '[το προηγούμενο] dddd [{}] LT';
          default:
            return '[την προηγούμενη] dddd [{}] LT';}

      },
      sameElse: 'L' },

    calendar: function calendar(key, mom) {
      var output = this._calendarEl[key],
      hours = mom && mom.hours();
      if (isFunction(output)) {
        output = output.apply(mom);
      }
      return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');
    },
    relativeTime: {
      future: 'σε %s',
      past: '%s πριν',
      s: 'λίγα δευτερόλεπτα',
      ss: '%d δευτερόλεπτα',
      m: 'ένα λεπτό',
      mm: '%d λεπτά',
      h: 'μία ώρα',
      hh: '%d ώρες',
      d: 'μία μέρα',
      dd: '%d μέρες',
      M: 'ένας μήνας',
      MM: '%d μήνες',
      y: 'ένας χρόνος',
      yy: '%d χρόνια' },

    dayOfMonthOrdinalParse: /\d{1,2}η/,
    ordinal: '%dη',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4st is the first week of the year.
    } });


  return el;

});

/***/ }),
/* 52 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/en-au.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Australia) [en-au]
//! author : Jared Morse : https://github.com/jarcoal

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enAu = moment.defineLocale('en-au', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enAu;

});

/***/ }),
/* 53 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/en-ca.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Canada) [en-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enCa = moment.defineLocale('en-ca', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'YYYY-MM-DD',
      LL: 'MMMM D, YYYY',
      LLL: 'MMMM D, YYYY h:mm A',
      LLLL: 'dddd, MMMM D, YYYY h:mm A' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    } });


  return enCa;

});

/***/ }),
/* 54 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/en-gb.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (United Kingdom) [en-gb]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enGb = moment.defineLocale('en-gb', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enGb;

});

/***/ }),
/* 55 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/en-ie.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Ireland) [en-ie]
//! author : Chris Cartlidge : https://github.com/chriscartlidge

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enIe = moment.defineLocale('en-ie', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enIe;

});

/***/ }),
/* 56 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/en-il.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Israel) [en-il]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enIl = moment.defineLocale('en-il', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    } });


  return enIl;

});

/***/ }),
/* 57 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/en-in.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (India) [en-in]
//! author : Jatin Agrawal : https://github.com/jatinag22

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enIn = moment.defineLocale('en-in', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 1st is the first week of the year.
    } });


  return enIn;

});

/***/ }),
/* 58 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/en-nz.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (New Zealand) [en-nz]
//! author : Luke McGregor : https://github.com/lukemcgregor

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enNz = moment.defineLocale('en-nz', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enNz;

});

/***/ }),
/* 59 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/en-sg.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Singapore) [en-sg]
//! author : Matthew Castrillon-Madrigal : https://github.com/techdimension

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var enSg = moment.defineLocale('en-sg', {
    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
    '_'),

    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      ss: '%d seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return enSg;

});

/***/ }),
/* 60 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/eo.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Esperanto [eo]
//! author : Colin Dean : https://github.com/colindean
//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
//! comment : miestasmia corrected the translation by colindean
//! comment : Vivakvo corrected the translation by colindean and miestasmia

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var eo = moment.defineLocale('eo', {
    months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(
    '_'),

    monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),
    weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
    weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
    weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: '[la] D[-an de] MMMM, YYYY',
      LLL: '[la] D[-an de] MMMM, YYYY HH:mm',
      LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',
      llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm' },

    meridiemParse: /[ap]\.t\.m/i,
    isPM: function isPM(input) {
      return input.charAt(0).toLowerCase() === 'p';
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'p.t.m.' : 'P.T.M.';
      } else {
        return isLower ? 'a.t.m.' : 'A.T.M.';
      }
    },
    calendar: {
      sameDay: '[Hodiaŭ je] LT',
      nextDay: '[Morgaŭ je] LT',
      nextWeek: 'dddd[n je] LT',
      lastDay: '[Hieraŭ je] LT',
      lastWeek: '[pasintan] dddd[n je] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'post %s',
      past: 'antaŭ %s',
      s: 'kelkaj sekundoj',
      ss: '%d sekundoj',
      m: 'unu minuto',
      mm: '%d minutoj',
      h: 'unu horo',
      hh: '%d horoj',
      d: 'unu tago', //ne 'diurno', ĉar estas uzita por proksimumo
      dd: '%d tagoj',
      M: 'unu monato',
      MM: '%d monatoj',
      y: 'unu jaro',
      yy: '%d jaroj' },

    dayOfMonthOrdinalParse: /\d{1,2}a/,
    ordinal: '%da',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return eo;

});

/***/ }),
/* 61 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/es.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish [es]
//! author : Julio Napurí : https://github.com/julionc

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortDot =
  'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
  '_'),

  _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
  monthsParse = [
  /^ene/i,
  /^feb/i,
  /^mar/i,
  /^abr/i,
  /^may/i,
  /^jun/i,
  /^jul/i,
  /^ago/i,
  /^sep/i,
  /^oct/i,
  /^nov/i,
  /^dic/i],

  monthsRegex =
  /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

  var es = moment.defineLocale('es', {
    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortDot;
      } else if (/-MMM-/.test(format)) {
        return _monthsShort[m.month()];
      } else {
        return monthsShortDot[m.month()];
      }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex:
    /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex:
    /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY H:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [pasado a la' + (
          this.hours() !== 1 ? 's' : '') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'en %s',
      past: 'hace %s',
      s: 'unos segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'una hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      w: 'una semana',
      ww: '%d semanas',
      M: 'un mes',
      MM: '%d meses',
      y: 'un año',
      yy: '%d años' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    },
    invalidDate: 'Fecha inválida' });


  return es;

});

/***/ }),
/* 62 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/es-do.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Dominican Republic) [es-do]

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortDot =
  'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
  '_'),

  _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
  monthsParse = [
  /^ene/i,
  /^feb/i,
  /^mar/i,
  /^abr/i,
  /^may/i,
  /^jun/i,
  /^jul/i,
  /^ago/i,
  /^sep/i,
  /^oct/i,
  /^nov/i,
  /^dic/i],

  monthsRegex =
  /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

  var esDo = moment.defineLocale('es-do', {
    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortDot;
      } else if (/-MMM-/.test(format)) {
        return _monthsShort[m.month()];
      } else {
        return monthsShortDot[m.month()];
      }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex:
    /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex:
    /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY h:mm A',
      LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [pasado a la' + (
          this.hours() !== 1 ? 's' : '') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'en %s',
      past: 'hace %s',
      s: 'unos segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'una hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      w: 'una semana',
      ww: '%d semanas',
      M: 'un mes',
      MM: '%d meses',
      y: 'un año',
      yy: '%d años' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return esDo;

});

/***/ }),
/* 63 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/es-mx.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Mexico) [es-mx]
//! author : JC Franco : https://github.com/jcfranco

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortDot =
  'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
  '_'),

  _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
  monthsParse = [
  /^ene/i,
  /^feb/i,
  /^mar/i,
  /^abr/i,
  /^may/i,
  /^jun/i,
  /^jul/i,
  /^ago/i,
  /^sep/i,
  /^oct/i,
  /^nov/i,
  /^dic/i],

  monthsRegex =
  /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

  var esMx = moment.defineLocale('es-mx', {
    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortDot;
      } else if (/-MMM-/.test(format)) {
        return _monthsShort[m.month()];
      } else {
        return monthsShortDot[m.month()];
      }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex:
    /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex:
    /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY H:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [pasado a la' + (
          this.hours() !== 1 ? 's' : '') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'en %s',
      past: 'hace %s',
      s: 'unos segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'una hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      w: 'una semana',
      ww: '%d semanas',
      M: 'un mes',
      MM: '%d meses',
      y: 'un año',
      yy: '%d años' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    },
    invalidDate: 'Fecha inválida' });


  return esMx;

});

/***/ }),
/* 64 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/es-us.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (United States) [es-us]
//! author : bustta : https://github.com/bustta
//! author : chrisrodz : https://github.com/chrisrodz

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortDot =
  'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
  '_'),

  _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
  monthsParse = [
  /^ene/i,
  /^feb/i,
  /^mar/i,
  /^abr/i,
  /^may/i,
  /^jun/i,
  /^jul/i,
  /^ago/i,
  /^sep/i,
  /^oct/i,
  /^nov/i,
  /^dic/i],

  monthsRegex =
  /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

  var esUs = moment.defineLocale('es-us', {
    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortDot;
      } else if (/-MMM-/.test(format)) {
        return _monthsShort[m.month()];
      } else {
        return monthsShortDot[m.month()];
      }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex:
    /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex:
    /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'MM/DD/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY h:mm A',
      LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastDay: function lastDay() {
        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[el] dddd [pasado a la' + (
          this.hours() !== 1 ? 's' : '') +
          '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'en %s',
      past: 'hace %s',
      s: 'unos segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'una hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      w: 'una semana',
      ww: '%d semanas',
      M: 'un mes',
      MM: '%d meses',
      y: 'un año',
      yy: '%d años' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return esUs;

});

/***/ }),
/* 65 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/et.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Estonian [et]
//! author : Henry Kehlmann : https://github.com/madhenry
//! improvements : Illimar Tambek : https://github.com/ragulka

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
      ss: [number + 'sekundi', number + 'sekundit'],
      m: ['ühe minuti', 'üks minut'],
      mm: [number + ' minuti', number + ' minutit'],
      h: ['ühe tunni', 'tund aega', 'üks tund'],
      hh: [number + ' tunni', number + ' tundi'],
      d: ['ühe päeva', 'üks päev'],
      M: ['kuu aja', 'kuu aega', 'üks kuu'],
      MM: [number + ' kuu', number + ' kuud'],
      y: ['ühe aasta', 'aasta', 'üks aasta'],
      yy: [number + ' aasta', number + ' aastat'] };

    if (withoutSuffix) {
      return format[key][2] ? format[key][2] : format[key][1];
    }
    return isFuture ? format[key][0] : format[key][1];
  }

  var et = moment.defineLocale('et', {
    months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(
    '_'),

    monthsShort:
    'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
    weekdays:
    'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(
    '_'),

    weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
    weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd, D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[Täna,] LT',
      nextDay: '[Homme,] LT',
      nextWeek: '[Järgmine] dddd LT',
      lastDay: '[Eile,] LT',
      lastWeek: '[Eelmine] dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s pärast',
      past: '%s tagasi',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: '%d päeva',
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return et;

});

/***/ }),
/* 66 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/eu.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Basque [eu]
//! author : Eneko Illarramendi : https://github.com/eillarra

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var eu = moment.defineLocale('eu', {
    months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(
    '_'),

    monthsShort:
    'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(
    '_'),

    monthsParseExact: true,
    weekdays:
    'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(
    '_'),

    weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
    weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'YYYY[ko] MMMM[ren] D[a]',
      LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
      LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
      l: 'YYYY-M-D',
      ll: 'YYYY[ko] MMM D[a]',
      lll: 'YYYY[ko] MMM D[a] HH:mm',
      llll: 'ddd, YYYY[ko] MMM D[a] HH:mm' },

    calendar: {
      sameDay: '[gaur] LT[etan]',
      nextDay: '[bihar] LT[etan]',
      nextWeek: 'dddd LT[etan]',
      lastDay: '[atzo] LT[etan]',
      lastWeek: '[aurreko] dddd LT[etan]',
      sameElse: 'L' },

    relativeTime: {
      future: '%s barru',
      past: 'duela %s',
      s: 'segundo batzuk',
      ss: '%d segundo',
      m: 'minutu bat',
      mm: '%d minutu',
      h: 'ordu bat',
      hh: '%d ordu',
      d: 'egun bat',
      dd: '%d egun',
      M: 'hilabete bat',
      MM: '%d hilabete',
      y: 'urte bat',
      yy: '%d urte' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return eu;

});

/***/ }),
/* 67 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/fa.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Persian [fa]
//! author : Ebrahim Byagowi : https://github.com/ebraminio

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '۱',
    2: '۲',
    3: '۳',
    4: '۴',
    5: '۵',
    6: '۶',
    7: '۷',
    8: '۸',
    9: '۹',
    0: '۰' },

  numberMap = {
    '۱': '1',
    '۲': '2',
    '۳': '3',
    '۴': '4',
    '۵': '5',
    '۶': '6',
    '۷': '7',
    '۸': '8',
    '۹': '9',
    '۰': '0' };


  var fa = moment.defineLocale('fa', {
    months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
    '_'),

    monthsShort:
    'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
    '_'),

    weekdays:
    "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split(
    '_'),

    weekdaysShort:
    "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split(
    '_'),

    weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    meridiemParse: /قبل از ظهر|بعد از ظهر/,
    isPM: function isPM(input) {
      return /بعد از ظهر/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'قبل از ظهر';
      } else {
        return 'بعد از ظهر';
      }
    },
    calendar: {
      sameDay: '[امروز ساعت] LT',
      nextDay: '[فردا ساعت] LT',
      nextWeek: 'dddd [ساعت] LT',
      lastDay: '[دیروز ساعت] LT',
      lastWeek: 'dddd [پیش] [ساعت] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'در %s',
      past: '%s پیش',
      s: 'چند ثانیه',
      ss: '%d ثانیه',
      m: 'یک دقیقه',
      mm: '%d دقیقه',
      h: 'یک ساعت',
      hh: '%d ساعت',
      d: 'یک روز',
      dd: '%d روز',
      M: 'یک ماه',
      MM: '%d ماه',
      y: 'یک سال',
      yy: '%d سال' },

    preparse: function preparse(string) {
      return string.
      replace(/[۰-۹]/g, function (match) {
        return numberMap[match];
      }).
      replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    dayOfMonthOrdinalParse: /\d{1,2}م/,
    ordinal: '%dم',
    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return fa;

});

/***/ }),
/* 68 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/fi.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Finnish [fi]
//! author : Tarmo Aidantausta : https://github.com/bleadof

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var numbersPast =
  'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(
  ' '),

  numbersFuture = [
  'nolla',
  'yhden',
  'kahden',
  'kolmen',
  'neljän',
  'viiden',
  'kuuden',
  numbersPast[7],
  numbersPast[8],
  numbersPast[9]];

  function translate(number, withoutSuffix, key, isFuture) {
    var result = '';
    switch (key) {
      case 's':
        return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
      case 'ss':
        result = isFuture ? 'sekunnin' : 'sekuntia';
        break;
      case 'm':
        return isFuture ? 'minuutin' : 'minuutti';
      case 'mm':
        result = isFuture ? 'minuutin' : 'minuuttia';
        break;
      case 'h':
        return isFuture ? 'tunnin' : 'tunti';
      case 'hh':
        result = isFuture ? 'tunnin' : 'tuntia';
        break;
      case 'd':
        return isFuture ? 'päivän' : 'päivä';
      case 'dd':
        result = isFuture ? 'päivän' : 'päivää';
        break;
      case 'M':
        return isFuture ? 'kuukauden' : 'kuukausi';
      case 'MM':
        result = isFuture ? 'kuukauden' : 'kuukautta';
        break;
      case 'y':
        return isFuture ? 'vuoden' : 'vuosi';
      case 'yy':
        result = isFuture ? 'vuoden' : 'vuotta';
        break;}

    result = verbalNumber(number, isFuture) + ' ' + result;
    return result;
  }
  function verbalNumber(number, isFuture) {
    return number < 10 ?
    isFuture ?
    numbersFuture[number] :
    numbersPast[number] :
    number;
  }

  var fi = moment.defineLocale('fi', {
    months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(
    '_'),

    monthsShort:
    'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(
    '_'),

    weekdays:
    'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(
    '_'),

    weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
    weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD.MM.YYYY',
      LL: 'Do MMMM[ta] YYYY',
      LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
      LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
      l: 'D.M.YYYY',
      ll: 'Do MMM YYYY',
      lll: 'Do MMM YYYY, [klo] HH.mm',
      llll: 'ddd, Do MMM YYYY, [klo] HH.mm' },

    calendar: {
      sameDay: '[tänään] [klo] LT',
      nextDay: '[huomenna] [klo] LT',
      nextWeek: 'dddd [klo] LT',
      lastDay: '[eilen] [klo] LT',
      lastWeek: '[viime] dddd[na] [klo] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s päästä',
      past: '%s sitten',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fi;

});

/***/ }),
/* 69 */
/*!***************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/fil.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Filipino [fil]
//! author : Dan Hagman : https://github.com/hagmandan
//! author : Matthew Co : https://github.com/matthewdeeco

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var fil = moment.defineLocale('fil', {
    months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
    '_'),

    monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
    weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
    '_'),

    weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
    weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'MM/D/YYYY',
      LL: 'MMMM D, YYYY',
      LLL: 'MMMM D, YYYY HH:mm',
      LLLL: 'dddd, MMMM DD, YYYY HH:mm' },

    calendar: {
      sameDay: 'LT [ngayong araw]',
      nextDay: '[Bukas ng] LT',
      nextWeek: 'LT [sa susunod na] dddd',
      lastDay: 'LT [kahapon]',
      lastWeek: 'LT [noong nakaraang] dddd',
      sameElse: 'L' },

    relativeTime: {
      future: 'sa loob ng %s',
      past: '%s ang nakalipas',
      s: 'ilang segundo',
      ss: '%d segundo',
      m: 'isang minuto',
      mm: '%d minuto',
      h: 'isang oras',
      hh: '%d oras',
      d: 'isang araw',
      dd: '%d araw',
      M: 'isang buwan',
      MM: '%d buwan',
      y: 'isang taon',
      yy: '%d taon' },

    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal: function ordinal(number) {
      return number;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fil;

});

/***/ }),
/* 70 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/fo.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Faroese [fo]
//! author : Ragnar Johannesen : https://github.com/ragnar123
//! author : Kristian Sakarisson : https://github.com/sakarisson

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var fo = moment.defineLocale('fo', {
    months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
    weekdays:
    'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(
    '_'),

    weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
    weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D. MMMM, YYYY HH:mm' },

    calendar: {
      sameDay: '[Í dag kl.] LT',
      nextDay: '[Í morgin kl.] LT',
      nextWeek: 'dddd [kl.] LT',
      lastDay: '[Í gjár kl.] LT',
      lastWeek: '[síðstu] dddd [kl] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'um %s',
      past: '%s síðani',
      s: 'fá sekund',
      ss: '%d sekundir',
      m: 'ein minuttur',
      mm: '%d minuttir',
      h: 'ein tími',
      hh: '%d tímar',
      d: 'ein dagur',
      dd: '%d dagar',
      M: 'ein mánaður',
      MM: '%d mánaðir',
      y: 'eitt ár',
      yy: '%d ár' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fo;

});

/***/ }),
/* 71 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/fr.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French [fr]
//! author : John Fischer : https://github.com/jfroffice

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsStrictRegex =
  /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
  monthsShortStrictRegex =
  /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,
  monthsRegex =
  /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
  monthsParse = [
  /^janv/i,
  /^févr/i,
  /^mars/i,
  /^avr/i,
  /^mai/i,
  /^juin/i,
  /^juil/i,
  /^août/i,
  /^sept/i,
  /^oct/i,
  /^nov/i,
  /^déc/i];


  var fr = moment.defineLocale('fr', {
    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
    '_'),

    monthsShort:
    'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
    '_'),

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: monthsStrictRegex,
    monthsShortStrictRegex: monthsShortStrictRegex,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Aujourd’hui à] LT',
      nextDay: '[Demain à] LT',
      nextWeek: 'dddd [à] LT',
      lastDay: '[Hier à] LT',
      lastWeek: 'dddd [dernier à] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dans %s',
      past: 'il y a %s',
      s: 'quelques secondes',
      ss: '%d secondes',
      m: 'une minute',
      mm: '%d minutes',
      h: 'une heure',
      hh: '%d heures',
      d: 'un jour',
      dd: '%d jours',
      w: 'une semaine',
      ww: '%d semaines',
      M: 'un mois',
      MM: '%d mois',
      y: 'un an',
      yy: '%d ans' },

    dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // TODO: Return 'e' when day of month > 1. Move this case inside
        // block for masculine words below.
        // See https://github.com/moment/moment/issues/3375
        case 'D':
          return number + (number === 1 ? 'er' : '');

        // Words with masculine grammatical gender: mois, trimestre, jour
        default:
        case 'M':
        case 'Q':
        case 'DDD':
        case 'd':
          return number + (number === 1 ? 'er' : 'e');

        // Words with feminine grammatical gender: semaine
        case 'w':
        case 'W':
          return number + (number === 1 ? 're' : 'e');}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fr;

});

/***/ }),
/* 72 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/fr-ca.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Canada) [fr-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var frCa = moment.defineLocale('fr-ca', {
    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
    '_'),

    monthsShort:
    'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Aujourd’hui à] LT',
      nextDay: '[Demain à] LT',
      nextWeek: 'dddd [à] LT',
      lastDay: '[Hier à] LT',
      lastWeek: 'dddd [dernier à] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dans %s',
      past: 'il y a %s',
      s: 'quelques secondes',
      ss: '%d secondes',
      m: 'une minute',
      mm: '%d minutes',
      h: 'une heure',
      hh: '%d heures',
      d: 'un jour',
      dd: '%d jours',
      M: 'un mois',
      MM: '%d mois',
      y: 'un an',
      yy: '%d ans' },

    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // Words with masculine grammatical gender: mois, trimestre, jour
        default:
        case 'M':
        case 'Q':
        case 'D':
        case 'DDD':
        case 'd':
          return number + (number === 1 ? 'er' : 'e');

        // Words with feminine grammatical gender: semaine
        case 'w':
        case 'W':
          return number + (number === 1 ? 're' : 'e');}

    } });


  return frCa;

});

/***/ }),
/* 73 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/fr-ch.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Switzerland) [fr-ch]
//! author : Gaspard Bucher : https://github.com/gaspard

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var frCh = moment.defineLocale('fr-ch', {
    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
    '_'),

    monthsShort:
    'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Aujourd’hui à] LT',
      nextDay: '[Demain à] LT',
      nextWeek: 'dddd [à] LT',
      lastDay: '[Hier à] LT',
      lastWeek: 'dddd [dernier à] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dans %s',
      past: 'il y a %s',
      s: 'quelques secondes',
      ss: '%d secondes',
      m: 'une minute',
      mm: '%d minutes',
      h: 'une heure',
      hh: '%d heures',
      d: 'un jour',
      dd: '%d jours',
      M: 'un mois',
      MM: '%d mois',
      y: 'un an',
      yy: '%d ans' },

    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // Words with masculine grammatical gender: mois, trimestre, jour
        default:
        case 'M':
        case 'Q':
        case 'D':
        case 'DDD':
        case 'd':
          return number + (number === 1 ? 'er' : 'e');

        // Words with feminine grammatical gender: semaine
        case 'w':
        case 'W':
          return number + (number === 1 ? 're' : 'e');}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return frCh;

});

/***/ }),
/* 74 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/fy.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Frisian [fy]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortWithDots =
  'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
  monthsShortWithoutDots =
  'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

  var fy = moment.defineLocale('fy', {
    months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortWithDots;
      } else if (/-MMM-/.test(format)) {
        return monthsShortWithoutDots[m.month()];
      } else {
        return monthsShortWithDots[m.month()];
      }
    },
    monthsParseExact: true,
    weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(
    '_'),

    weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
    weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD-MM-YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[hjoed om] LT',
      nextDay: '[moarn om] LT',
      nextWeek: 'dddd [om] LT',
      lastDay: '[juster om] LT',
      lastWeek: '[ôfrûne] dddd [om] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'oer %s',
      past: '%s lyn',
      s: 'in pear sekonden',
      ss: '%d sekonden',
      m: 'ien minút',
      mm: '%d minuten',
      h: 'ien oere',
      hh: '%d oeren',
      d: 'ien dei',
      dd: '%d dagen',
      M: 'ien moanne',
      MM: '%d moannen',
      y: 'ien jier',
      yy: '%d jierren' },

    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal: function ordinal(number) {
      return (
        number + (
        number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'));

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return fy;

});

/***/ }),
/* 75 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ga.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Irish or Irish Gaelic [ga]
//! author : André Silva : https://github.com/askpt

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'Eanáir',
  'Feabhra',
  'Márta',
  'Aibreán',
  'Bealtaine',
  'Meitheamh',
  'Iúil',
  'Lúnasa',
  'Meán Fómhair',
  'Deireadh Fómhair',
  'Samhain',
  'Nollaig'],

  monthsShort = [
  'Ean',
  'Feabh',
  'Márt',
  'Aib',
  'Beal',
  'Meith',
  'Iúil',
  'Lún',
  'M.F.',
  'D.F.',
  'Samh',
  'Noll'],

  weekdays = [
  'Dé Domhnaigh',
  'Dé Luain',
  'Dé Máirt',
  'Dé Céadaoin',
  'Déardaoin',
  'Dé hAoine',
  'Dé Sathairn'],

  weekdaysShort = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],
  weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'];

  var ga = moment.defineLocale('ga', {
    months: months,
    monthsShort: monthsShort,
    monthsParseExact: true,
    weekdays: weekdays,
    weekdaysShort: weekdaysShort,
    weekdaysMin: weekdaysMin,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Inniu ag] LT',
      nextDay: '[Amárach ag] LT',
      nextWeek: 'dddd [ag] LT',
      lastDay: '[Inné ag] LT',
      lastWeek: 'dddd [seo caite] [ag] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'i %s',
      past: '%s ó shin',
      s: 'cúpla soicind',
      ss: '%d soicind',
      m: 'nóiméad',
      mm: '%d nóiméad',
      h: 'uair an chloig',
      hh: '%d uair an chloig',
      d: 'lá',
      dd: '%d lá',
      M: 'mí',
      MM: '%d míonna',
      y: 'bliain',
      yy: '%d bliain' },

    dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
    ordinal: function ordinal(number) {
      var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ga;

});

/***/ }),
/* 76 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/gd.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Scottish Gaelic [gd]
//! author : Jon Ashdown : https://github.com/jonashdown

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'Am Faoilleach',
  'An Gearran',
  'Am Màrt',
  'An Giblean',
  'An Cèitean',
  'An t-Ògmhios',
  'An t-Iuchar',
  'An Lùnastal',
  'An t-Sultain',
  'An Dàmhair',
  'An t-Samhain',
  'An Dùbhlachd'],

  monthsShort = [
  'Faoi',
  'Gear',
  'Màrt',
  'Gibl',
  'Cèit',
  'Ògmh',
  'Iuch',
  'Lùn',
  'Sult',
  'Dàmh',
  'Samh',
  'Dùbh'],

  weekdays = [
  'Didòmhnaich',
  'Diluain',
  'Dimàirt',
  'Diciadain',
  'Diardaoin',
  'Dihaoine',
  'Disathairne'],

  weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],
  weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

  var gd = moment.defineLocale('gd', {
    months: months,
    monthsShort: monthsShort,
    monthsParseExact: true,
    weekdays: weekdays,
    weekdaysShort: weekdaysShort,
    weekdaysMin: weekdaysMin,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[An-diugh aig] LT',
      nextDay: '[A-màireach aig] LT',
      nextWeek: 'dddd [aig] LT',
      lastDay: '[An-dè aig] LT',
      lastWeek: 'dddd [seo chaidh] [aig] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ann an %s',
      past: 'bho chionn %s',
      s: 'beagan diogan',
      ss: '%d diogan',
      m: 'mionaid',
      mm: '%d mionaidean',
      h: 'uair',
      hh: '%d uairean',
      d: 'latha',
      dd: '%d latha',
      M: 'mìos',
      MM: '%d mìosan',
      y: 'bliadhna',
      yy: '%d bliadhna' },

    dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
    ordinal: function ordinal(number) {
      var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return gd;

});

/***/ }),
/* 77 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/gl.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Galician [gl]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var gl = moment.defineLocale('gl', {
    months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(
    '_'),

    monthsShort:
    'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
    weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
    weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY H:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm' },

    calendar: {
      sameDay: function sameDay() {
        return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
      },
      nextDay: function nextDay() {
        return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
      },
      nextWeek: function nextWeek() {
        return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
      },
      lastDay: function lastDay() {
        return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';
      },
      lastWeek: function lastWeek() {
        return (
          '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT');

      },
      sameElse: 'L' },

    relativeTime: {
      future: function future(str) {
        if (str.indexOf('un') === 0) {
          return 'n' + str;
        }
        return 'en ' + str;
      },
      past: 'hai %s',
      s: 'uns segundos',
      ss: '%d segundos',
      m: 'un minuto',
      mm: '%d minutos',
      h: 'unha hora',
      hh: '%d horas',
      d: 'un día',
      dd: '%d días',
      M: 'un mes',
      MM: '%d meses',
      y: 'un ano',
      yy: '%d anos' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return gl;

});

/***/ }),
/* 78 */
/*!********************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/gom-deva.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Devanagari script [gom-deva]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],
      ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],
      m: ['एका मिणटान', 'एक मिनूट'],
      mm: [number + ' मिणटांनी', number + ' मिणटां'],
      h: ['एका वरान', 'एक वर'],
      hh: [number + ' वरांनी', number + ' वरां'],
      d: ['एका दिसान', 'एक दीस'],
      dd: [number + ' दिसांनी', number + ' दीस'],
      M: ['एका म्हयन्यान', 'एक म्हयनो'],
      MM: [number + ' म्हयन्यानी', number + ' म्हयने'],
      y: ['एका वर्सान', 'एक वर्स'],
      yy: [number + ' वर्सांनी', number + ' वर्सां'] };

    return isFuture ? format[key][0] : format[key][1];
  }

  var gomDeva = moment.defineLocale('gom-deva', {
    months: {
      standalone:
      'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
      '_'),

      format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(
      '_'),

      isFormat: /MMMM(\s)+D[oD]?/ },

    monthsShort:
    'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),
    weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),
    weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'A h:mm [वाजतां]',
      LTS: 'A h:mm:ss [वाजतां]',
      L: 'DD-MM-YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY A h:mm [वाजतां]',
      LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',
      llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]' },

    calendar: {
      sameDay: '[आयज] LT',
      nextDay: '[फाल्यां] LT',
      nextWeek: '[फुडलो] dddd[,] LT',
      lastDay: '[काल] LT',
      lastWeek: '[फाटलो] dddd[,] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s',
      past: '%s आदीं',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: processRelativeTime,
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // the ordinal 'वेर' only applies to day of the month
        case 'D':
          return number + 'वेर';
        default:
        case 'M':
        case 'Q':
        case 'DDD':
        case 'd':
        case 'w':
        case 'W':
          return number;}

    },
    week: {
      dow: 0, // Sunday is the first day of the week
      doy: 3 // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)
    },
    meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'राती') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'सकाळीं') {
        return hour;
      } else if (meridiem === 'दनपारां') {
        return hour > 12 ? hour : hour + 12;
      } else if (meridiem === 'सांजे') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'राती';
      } else if (hour < 12) {
        return 'सकाळीं';
      } else if (hour < 16) {
        return 'दनपारां';
      } else if (hour < 20) {
        return 'सांजे';
      } else {
        return 'राती';
      }
    } });


  return gomDeva;

});

/***/ }),
/* 79 */
/*!********************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/gom-latn.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Latin script [gom-latn]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      s: ['thoddea sekondamni', 'thodde sekond'],
      ss: [number + ' sekondamni', number + ' sekond'],
      m: ['eka mintan', 'ek minut'],
      mm: [number + ' mintamni', number + ' mintam'],
      h: ['eka voran', 'ek vor'],
      hh: [number + ' voramni', number + ' voram'],
      d: ['eka disan', 'ek dis'],
      dd: [number + ' disamni', number + ' dis'],
      M: ['eka mhoinean', 'ek mhoino'],
      MM: [number + ' mhoineamni', number + ' mhoine'],
      y: ['eka vorsan', 'ek voros'],
      yy: [number + ' vorsamni', number + ' vorsam'] };

    return isFuture ? format[key][0] : format[key][1];
  }

  var gomLatn = moment.defineLocale('gom-latn', {
    months: {
      standalone:
      'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(
      '_'),

      format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(
      '_'),

      isFormat: /MMMM(\s)+D[oD]?/ },

    monthsShort:
    'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
    monthsParseExact: true,
    weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split('_'),
    weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
    weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'A h:mm [vazta]',
      LTS: 'A h:mm:ss [vazta]',
      L: 'DD-MM-YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY A h:mm [vazta]',
      LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',
      llll: 'ddd, D MMM YYYY, A h:mm [vazta]' },

    calendar: {
      sameDay: '[Aiz] LT',
      nextDay: '[Faleam] LT',
      nextWeek: '[Fuddlo] dddd[,] LT',
      lastDay: '[Kal] LT',
      lastWeek: '[Fattlo] dddd[,] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s',
      past: '%s adim',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: processRelativeTime,
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}(er)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        // the ordinal 'er' only applies to day of the month
        case 'D':
          return number + 'er';
        default:
        case 'M':
        case 'Q':
        case 'DDD':
        case 'd':
        case 'w':
        case 'W':
          return number;}

    },
    week: {
      dow: 0, // Sunday is the first day of the week
      doy: 3 // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)
    },
    meridiemParse: /rati|sokallim|donparam|sanje/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'rati') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'sokallim') {
        return hour;
      } else if (meridiem === 'donparam') {
        return hour > 12 ? hour : hour + 12;
      } else if (meridiem === 'sanje') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'rati';
      } else if (hour < 12) {
        return 'sokallim';
      } else if (hour < 16) {
        return 'donparam';
      } else if (hour < 20) {
        return 'sanje';
      } else {
        return 'rati';
      }
    } });


  return gomLatn;

});

/***/ }),
/* 80 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/gu.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Gujarati [gu]
//! author : Kaushik Thanki : https://github.com/Kaushik1987

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '૧',
    2: '૨',
    3: '૩',
    4: '૪',
    5: '૫',
    6: '૬',
    7: '૭',
    8: '૮',
    9: '૯',
    0: '૦' },

  numberMap = {
    '૧': '1',
    '૨': '2',
    '૩': '3',
    '૪': '4',
    '૫': '5',
    '૬': '6',
    '૭': '7',
    '૮': '8',
    '૯': '9',
    '૦': '0' };


  var gu = moment.defineLocale('gu', {
    months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(
    '_'),

    monthsShort:
    'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(
    '_'),

    weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
    weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm વાગ્યે',
      LTS: 'A h:mm:ss વાગ્યે',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
      LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે' },

    calendar: {
      sameDay: '[આજ] LT',
      nextDay: '[કાલે] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[ગઇકાલે] LT',
      lastWeek: '[પાછલા] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s મા',
      past: '%s પહેલા',
      s: 'અમુક પળો',
      ss: '%d સેકંડ',
      m: 'એક મિનિટ',
      mm: '%d મિનિટ',
      h: 'એક કલાક',
      hh: '%d કલાક',
      d: 'એક દિવસ',
      dd: '%d દિવસ',
      M: 'એક મહિનો',
      MM: '%d મહિનો',
      y: 'એક વર્ષ',
      yy: '%d વર્ષ' },

    preparse: function preparse(string) {
      return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
    meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'રાત') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'સવાર') {
        return hour;
      } else if (meridiem === 'બપોર') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'સાંજ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'રાત';
      } else if (hour < 10) {
        return 'સવાર';
      } else if (hour < 17) {
        return 'બપોર';
      } else if (hour < 20) {
        return 'સાંજ';
      } else {
        return 'રાત';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return gu;

});

/***/ }),
/* 81 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/he.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hebrew [he]
//! author : Tomer Cohen : https://github.com/tomer
//! author : Moshe Simantov : https://github.com/DevelopmentIL
//! author : Tal Ater : https://github.com/TalAter

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var he = moment.defineLocale('he', {
    months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(
    '_'),

    monthsShort:
    'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
    weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
    weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
    weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [ב]MMMM YYYY',
      LLL: 'D [ב]MMMM YYYY HH:mm',
      LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
      l: 'D/M/YYYY',
      ll: 'D MMM YYYY',
      lll: 'D MMM YYYY HH:mm',
      llll: 'ddd, D MMM YYYY HH:mm' },

    calendar: {
      sameDay: '[היום ב־]LT',
      nextDay: '[מחר ב־]LT',
      nextWeek: 'dddd [בשעה] LT',
      lastDay: '[אתמול ב־]LT',
      lastWeek: '[ביום] dddd [האחרון בשעה] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'בעוד %s',
      past: 'לפני %s',
      s: 'מספר שניות',
      ss: '%d שניות',
      m: 'דקה',
      mm: '%d דקות',
      h: 'שעה',
      hh: function hh(number) {
        if (number === 2) {
          return 'שעתיים';
        }
        return number + ' שעות';
      },
      d: 'יום',
      dd: function dd(number) {
        if (number === 2) {
          return 'יומיים';
        }
        return number + ' ימים';
      },
      M: 'חודש',
      MM: function MM(number) {
        if (number === 2) {
          return 'חודשיים';
        }
        return number + ' חודשים';
      },
      y: 'שנה',
      yy: function yy(number) {
        if (number === 2) {
          return 'שנתיים';
        } else if (number % 10 === 0 && number !== 10) {
          return number + ' שנה';
        }
        return number + ' שנים';
      } },

    meridiemParse:
    /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
    isPM: function isPM(input) {
      return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 5) {
        return 'לפנות בוקר';
      } else if (hour < 10) {
        return 'בבוקר';
      } else if (hour < 12) {
        return isLower ? 'לפנה"צ' : 'לפני הצהריים';
      } else if (hour < 18) {
        return isLower ? 'אחה"צ' : 'אחרי הצהריים';
      } else {
        return 'בערב';
      }
    } });


  return he;

});

/***/ }),
/* 82 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/hi.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hindi [hi]
//! author : Mayank Singhal : https://github.com/mayanksinghal

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '१',
    2: '२',
    3: '३',
    4: '४',
    5: '५',
    6: '६',
    7: '७',
    8: '८',
    9: '९',
    0: '०' },

  numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0' },

  monthsParse = [
  /^जन/i,
  /^फ़र|फर/i,
  /^मार्च/i,
  /^अप्रै/i,
  /^मई/i,
  /^जून/i,
  /^जुल/i,
  /^अग/i,
  /^सितं|सित/i,
  /^अक्टू/i,
  /^नव|नवं/i,
  /^दिसं|दिस/i],

  shortMonthsParse = [
  /^जन/i,
  /^फ़र/i,
  /^मार्च/i,
  /^अप्रै/i,
  /^मई/i,
  /^जून/i,
  /^जुल/i,
  /^अग/i,
  /^सित/i,
  /^अक्टू/i,
  /^नव/i,
  /^दिस/i];


  var hi = moment.defineLocale('hi', {
    months: {
      format: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(
      '_'),

      standalone:
      'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split(
      '_') },


    monthsShort:
    'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
    weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat: {
      LT: 'A h:mm बजे',
      LTS: 'A h:mm:ss बजे',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm बजे',
      LLLL: 'dddd, D MMMM YYYY, A h:mm बजे' },


    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: shortMonthsParse,

    monthsRegex:
    /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,

    monthsShortRegex:
    /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,

    monthsStrictRegex:
    /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,

    monthsShortStrictRegex:
    /^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,

    calendar: {
      sameDay: '[आज] LT',
      nextDay: '[कल] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[कल] LT',
      lastWeek: '[पिछले] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s में',
      past: '%s पहले',
      s: 'कुछ ही क्षण',
      ss: '%d सेकंड',
      m: 'एक मिनट',
      mm: '%d मिनट',
      h: 'एक घंटा',
      hh: '%d घंटे',
      d: 'एक दिन',
      dd: '%d दिन',
      M: 'एक महीने',
      MM: '%d महीने',
      y: 'एक वर्ष',
      yy: '%d वर्ष' },

    preparse: function preparse(string) {
      return string.replace(/[१२३४५६७८९०]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    // Hindi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
    meridiemParse: /रात|सुबह|दोपहर|शाम/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'रात') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'सुबह') {
        return hour;
      } else if (meridiem === 'दोपहर') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'शाम') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'रात';
      } else if (hour < 10) {
        return 'सुबह';
      } else if (hour < 17) {
        return 'दोपहर';
      } else if (hour < 20) {
        return 'शाम';
      } else {
        return 'रात';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return hi;

});

/***/ }),
/* 83 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/hr.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Croatian [hr]
//! author : Bojan Marković : https://github.com/bmarkovic

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
      case 'ss':
        if (number === 1) {
          result += 'sekunda';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'sekunde';
        } else {
          result += 'sekundi';
        }
        return result;
      case 'm':
        return withoutSuffix ? 'jedna minuta' : 'jedne minute';
      case 'mm':
        if (number === 1) {
          result += 'minuta';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'minute';
        } else {
          result += 'minuta';
        }
        return result;
      case 'h':
        return withoutSuffix ? 'jedan sat' : 'jednog sata';
      case 'hh':
        if (number === 1) {
          result += 'sat';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'sata';
        } else {
          result += 'sati';
        }
        return result;
      case 'dd':
        if (number === 1) {
          result += 'dan';
        } else {
          result += 'dana';
        }
        return result;
      case 'MM':
        if (number === 1) {
          result += 'mjesec';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'mjeseca';
        } else {
          result += 'mjeseci';
        }
        return result;
      case 'yy':
        if (number === 1) {
          result += 'godina';
        } else if (number === 2 || number === 3 || number === 4) {
          result += 'godine';
        } else {
          result += 'godina';
        }
        return result;}

  }

  var hr = moment.defineLocale('hr', {
    months: {
      format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(
      '_'),

      standalone:
      'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(
      '_') },


    monthsShort:
    'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
    '_'),

    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'Do MMMM YYYY',
      LLL: 'Do MMMM YYYY H:mm',
      LLLL: 'dddd, Do MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[danas u] LT',
      nextDay: '[sutra u] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[u] [nedjelju] [u] LT';
          case 3:
            return '[u] [srijedu] [u] LT';
          case 6:
            return '[u] [subotu] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[u] dddd [u] LT';}

      },
      lastDay: '[jučer u] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[prošlu] [nedjelju] [u] LT';
          case 3:
            return '[prošlu] [srijedu] [u] LT';
          case 6:
            return '[prošle] [subote] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[prošli] dddd [u] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'prije %s',
      s: 'par sekundi',
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: 'dan',
      dd: translate,
      M: 'mjesec',
      MM: translate,
      y: 'godinu',
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return hr;

});

/***/ }),
/* 84 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/hu.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hungarian [hu]
//! author : Adam Brunner : https://github.com/adambrunner
//! author : Peter Viszt  : https://github.com/passatgt

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var weekEndings =
  'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
  function translate(number, withoutSuffix, key, isFuture) {
    var num = number;
    switch (key) {
      case 's':
        return isFuture || withoutSuffix ?
        'néhány másodperc' :
        'néhány másodperce';
      case 'ss':
        return num + (isFuture || withoutSuffix) ?
        ' másodperc' :
        ' másodperce';
      case 'm':
        return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
      case 'mm':
        return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
      case 'h':
        return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
      case 'hh':
        return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
      case 'd':
        return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
      case 'dd':
        return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
      case 'M':
        return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
      case 'MM':
        return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
      case 'y':
        return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
      case 'yy':
        return num + (isFuture || withoutSuffix ? ' év' : ' éve');}

    return '';
  }
  function week(isFuture) {
    return (
      (isFuture ? '' : '[múlt] ') +
      '[' +
      weekEndings[this.day()] +
      '] LT[-kor]');

  }

  var hu = moment.defineLocale('hu', {
    months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(
    '_'),

    monthsShort:
    'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
    weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
    weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'YYYY.MM.DD.',
      LL: 'YYYY. MMMM D.',
      LLL: 'YYYY. MMMM D. H:mm',
      LLLL: 'YYYY. MMMM D., dddd H:mm' },

    meridiemParse: /de|du/i,
    isPM: function isPM(input) {
      return input.charAt(1).toLowerCase() === 'u';
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 12) {
        return isLower === true ? 'de' : 'DE';
      } else {
        return isLower === true ? 'du' : 'DU';
      }
    },
    calendar: {
      sameDay: '[ma] LT[-kor]',
      nextDay: '[holnap] LT[-kor]',
      nextWeek: function nextWeek() {
        return week.call(this, true);
      },
      lastDay: '[tegnap] LT[-kor]',
      lastWeek: function lastWeek() {
        return week.call(this, false);
      },
      sameElse: 'L' },

    relativeTime: {
      future: '%s múlva',
      past: '%s',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return hu;

});

/***/ }),
/* 85 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/hy-am.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Armenian [hy-am]
//! author : Armendarabyan : https://github.com/armendarabyan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var hyAm = moment.defineLocale('hy-am', {
    months: {
      format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(
      '_'),

      standalone:
      'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(
      '_') },


    monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
    weekdays:
    'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(
    '_'),

    weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY թ.',
      LLL: 'D MMMM YYYY թ., HH:mm',
      LLLL: 'dddd, D MMMM YYYY թ., HH:mm' },

    calendar: {
      sameDay: '[այսօր] LT',
      nextDay: '[վաղը] LT',
      lastDay: '[երեկ] LT',
      nextWeek: function nextWeek() {
        return 'dddd [օրը ժամը] LT';
      },
      lastWeek: function lastWeek() {
        return '[անցած] dddd [օրը ժամը] LT';
      },
      sameElse: 'L' },

    relativeTime: {
      future: '%s հետո',
      past: '%s առաջ',
      s: 'մի քանի վայրկյան',
      ss: '%d վայրկյան',
      m: 'րոպե',
      mm: '%d րոպե',
      h: 'ժամ',
      hh: '%d ժամ',
      d: 'օր',
      dd: '%d օր',
      M: 'ամիս',
      MM: '%d ամիս',
      y: 'տարի',
      yy: '%d տարի' },

    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
    isPM: function isPM(input) {
      return /^(ցերեկվա|երեկոյան)$/.test(input);
    },
    meridiem: function meridiem(hour) {
      if (hour < 4) {
        return 'գիշերվա';
      } else if (hour < 12) {
        return 'առավոտվա';
      } else if (hour < 17) {
        return 'ցերեկվա';
      } else {
        return 'երեկոյան';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'DDD':
        case 'w':
        case 'W':
        case 'DDDo':
          if (number === 1) {
            return number + '-ին';
          }
          return number + '-րդ';
        default:
          return number;}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return hyAm;

});

/***/ }),
/* 86 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/id.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Indonesian [id]
//! author : Mohammad Satrio Utomo : https://github.com/tyok
//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var id = moment.defineLocale('id', {
    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
    weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
    weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [pukul] HH.mm',
      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' },

    meridiemParse: /pagi|siang|sore|malam/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'pagi') {
        return hour;
      } else if (meridiem === 'siang') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'sore' || meridiem === 'malam') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'pagi';
      } else if (hours < 15) {
        return 'siang';
      } else if (hours < 19) {
        return 'sore';
      } else {
        return 'malam';
      }
    },
    calendar: {
      sameDay: '[Hari ini pukul] LT',
      nextDay: '[Besok pukul] LT',
      nextWeek: 'dddd [pukul] LT',
      lastDay: '[Kemarin pukul] LT',
      lastWeek: 'dddd [lalu pukul] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dalam %s',
      past: '%s yang lalu',
      s: 'beberapa detik',
      ss: '%d detik',
      m: 'semenit',
      mm: '%d menit',
      h: 'sejam',
      hh: '%d jam',
      d: 'sehari',
      dd: '%d hari',
      M: 'sebulan',
      MM: '%d bulan',
      y: 'setahun',
      yy: '%d tahun' },

    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return id;

});

/***/ }),
/* 87 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/is.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Icelandic [is]
//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function plural(n) {
    if (n % 100 === 11) {
      return true;
    } else if (n % 10 === 1) {
      return false;
    }
    return true;
  }
  function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
      case 's':
        return withoutSuffix || isFuture ?
        'nokkrar sekúndur' :
        'nokkrum sekúndum';
      case 'ss':
        if (plural(number)) {
          return (
            result + (
            withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum'));

        }
        return result + 'sekúnda';
      case 'm':
        return withoutSuffix ? 'mínúta' : 'mínútu';
      case 'mm':
        if (plural(number)) {
          return (
            result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum'));

        } else if (withoutSuffix) {
          return result + 'mínúta';
        }
        return result + 'mínútu';
      case 'hh':
        if (plural(number)) {
          return (
            result + (
            withoutSuffix || isFuture ?
            'klukkustundir' :
            'klukkustundum'));

        }
        return result + 'klukkustund';
      case 'd':
        if (withoutSuffix) {
          return 'dagur';
        }
        return isFuture ? 'dag' : 'degi';
      case 'dd':
        if (plural(number)) {
          if (withoutSuffix) {
            return result + 'dagar';
          }
          return result + (isFuture ? 'daga' : 'dögum');
        } else if (withoutSuffix) {
          return result + 'dagur';
        }
        return result + (isFuture ? 'dag' : 'degi');
      case 'M':
        if (withoutSuffix) {
          return 'mánuður';
        }
        return isFuture ? 'mánuð' : 'mánuði';
      case 'MM':
        if (plural(number)) {
          if (withoutSuffix) {
            return result + 'mánuðir';
          }
          return result + (isFuture ? 'mánuði' : 'mánuðum');
        } else if (withoutSuffix) {
          return result + 'mánuður';
        }
        return result + (isFuture ? 'mánuð' : 'mánuði');
      case 'y':
        return withoutSuffix || isFuture ? 'ár' : 'ári';
      case 'yy':
        if (plural(number)) {
          return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
        }
        return result + (withoutSuffix || isFuture ? 'ár' : 'ári');}

  }

  var is = moment.defineLocale('is', {
    months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
    weekdays:
    'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(
    '_'),

    weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
    weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY [kl.] H:mm',
      LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm' },

    calendar: {
      sameDay: '[í dag kl.] LT',
      nextDay: '[á morgun kl.] LT',
      nextWeek: 'dddd [kl.] LT',
      lastDay: '[í gær kl.] LT',
      lastWeek: '[síðasta] dddd [kl.] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'eftir %s',
      past: 'fyrir %s síðan',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: 'klukkustund',
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return is;

});

/***/ }),
/* 88 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/it.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian [it]
//! author : Lorenzo : https://github.com/aliem
//! author: Mattia Larentis: https://github.com/nostalgiaz
//! author: Marco : https://github.com/Manfre98

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var it = moment.defineLocale('it', {
    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
    '_'),

    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
    '_'),

    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: function sameDay() {
        return (
          '[Oggi a' + (
          this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
          ']LT');

      },
      nextDay: function nextDay() {
        return (
          '[Domani a' + (
          this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
          ']LT');

      },
      nextWeek: function nextWeek() {
        return (
          'dddd [a' + (
          this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
          ']LT');

      },
      lastDay: function lastDay() {
        return (
          '[Ieri a' + (
          this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
          ']LT');

      },
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return (
              '[La scorsa] dddd [a' + (
              this.hours() > 1 ?
              'lle ' :
              this.hours() === 0 ?
              ' ' :
              "ll'") +
              ']LT');

          default:
            return (
              '[Lo scorso] dddd [a' + (
              this.hours() > 1 ?
              'lle ' :
              this.hours() === 0 ?
              ' ' :
              "ll'") +
              ']LT');}


      },
      sameElse: 'L' },

    relativeTime: {
      future: 'tra %s',
      past: '%s fa',
      s: 'alcuni secondi',
      ss: '%d secondi',
      m: 'un minuto',
      mm: '%d minuti',
      h: "un'ora",
      hh: '%d ore',
      d: 'un giorno',
      dd: '%d giorni',
      w: 'una settimana',
      ww: '%d settimane',
      M: 'un mese',
      MM: '%d mesi',
      y: 'un anno',
      yy: '%d anni' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return it;

});

/***/ }),
/* 89 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/it-ch.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian (Switzerland) [it-ch]
//! author : xfh : https://github.com/xfh

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var itCh = moment.defineLocale('it-ch', {
    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
    '_'),

    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
    '_'),

    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Oggi alle] LT',
      nextDay: '[Domani alle] LT',
      nextWeek: 'dddd [alle] LT',
      lastDay: '[Ieri alle] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[la scorsa] dddd [alle] LT';
          default:
            return '[lo scorso] dddd [alle] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: function future(s) {
        return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;
      },
      past: '%s fa',
      s: 'alcuni secondi',
      ss: '%d secondi',
      m: 'un minuto',
      mm: '%d minuti',
      h: "un'ora",
      hh: '%d ore',
      d: 'un giorno',
      dd: '%d giorni',
      M: 'un mese',
      MM: '%d mesi',
      y: 'un anno',
      yy: '%d anni' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return itCh;

});

/***/ }),
/* 90 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ja.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Japanese [ja]
//! author : LI Long : https://github.com/baryon

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ja = moment.defineLocale('ja', {
    eras: [
    {
      since: '2019-05-01',
      offset: 1,
      name: '令和',
      narrow: '㋿',
      abbr: 'R' },

    {
      since: '1989-01-08',
      until: '2019-04-30',
      offset: 1,
      name: '平成',
      narrow: '㍻',
      abbr: 'H' },

    {
      since: '1926-12-25',
      until: '1989-01-07',
      offset: 1,
      name: '昭和',
      narrow: '㍼',
      abbr: 'S' },

    {
      since: '1912-07-30',
      until: '1926-12-24',
      offset: 1,
      name: '大正',
      narrow: '㍽',
      abbr: 'T' },

    {
      since: '1873-01-01',
      until: '1912-07-29',
      offset: 6,
      name: '明治',
      narrow: '㍾',
      abbr: 'M' },

    {
      since: '0001-01-01',
      until: '1873-12-31',
      offset: 1,
      name: '西暦',
      narrow: 'AD',
      abbr: 'AD' },

    {
      since: '0000-12-31',
      until: -Infinity,
      offset: 1,
      name: '紀元前',
      narrow: 'BC',
      abbr: 'BC' }],


    eraYearOrdinalRegex: /(元|\d+)年/,
    eraYearOrdinalParse: function eraYearOrdinalParse(input, match) {
      return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);
    },
    months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
    weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
    weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日 HH:mm',
      LLLL: 'YYYY年M月D日 dddd HH:mm',
      l: 'YYYY/MM/DD',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日(ddd) HH:mm' },

    meridiemParse: /午前|午後/i,
    isPM: function isPM(input) {
      return input === '午後';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return '午前';
      } else {
        return '午後';
      }
    },
    calendar: {
      sameDay: '[今日] LT',
      nextDay: '[明日] LT',
      nextWeek: function nextWeek(now) {
        if (now.week() !== this.week()) {
          return '[来週]dddd LT';
        } else {
          return 'dddd LT';
        }
      },
      lastDay: '[昨日] LT',
      lastWeek: function lastWeek(now) {
        if (this.week() !== now.week()) {
          return '[先週]dddd LT';
        } else {
          return 'dddd LT';
        }
      },
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}日/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'y':
          return number === 1 ? '元年' : number + '年';
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s後',
      past: '%s前',
      s: '数秒',
      ss: '%d秒',
      m: '1分',
      mm: '%d分',
      h: '1時間',
      hh: '%d時間',
      d: '1日',
      dd: '%d日',
      M: '1ヶ月',
      MM: '%dヶ月',
      y: '1年',
      yy: '%d年' } });



  return ja;

});

/***/ }),
/* 91 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/jv.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Javanese [jv]
//! author : Rony Lantip : https://github.com/lantip
//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var jv = moment.defineLocale('jv', {
    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
    weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
    weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [pukul] HH.mm',
      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' },

    meridiemParse: /enjing|siyang|sonten|ndalu/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'enjing') {
        return hour;
      } else if (meridiem === 'siyang') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'enjing';
      } else if (hours < 15) {
        return 'siyang';
      } else if (hours < 19) {
        return 'sonten';
      } else {
        return 'ndalu';
      }
    },
    calendar: {
      sameDay: '[Dinten puniko pukul] LT',
      nextDay: '[Mbenjang pukul] LT',
      nextWeek: 'dddd [pukul] LT',
      lastDay: '[Kala wingi pukul] LT',
      lastWeek: 'dddd [kepengker pukul] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'wonten ing %s',
      past: '%s ingkang kepengker',
      s: 'sawetawis detik',
      ss: '%d detik',
      m: 'setunggal menit',
      mm: '%d menit',
      h: 'setunggal jam',
      hh: '%d jam',
      d: 'sedinten',
      dd: '%d dinten',
      M: 'sewulan',
      MM: '%d wulan',
      y: 'setaun',
      yy: '%d taun' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return jv;

});

/***/ }),
/* 92 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ka.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Georgian [ka]
//! author : Irakli Janiashvili : https://github.com/IrakliJani

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ka = moment.defineLocale('ka', {
    months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(
    '_'),

    monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
    weekdays: {
      standalone:
      'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(
      '_'),

      format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(
      '_'),

      isFormat: /(წინა|შემდეგ)/ },

    weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
    weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[დღეს] LT[-ზე]',
      nextDay: '[ხვალ] LT[-ზე]',
      lastDay: '[გუშინ] LT[-ზე]',
      nextWeek: '[შემდეგ] dddd LT[-ზე]',
      lastWeek: '[წინა] dddd LT-ზე',
      sameElse: 'L' },

    relativeTime: {
      future: function future(s) {
        return s.replace(
        /(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/,
        function ($0, $1, $2) {
          return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';
        });

      },
      past: function past(s) {
        if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
          return s.replace(/(ი|ე)$/, 'ის წინ');
        }
        if (/წელი/.test(s)) {
          return s.replace(/წელი$/, 'წლის წინ');
        }
        return s;
      },
      s: 'რამდენიმე წამი',
      ss: '%d წამი',
      m: 'წუთი',
      mm: '%d წუთი',
      h: 'საათი',
      hh: '%d საათი',
      d: 'დღე',
      dd: '%d დღე',
      M: 'თვე',
      MM: '%d თვე',
      y: 'წელი',
      yy: '%d წელი' },

    dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
    ordinal: function ordinal(number) {
      if (number === 0) {
        return number;
      }
      if (number === 1) {
        return number + '-ლი';
      }
      if (
      number < 20 ||
      number <= 100 && number % 20 === 0 ||
      number % 100 === 0)
      {
        return 'მე-' + number;
      }
      return number + '-ე';
    },
    week: {
      dow: 1,
      doy: 7 } });



  return ka;

});

/***/ }),
/* 93 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/kk.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kazakh [kk]
//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    0: '-ші',
    1: '-ші',
    2: '-ші',
    3: '-ші',
    4: '-ші',
    5: '-ші',
    6: '-шы',
    7: '-ші',
    8: '-ші',
    9: '-шы',
    10: '-шы',
    20: '-шы',
    30: '-шы',
    40: '-шы',
    50: '-ші',
    60: '-шы',
    70: '-ші',
    80: '-ші',
    90: '-шы',
    100: '-ші' };


  var kk = moment.defineLocale('kk', {
    months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(
    '_'),

    monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
    weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(
    '_'),

    weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
    weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Бүгін сағат] LT',
      nextDay: '[Ертең сағат] LT',
      nextWeek: 'dddd [сағат] LT',
      lastDay: '[Кеше сағат] LT',
      lastWeek: '[Өткен аптаның] dddd [сағат] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ішінде',
      past: '%s бұрын',
      s: 'бірнеше секунд',
      ss: '%d секунд',
      m: 'бір минут',
      mm: '%d минут',
      h: 'бір сағат',
      hh: '%d сағат',
      d: 'бір күн',
      dd: '%d күн',
      M: 'бір ай',
      MM: '%d ай',
      y: 'бір жыл',
      yy: '%d жыл' },

    dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
    ordinal: function ordinal(number) {
      var a = number % 10,
      b = number >= 100 ? 100 : null;
      return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return kk;

});

/***/ }),
/* 94 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/km.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Cambodian [km]
//! author : Kruy Vanna : https://github.com/kruyvanna

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '១',
    2: '២',
    3: '៣',
    4: '៤',
    5: '៥',
    6: '៦',
    7: '៧',
    8: '៨',
    9: '៩',
    0: '០' },

  numberMap = {
    '១': '1',
    '២': '2',
    '៣': '3',
    '៤': '4',
    '៥': '5',
    '៦': '6',
    '៧': '7',
    '៨': '8',
    '៩': '9',
    '០': '0' };


  var km = moment.defineLocale('km', {
    months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
    '_'),

    monthsShort:
    'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
    '_'),

    weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
    weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    meridiemParse: /ព្រឹក|ល្ងាច/,
    isPM: function isPM(input) {
      return input === 'ល្ងាច';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ព្រឹក';
      } else {
        return 'ល្ងាច';
      }
    },
    calendar: {
      sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
      nextDay: '[ស្អែក ម៉ោង] LT',
      nextWeek: 'dddd [ម៉ោង] LT',
      lastDay: '[ម្សិលមិញ ម៉ោង] LT',
      lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%sទៀត',
      past: '%sមុន',
      s: 'ប៉ុន្មានវិនាទី',
      ss: '%d វិនាទី',
      m: 'មួយនាទី',
      mm: '%d នាទី',
      h: 'មួយម៉ោង',
      hh: '%d ម៉ោង',
      d: 'មួយថ្ងៃ',
      dd: '%d ថ្ងៃ',
      M: 'មួយខែ',
      MM: '%d ខែ',
      y: 'មួយឆ្នាំ',
      yy: '%d ឆ្នាំ' },

    dayOfMonthOrdinalParse: /ទី\d{1,2}/,
    ordinal: 'ទី%d',
    preparse: function preparse(string) {
      return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return km;

});

/***/ }),
/* 95 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/kn.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kannada [kn]
//! author : Rajeev Naik : https://github.com/rajeevnaikte

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '೧',
    2: '೨',
    3: '೩',
    4: '೪',
    5: '೫',
    6: '೬',
    7: '೭',
    8: '೮',
    9: '೯',
    0: '೦' },

  numberMap = {
    '೧': '1',
    '೨': '2',
    '೩': '3',
    '೪': '4',
    '೫': '5',
    '೬': '6',
    '೭': '7',
    '೮': '8',
    '೯': '9',
    '೦': '0' };


  var kn = moment.defineLocale('kn', {
    months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(
    '_'),

    monthsShort:
    'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(
    '_'),

    weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
    weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm',
      LTS: 'A h:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm',
      LLLL: 'dddd, D MMMM YYYY, A h:mm' },

    calendar: {
      sameDay: '[ಇಂದು] LT',
      nextDay: '[ನಾಳೆ] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[ನಿನ್ನೆ] LT',
      lastWeek: '[ಕೊನೆಯ] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ನಂತರ',
      past: '%s ಹಿಂದೆ',
      s: 'ಕೆಲವು ಕ್ಷಣಗಳು',
      ss: '%d ಸೆಕೆಂಡುಗಳು',
      m: 'ಒಂದು ನಿಮಿಷ',
      mm: '%d ನಿಮಿಷ',
      h: 'ಒಂದು ಗಂಟೆ',
      hh: '%d ಗಂಟೆ',
      d: 'ಒಂದು ದಿನ',
      dd: '%d ದಿನ',
      M: 'ಒಂದು ತಿಂಗಳು',
      MM: '%d ತಿಂಗಳು',
      y: 'ಒಂದು ವರ್ಷ',
      yy: '%d ವರ್ಷ' },

    preparse: function preparse(string) {
      return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'ರಾತ್ರಿ') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
        return hour;
      } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'ಸಂಜೆ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ರಾತ್ರಿ';
      } else if (hour < 10) {
        return 'ಬೆಳಿಗ್ಗೆ';
      } else if (hour < 17) {
        return 'ಮಧ್ಯಾಹ್ನ';
      } else if (hour < 20) {
        return 'ಸಂಜೆ';
      } else {
        return 'ರಾತ್ರಿ';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
    ordinal: function ordinal(number) {
      return number + 'ನೇ';
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return kn;

});

/***/ }),
/* 96 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ko.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Korean [ko]
//! author : Kyungwook, Park : https://github.com/kyungw00k
//! author : Jeeeyul Lee <jeeeyul@gmail.com>

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ko = moment.defineLocale('ko', {
    months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
    monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(
    '_'),

    weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
    weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
    weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
    longDateFormat: {
      LT: 'A h:mm',
      LTS: 'A h:mm:ss',
      L: 'YYYY.MM.DD.',
      LL: 'YYYY년 MMMM D일',
      LLL: 'YYYY년 MMMM D일 A h:mm',
      LLLL: 'YYYY년 MMMM D일 dddd A h:mm',
      l: 'YYYY.MM.DD.',
      ll: 'YYYY년 MMMM D일',
      lll: 'YYYY년 MMMM D일 A h:mm',
      llll: 'YYYY년 MMMM D일 dddd A h:mm' },

    calendar: {
      sameDay: '오늘 LT',
      nextDay: '내일 LT',
      nextWeek: 'dddd LT',
      lastDay: '어제 LT',
      lastWeek: '지난주 dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s 후',
      past: '%s 전',
      s: '몇 초',
      ss: '%d초',
      m: '1분',
      mm: '%d분',
      h: '한 시간',
      hh: '%d시간',
      d: '하루',
      dd: '%d일',
      M: '한 달',
      MM: '%d달',
      y: '일 년',
      yy: '%d년' },

    dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '일';
        case 'M':
          return number + '월';
        case 'w':
        case 'W':
          return number + '주';
        default:
          return number;}

    },
    meridiemParse: /오전|오후/,
    isPM: function isPM(token) {
      return token === '오후';
    },
    meridiem: function meridiem(hour, minute, isUpper) {
      return hour < 12 ? '오전' : '오후';
    } });


  return ko;

});

/***/ }),
/* 97 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ku.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kurdish [ku]
//! author : Shahram Mebashar : https://github.com/ShahramMebashar

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '١',
    2: '٢',
    3: '٣',
    4: '٤',
    5: '٥',
    6: '٦',
    7: '٧',
    8: '٨',
    9: '٩',
    0: '٠' },

  numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0' },

  months = [
  'کانونی دووەم',
  'شوبات',
  'ئازار',
  'نیسان',
  'ئایار',
  'حوزەیران',
  'تەمموز',
  'ئاب',
  'ئەیلوول',
  'تشرینی یەكەم',
  'تشرینی دووەم',
  'كانونی یەکەم'];


  var ku = moment.defineLocale('ku', {
    months: months,
    monthsShort: months,
    weekdays:
    'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(
    '_'),

    weekdaysShort:
    'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),
    weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    meridiemParse: /ئێواره‌|به‌یانی/,
    isPM: function isPM(input) {
      return /ئێواره‌/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'به‌یانی';
      } else {
        return 'ئێواره‌';
      }
    },
    calendar: {
      sameDay: '[ئه‌مرۆ كاتژمێر] LT',
      nextDay: '[به‌یانی كاتژمێر] LT',
      nextWeek: 'dddd [كاتژمێر] LT',
      lastDay: '[دوێنێ كاتژمێر] LT',
      lastWeek: 'dddd [كاتژمێر] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'له‌ %s',
      past: '%s',
      s: 'چه‌ند چركه‌یه‌ك',
      ss: 'چركه‌ %d',
      m: 'یه‌ك خوله‌ك',
      mm: '%d خوله‌ك',
      h: 'یه‌ك كاتژمێر',
      hh: '%d كاتژمێر',
      d: 'یه‌ك ڕۆژ',
      dd: '%d ڕۆژ',
      M: 'یه‌ك مانگ',
      MM: '%d مانگ',
      y: 'یه‌ك ساڵ',
      yy: '%d ساڵ' },

    preparse: function preparse(string) {
      return string.
      replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
        return numberMap[match];
      }).
      replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.
      replace(/\d/g, function (match) {
        return symbolMap[match];
      }).
      replace(/,/g, '،');
    },
    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return ku;

});

/***/ }),
/* 98 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ky.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kyrgyz [ky]
//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    0: '-чү',
    1: '-чи',
    2: '-чи',
    3: '-чү',
    4: '-чү',
    5: '-чи',
    6: '-чы',
    7: '-чи',
    8: '-чи',
    9: '-чу',
    10: '-чу',
    20: '-чы',
    30: '-чу',
    40: '-чы',
    50: '-чү',
    60: '-чы',
    70: '-чи',
    80: '-чи',
    90: '-чу',
    100: '-чү' };


  var ky = moment.defineLocale('ky', {
    months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
    '_'),

    monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split(
    '_'),

    weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(
    '_'),

    weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
    weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Бүгүн саат] LT',
      nextDay: '[Эртең саат] LT',
      nextWeek: 'dddd [саат] LT',
      lastDay: '[Кечээ саат] LT',
      lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ичинде',
      past: '%s мурун',
      s: 'бирнече секунд',
      ss: '%d секунд',
      m: 'бир мүнөт',
      mm: '%d мүнөт',
      h: 'бир саат',
      hh: '%d саат',
      d: 'бир күн',
      dd: '%d күн',
      M: 'бир ай',
      MM: '%d ай',
      y: 'бир жыл',
      yy: '%d жыл' },

    dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
    ordinal: function ordinal(number) {
      var a = number % 10,
      b = number >= 100 ? 100 : null;
      return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return ky;

});

/***/ }),
/* 99 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/lb.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Luxembourgish [lb]
//! author : mweimerskirch : https://github.com/mweimerskirch
//! author : David Raison : https://github.com/kwisatz

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      m: ['eng Minutt', 'enger Minutt'],
      h: ['eng Stonn', 'enger Stonn'],
      d: ['een Dag', 'engem Dag'],
      M: ['ee Mount', 'engem Mount'],
      y: ['ee Joer', 'engem Joer'] };

    return withoutSuffix ? format[key][0] : format[key][1];
  }
  function processFutureTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
      return 'a ' + string;
    }
    return 'an ' + string;
  }
  function processPastTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
      return 'viru ' + string;
    }
    return 'virun ' + string;
  }
  /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
  function eifelerRegelAppliesToNumber(number) {
    number = parseInt(number, 10);
    if (isNaN(number)) {
      return false;
    }
    if (number < 0) {
      // Negative Number --> always true
      return true;
    } else if (number < 10) {
      // Only 1 digit
      if (4 <= number && number <= 7) {
        return true;
      }
      return false;
    } else if (number < 100) {
      // 2 digits
      var lastDigit = number % 10,
      firstDigit = number / 10;
      if (lastDigit === 0) {
        return eifelerRegelAppliesToNumber(firstDigit);
      }
      return eifelerRegelAppliesToNumber(lastDigit);
    } else if (number < 10000) {
      // 3 or 4 digits --> recursively check first digit
      while (number >= 10) {
        number = number / 10;
      }
      return eifelerRegelAppliesToNumber(number);
    } else {
      // Anything larger than 4 digits: recursively check first n-3 digits
      number = number / 1000;
      return eifelerRegelAppliesToNumber(number);
    }
  }

  var lb = moment.defineLocale('lb', {
    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(
    '_'),

    monthsShort:
    'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
    '_'),

    monthsParseExact: true,
    weekdays:
    'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(
    '_'),

    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm [Auer]',
      LTS: 'H:mm:ss [Auer]',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm [Auer]',
      LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]' },

    calendar: {
      sameDay: '[Haut um] LT',
      sameElse: 'L',
      nextDay: '[Muer um] LT',
      nextWeek: 'dddd [um] LT',
      lastDay: '[Gëschter um] LT',
      lastWeek: function lastWeek() {
        // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
        switch (this.day()) {
          case 2:
          case 4:
            return '[Leschten] dddd [um] LT';
          default:
            return '[Leschte] dddd [um] LT';}

      } },

    relativeTime: {
      future: processFutureTime,
      past: processPastTime,
      s: 'e puer Sekonnen',
      ss: '%d Sekonnen',
      m: processRelativeTime,
      mm: '%d Minutten',
      h: processRelativeTime,
      hh: '%d Stonnen',
      d: processRelativeTime,
      dd: '%d Deeg',
      M: processRelativeTime,
      MM: '%d Méint',
      y: processRelativeTime,
      yy: '%d Joer' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return lb;

});

/***/ }),
/* 100 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/lo.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lao [lo]
//! author : Ryan Hart : https://github.com/ryanhart2

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var lo = moment.defineLocale('lo', {
    months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
    '_'),

    monthsShort:
    'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
    '_'),

    weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'ວັນdddd D MMMM YYYY HH:mm' },

    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
    isPM: function isPM(input) {
      return input === 'ຕອນແລງ';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ຕອນເຊົ້າ';
      } else {
        return 'ຕອນແລງ';
      }
    },
    calendar: {
      sameDay: '[ມື້ນີ້ເວລາ] LT',
      nextDay: '[ມື້ອື່ນເວລາ] LT',
      nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
      lastDay: '[ມື້ວານນີ້ເວລາ] LT',
      lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ອີກ %s',
      past: '%sຜ່ານມາ',
      s: 'ບໍ່ເທົ່າໃດວິນາທີ',
      ss: '%d ວິນາທີ',
      m: '1 ນາທີ',
      mm: '%d ນາທີ',
      h: '1 ຊົ່ວໂມງ',
      hh: '%d ຊົ່ວໂມງ',
      d: '1 ມື້',
      dd: '%d ມື້',
      M: '1 ເດືອນ',
      MM: '%d ເດືອນ',
      y: '1 ປີ',
      yy: '%d ປີ' },

    dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
    ordinal: function ordinal(number) {
      return 'ທີ່' + number;
    } });


  return lo;

});

/***/ }),
/* 101 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/lt.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lithuanian [lt]
//! author : Mindaugas Mozūras : https://github.com/mmozuras

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var units = {
    ss: 'sekundė_sekundžių_sekundes',
    m: 'minutė_minutės_minutę',
    mm: 'minutės_minučių_minutes',
    h: 'valanda_valandos_valandą',
    hh: 'valandos_valandų_valandas',
    d: 'diena_dienos_dieną',
    dd: 'dienos_dienų_dienas',
    M: 'mėnuo_mėnesio_mėnesį',
    MM: 'mėnesiai_mėnesių_mėnesius',
    y: 'metai_metų_metus',
    yy: 'metai_metų_metus' };

  function translateSeconds(number, withoutSuffix, key, isFuture) {
    if (withoutSuffix) {
      return 'kelios sekundės';
    } else {
      return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
    }
  }
  function translateSingular(number, withoutSuffix, key, isFuture) {
    return withoutSuffix ?
    forms(key)[0] :
    isFuture ?
    forms(key)[1] :
    forms(key)[2];
  }
  function special(number) {
    return number % 10 === 0 || number > 10 && number < 20;
  }
  function forms(key) {
    return units[key].split('_');
  }
  function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    if (number === 1) {
      return (
        result + translateSingular(number, withoutSuffix, key[0], isFuture));

    } else if (withoutSuffix) {
      return result + (special(number) ? forms(key)[1] : forms(key)[0]);
    } else {
      if (isFuture) {
        return result + forms(key)[1];
      } else {
        return result + (special(number) ? forms(key)[1] : forms(key)[2]);
      }
    }
  }
  var lt = moment.defineLocale('lt', {
    months: {
      format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(
      '_'),

      standalone:
      'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(
      '_'),

      isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/ },

    monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
    weekdays: {
      format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(
      '_'),

      standalone:
      'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(
      '_'),

      isFormat: /dddd HH:mm/ },

    weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
    weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'YYYY [m.] MMMM D [d.]',
      LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
      LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
      l: 'YYYY-MM-DD',
      ll: 'YYYY [m.] MMMM D [d.]',
      lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
      llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]' },

    calendar: {
      sameDay: '[Šiandien] LT',
      nextDay: '[Rytoj] LT',
      nextWeek: 'dddd LT',
      lastDay: '[Vakar] LT',
      lastWeek: '[Praėjusį] dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'po %s',
      past: 'prieš %s',
      s: translateSeconds,
      ss: translate,
      m: translateSingular,
      mm: translate,
      h: translateSingular,
      hh: translate,
      d: translateSingular,
      dd: translate,
      M: translateSingular,
      MM: translate,
      y: translateSingular,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}-oji/,
    ordinal: function ordinal(number) {
      return number + '-oji';
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return lt;

});

/***/ }),
/* 102 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/lv.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Latvian [lv]
//! author : Kristaps Karlsons : https://github.com/skakri
//! author : Jānis Elmeris : https://github.com/JanisE

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var units = {
    ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
    m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    h: 'stundas_stundām_stunda_stundas'.split('_'),
    hh: 'stundas_stundām_stunda_stundas'.split('_'),
    d: 'dienas_dienām_diena_dienas'.split('_'),
    dd: 'dienas_dienām_diena_dienas'.split('_'),
    M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    y: 'gada_gadiem_gads_gadi'.split('_'),
    yy: 'gada_gadiem_gads_gadi'.split('_') };

  /**
                                               * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
                                               */
  function format(forms, number, withoutSuffix) {
    if (withoutSuffix) {
      // E.g. "21 minūte", "3 minūtes".
      return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
    } else {
      // E.g. "21 minūtes" as in "pēc 21 minūtes".
      // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
      return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
    }
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
    return number + ' ' + format(units[key], number, withoutSuffix);
  }
  function relativeTimeWithSingular(number, withoutSuffix, key) {
    return format(units[key], number, withoutSuffix);
  }
  function relativeSeconds(number, withoutSuffix) {
    return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
  }

  var lv = moment.defineLocale('lv', {
    months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
    weekdays:
    'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(
    '_'),

    weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY.',
      LL: 'YYYY. [gada] D. MMMM',
      LLL: 'YYYY. [gada] D. MMMM, HH:mm',
      LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm' },

    calendar: {
      sameDay: '[Šodien pulksten] LT',
      nextDay: '[Rīt pulksten] LT',
      nextWeek: 'dddd [pulksten] LT',
      lastDay: '[Vakar pulksten] LT',
      lastWeek: '[Pagājušā] dddd [pulksten] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'pēc %s',
      past: 'pirms %s',
      s: relativeSeconds,
      ss: relativeTimeWithPlural,
      m: relativeTimeWithSingular,
      mm: relativeTimeWithPlural,
      h: relativeTimeWithSingular,
      hh: relativeTimeWithPlural,
      d: relativeTimeWithSingular,
      dd: relativeTimeWithPlural,
      M: relativeTimeWithSingular,
      MM: relativeTimeWithPlural,
      y: relativeTimeWithSingular,
      yy: relativeTimeWithPlural },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return lv;

});

/***/ }),
/* 103 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/me.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Montenegrin [me]
//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var translator = {
    words: {
      //Different grammatical cases
      ss: ['sekund', 'sekunda', 'sekundi'],
      m: ['jedan minut', 'jednog minuta'],
      mm: ['minut', 'minuta', 'minuta'],
      h: ['jedan sat', 'jednog sata'],
      hh: ['sat', 'sata', 'sati'],
      dd: ['dan', 'dana', 'dana'],
      MM: ['mjesec', 'mjeseca', 'mjeseci'],
      yy: ['godina', 'godine', 'godina'] },

    correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
      return number === 1 ?
      wordKey[0] :
      number >= 2 && number <= 4 ?
      wordKey[1] :
      wordKey[2];
    },
    translate: function translate(number, withoutSuffix, key) {
      var wordKey = translator.words[key];
      if (key.length === 1) {
        return withoutSuffix ? wordKey[0] : wordKey[1];
      } else {
        return (
          number +
          ' ' +
          translator.correctGrammaticalCase(number, wordKey));

      }
    } };


  var me = moment.defineLocale('me', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
    '_'),

    monthsShort:
    'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
    '_'),

    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd, D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[danas u] LT',
      nextDay: '[sjutra u] LT',

      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[u] [nedjelju] [u] LT';
          case 3:
            return '[u] [srijedu] [u] LT';
          case 6:
            return '[u] [subotu] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[u] dddd [u] LT';}

      },
      lastDay: '[juče u] LT',
      lastWeek: function lastWeek() {
        var lastWeekDays = [
        '[prošle] [nedjelje] [u] LT',
        '[prošlog] [ponedjeljka] [u] LT',
        '[prošlog] [utorka] [u] LT',
        '[prošle] [srijede] [u] LT',
        '[prošlog] [četvrtka] [u] LT',
        '[prošlog] [petka] [u] LT',
        '[prošle] [subote] [u] LT'];

        return lastWeekDays[this.day()];
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'prije %s',
      s: 'nekoliko sekundi',
      ss: translator.translate,
      m: translator.translate,
      mm: translator.translate,
      h: translator.translate,
      hh: translator.translate,
      d: 'dan',
      dd: translator.translate,
      M: 'mjesec',
      MM: translator.translate,
      y: 'godinu',
      yy: translator.translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return me;

});

/***/ }),
/* 104 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/mi.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maori [mi]
//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var mi = moment.defineLocale('mi', {
    months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(
    '_'),

    monthsShort:
    'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(
    '_'),

    monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
    weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
    weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [i] HH:mm',
      LLLL: 'dddd, D MMMM YYYY [i] HH:mm' },

    calendar: {
      sameDay: '[i teie mahana, i] LT',
      nextDay: '[apopo i] LT',
      nextWeek: 'dddd [i] LT',
      lastDay: '[inanahi i] LT',
      lastWeek: 'dddd [whakamutunga i] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'i roto i %s',
      past: '%s i mua',
      s: 'te hēkona ruarua',
      ss: '%d hēkona',
      m: 'he meneti',
      mm: '%d meneti',
      h: 'te haora',
      hh: '%d haora',
      d: 'he ra',
      dd: '%d ra',
      M: 'he marama',
      MM: '%d marama',
      y: 'he tau',
      yy: '%d tau' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return mi;

});

/***/ }),
/* 105 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/mk.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Macedonian [mk]
//! author : Borislav Mickov : https://github.com/B0k0
//! author : Sashko Todorov : https://github.com/bkyceh

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var mk = moment.defineLocale('mk', {
    months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(
    '_'),

    monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
    weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(
    '_'),

    weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
    weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'D.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY H:mm',
      LLLL: 'dddd, D MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[Денес во] LT',
      nextDay: '[Утре во] LT',
      nextWeek: '[Во] dddd [во] LT',
      lastDay: '[Вчера во] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
          case 6:
            return '[Изминатата] dddd [во] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[Изминатиот] dddd [во] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'за %s',
      past: 'пред %s',
      s: 'неколку секунди',
      ss: '%d секунди',
      m: 'една минута',
      mm: '%d минути',
      h: 'еден час',
      hh: '%d часа',
      d: 'еден ден',
      dd: '%d дена',
      M: 'еден месец',
      MM: '%d месеци',
      y: 'една година',
      yy: '%d години' },

    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal: function ordinal(number) {
      var lastDigit = number % 10,
      last2Digits = number % 100;
      if (number === 0) {
        return number + '-ев';
      } else if (last2Digits === 0) {
        return number + '-ен';
      } else if (last2Digits > 10 && last2Digits < 20) {
        return number + '-ти';
      } else if (lastDigit === 1) {
        return number + '-ви';
      } else if (lastDigit === 2) {
        return number + '-ри';
      } else if (lastDigit === 7 || lastDigit === 8) {
        return number + '-ми';
      } else {
        return number + '-ти';
      }
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return mk;

});

/***/ }),
/* 106 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ml.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malayalam [ml]
//! author : Floyd Pink : https://github.com/floydpink

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ml = moment.defineLocale('ml', {
    months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(
    '_'),

    monthsShort:
    'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(
    '_'),

    monthsParseExact: true,
    weekdays:
    'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(
    '_'),

    weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
    weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm -നു',
      LTS: 'A h:mm:ss -നു',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm -നു',
      LLLL: 'dddd, D MMMM YYYY, A h:mm -നു' },

    calendar: {
      sameDay: '[ഇന്ന്] LT',
      nextDay: '[നാളെ] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[ഇന്നലെ] LT',
      lastWeek: '[കഴിഞ്ഞ] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s കഴിഞ്ഞ്',
      past: '%s മുൻപ്',
      s: 'അൽപ നിമിഷങ്ങൾ',
      ss: '%d സെക്കൻഡ്',
      m: 'ഒരു മിനിറ്റ്',
      mm: '%d മിനിറ്റ്',
      h: 'ഒരു മണിക്കൂർ',
      hh: '%d മണിക്കൂർ',
      d: 'ഒരു ദിവസം',
      dd: '%d ദിവസം',
      M: 'ഒരു മാസം',
      MM: '%d മാസം',
      y: 'ഒരു വർഷം',
      yy: '%d വർഷം' },

    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (
      meridiem === 'രാത്രി' && hour >= 4 ||
      meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
      meridiem === 'വൈകുന്നേരം')
      {
        return hour + 12;
      } else {
        return hour;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'രാത്രി';
      } else if (hour < 12) {
        return 'രാവിലെ';
      } else if (hour < 17) {
        return 'ഉച്ച കഴിഞ്ഞ്';
      } else if (hour < 20) {
        return 'വൈകുന്നേരം';
      } else {
        return 'രാത്രി';
      }
    } });


  return ml;

});

/***/ }),
/* 107 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/mn.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Mongolian [mn]
//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function translate(number, withoutSuffix, key, isFuture) {
    switch (key) {
      case 's':
        return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
      case 'ss':
        return number + (withoutSuffix ? ' секунд' : ' секундын');
      case 'm':
      case 'mm':
        return number + (withoutSuffix ? ' минут' : ' минутын');
      case 'h':
      case 'hh':
        return number + (withoutSuffix ? ' цаг' : ' цагийн');
      case 'd':
      case 'dd':
        return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
      case 'M':
      case 'MM':
        return number + (withoutSuffix ? ' сар' : ' сарын');
      case 'y':
      case 'yy':
        return number + (withoutSuffix ? ' жил' : ' жилийн');
      default:
        return number;}

  }

  var mn = moment.defineLocale('mn', {
    months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(
    '_'),

    monthsShort:
    '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
    weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
    weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'YYYY оны MMMMын D',
      LLL: 'YYYY оны MMMMын D HH:mm',
      LLLL: 'dddd, YYYY оны MMMMын D HH:mm' },

    meridiemParse: /ҮӨ|ҮХ/i,
    isPM: function isPM(input) {
      return input === 'ҮХ';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ҮӨ';
      } else {
        return 'ҮХ';
      }
    },
    calendar: {
      sameDay: '[Өнөөдөр] LT',
      nextDay: '[Маргааш] LT',
      nextWeek: '[Ирэх] dddd LT',
      lastDay: '[Өчигдөр] LT',
      lastWeek: '[Өнгөрсөн] dddd LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s дараа',
      past: '%s өмнө',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + ' өдөр';
        default:
          return number;}

    } });


  return mn;

});

/***/ }),
/* 108 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/mr.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Marathi [mr]
//! author : Harshad Kale : https://github.com/kalehv
//! author : Vivek Athalye : https://github.com/vnathalye

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '१',
    2: '२',
    3: '३',
    4: '४',
    5: '५',
    6: '६',
    7: '७',
    8: '८',
    9: '९',
    0: '०' },

  numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0' };


  function relativeTimeMr(number, withoutSuffix, string, isFuture) {
    var output = '';
    if (withoutSuffix) {
      switch (string) {
        case 's':
          output = 'काही सेकंद';
          break;
        case 'ss':
          output = '%d सेकंद';
          break;
        case 'm':
          output = 'एक मिनिट';
          break;
        case 'mm':
          output = '%d मिनिटे';
          break;
        case 'h':
          output = 'एक तास';
          break;
        case 'hh':
          output = '%d तास';
          break;
        case 'd':
          output = 'एक दिवस';
          break;
        case 'dd':
          output = '%d दिवस';
          break;
        case 'M':
          output = 'एक महिना';
          break;
        case 'MM':
          output = '%d महिने';
          break;
        case 'y':
          output = 'एक वर्ष';
          break;
        case 'yy':
          output = '%d वर्षे';
          break;}

    } else {
      switch (string) {
        case 's':
          output = 'काही सेकंदां';
          break;
        case 'ss':
          output = '%d सेकंदां';
          break;
        case 'm':
          output = 'एका मिनिटा';
          break;
        case 'mm':
          output = '%d मिनिटां';
          break;
        case 'h':
          output = 'एका तासा';
          break;
        case 'hh':
          output = '%d तासां';
          break;
        case 'd':
          output = 'एका दिवसा';
          break;
        case 'dd':
          output = '%d दिवसां';
          break;
        case 'M':
          output = 'एका महिन्या';
          break;
        case 'MM':
          output = '%d महिन्यां';
          break;
        case 'y':
          output = 'एका वर्षा';
          break;
        case 'yy':
          output = '%d वर्षां';
          break;}

    }
    return output.replace(/%d/i, number);
  }

  var mr = moment.defineLocale('mr', {
    months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
    '_'),

    monthsShort:
    'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat: {
      LT: 'A h:mm वाजता',
      LTS: 'A h:mm:ss वाजता',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm वाजता',
      LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता' },

    calendar: {
      sameDay: '[आज] LT',
      nextDay: '[उद्या] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[काल] LT',
      lastWeek: '[मागील] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%sमध्ये',
      past: '%sपूर्वी',
      s: relativeTimeMr,
      ss: relativeTimeMr,
      m: relativeTimeMr,
      mm: relativeTimeMr,
      h: relativeTimeMr,
      hh: relativeTimeMr,
      d: relativeTimeMr,
      dd: relativeTimeMr,
      M: relativeTimeMr,
      MM: relativeTimeMr,
      y: relativeTimeMr,
      yy: relativeTimeMr },

    preparse: function preparse(string) {
      return string.replace(/[१२३४५६७८९०]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {
        return hour;
      } else if (
      meridiem === 'दुपारी' ||
      meridiem === 'सायंकाळी' ||
      meridiem === 'रात्री')
      {
        return hour >= 12 ? hour : hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour >= 0 && hour < 6) {
        return 'पहाटे';
      } else if (hour < 12) {
        return 'सकाळी';
      } else if (hour < 17) {
        return 'दुपारी';
      } else if (hour < 20) {
        return 'सायंकाळी';
      } else {
        return 'रात्री';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return mr;

});

/***/ }),
/* 109 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ms.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ms = moment.defineLocale('ms', {
    months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [pukul] HH.mm',
      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' },

    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'pagi') {
        return hour;
      } else if (meridiem === 'tengahari') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'petang' || meridiem === 'malam') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'pagi';
      } else if (hours < 15) {
        return 'tengahari';
      } else if (hours < 19) {
        return 'petang';
      } else {
        return 'malam';
      }
    },
    calendar: {
      sameDay: '[Hari ini pukul] LT',
      nextDay: '[Esok pukul] LT',
      nextWeek: 'dddd [pukul] LT',
      lastDay: '[Kelmarin pukul] LT',
      lastWeek: 'dddd [lepas pukul] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dalam %s',
      past: '%s yang lepas',
      s: 'beberapa saat',
      ss: '%d saat',
      m: 'seminit',
      mm: '%d minit',
      h: 'sejam',
      hh: '%d jam',
      d: 'sehari',
      dd: '%d hari',
      M: 'sebulan',
      MM: '%d bulan',
      y: 'setahun',
      yy: '%d tahun' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return ms;

});

/***/ }),
/* 110 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ms-my.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms-my]
//! note : DEPRECATED, the correct one is [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var msMy = moment.defineLocale('ms-my', {
    months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [pukul] HH.mm',
      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm' },

    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'pagi') {
        return hour;
      } else if (meridiem === 'tengahari') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'petang' || meridiem === 'malam') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'pagi';
      } else if (hours < 15) {
        return 'tengahari';
      } else if (hours < 19) {
        return 'petang';
      } else {
        return 'malam';
      }
    },
    calendar: {
      sameDay: '[Hari ini pukul] LT',
      nextDay: '[Esok pukul] LT',
      nextWeek: 'dddd [pukul] LT',
      lastDay: '[Kelmarin pukul] LT',
      lastWeek: 'dddd [lepas pukul] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dalam %s',
      past: '%s yang lepas',
      s: 'beberapa saat',
      ss: '%d saat',
      m: 'seminit',
      mm: '%d minit',
      h: 'sejam',
      hh: '%d jam',
      d: 'sehari',
      dd: '%d hari',
      M: 'sebulan',
      MM: '%d bulan',
      y: 'setahun',
      yy: '%d tahun' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return msMy;

});

/***/ }),
/* 111 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/mt.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maltese (Malta) [mt]
//! author : Alessandro Maruccia : https://github.com/alesma

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var mt = moment.defineLocale('mt', {
    months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(
    '_'),

    monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
    weekdays:
    'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(
    '_'),

    weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
    weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Illum fil-]LT',
      nextDay: '[Għada fil-]LT',
      nextWeek: 'dddd [fil-]LT',
      lastDay: '[Il-bieraħ fil-]LT',
      lastWeek: 'dddd [li għadda] [fil-]LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'f’ %s',
      past: '%s ilu',
      s: 'ftit sekondi',
      ss: '%d sekondi',
      m: 'minuta',
      mm: '%d minuti',
      h: 'siegħa',
      hh: '%d siegħat',
      d: 'ġurnata',
      dd: '%d ġranet',
      M: 'xahar',
      MM: '%d xhur',
      y: 'sena',
      yy: '%d sni' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return mt;

});

/***/ }),
/* 112 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/my.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Burmese [my]
//! author : Squar team, mysquar.com
//! author : David Rossellat : https://github.com/gholadr
//! author : Tin Aung Lin : https://github.com/thanyawzinmin

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '၁',
    2: '၂',
    3: '၃',
    4: '၄',
    5: '၅',
    6: '၆',
    7: '၇',
    8: '၈',
    9: '၉',
    0: '၀' },

  numberMap = {
    '၁': '1',
    '၂': '2',
    '၃': '3',
    '၄': '4',
    '၅': '5',
    '၆': '6',
    '၇': '7',
    '၈': '8',
    '၉': '9',
    '၀': '0' };


  var my = moment.defineLocale('my', {
    months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(
    '_'),

    monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
    weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(
    '_'),

    weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
    weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[ယနေ.] LT [မှာ]',
      nextDay: '[မနက်ဖြန်] LT [မှာ]',
      nextWeek: 'dddd LT [မှာ]',
      lastDay: '[မနေ.က] LT [မှာ]',
      lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
      sameElse: 'L' },

    relativeTime: {
      future: 'လာမည့် %s မှာ',
      past: 'လွန်ခဲ့သော %s က',
      s: 'စက္ကန်.အနည်းငယ်',
      ss: '%d စက္ကန့်',
      m: 'တစ်မိနစ်',
      mm: '%d မိနစ်',
      h: 'တစ်နာရီ',
      hh: '%d နာရီ',
      d: 'တစ်ရက်',
      dd: '%d ရက်',
      M: 'တစ်လ',
      MM: '%d လ',
      y: 'တစ်နှစ်',
      yy: '%d နှစ်' },

    preparse: function preparse(string) {
      return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return my;

});

/***/ }),
/* 113 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/nb.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Norwegian Bokmål [nb]
//! authors : Espen Hovlandsdal : https://github.com/rexxars
//!           Sigurd Gartmann : https://github.com/sigurdga
//!           Stephen Ramthun : https://github.com/stephenramthun

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var nb = moment.defineLocale('nb', {
    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
    '_'),

    monthsShort:
    'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
    monthsParseExact: true,
    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY [kl.] HH:mm',
      LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm' },

    calendar: {
      sameDay: '[i dag kl.] LT',
      nextDay: '[i morgen kl.] LT',
      nextWeek: 'dddd [kl.] LT',
      lastDay: '[i går kl.] LT',
      lastWeek: '[forrige] dddd [kl.] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'om %s',
      past: '%s siden',
      s: 'noen sekunder',
      ss: '%d sekunder',
      m: 'ett minutt',
      mm: '%d minutter',
      h: 'en time',
      hh: '%d timer',
      d: 'en dag',
      dd: '%d dager',
      w: 'en uke',
      ww: '%d uker',
      M: 'en måned',
      MM: '%d måneder',
      y: 'ett år',
      yy: '%d år' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return nb;

});

/***/ }),
/* 114 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ne.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nepalese [ne]
//! author : suvash : https://github.com/suvash

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '१',
    2: '२',
    3: '३',
    4: '४',
    5: '५',
    6: '६',
    7: '७',
    8: '८',
    9: '९',
    0: '०' },

  numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0' };


  var ne = moment.defineLocale('ne', {
    months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(
    '_'),

    monthsShort:
    'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(
    '_'),

    weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
    weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'Aको h:mm बजे',
      LTS: 'Aको h:mm:ss बजे',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, Aको h:mm बजे',
      LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे' },

    preparse: function preparse(string) {
      return string.replace(/[१२३४५६७८९०]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'राति') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'बिहान') {
        return hour;
      } else if (meridiem === 'दिउँसो') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'साँझ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 3) {
        return 'राति';
      } else if (hour < 12) {
        return 'बिहान';
      } else if (hour < 16) {
        return 'दिउँसो';
      } else if (hour < 20) {
        return 'साँझ';
      } else {
        return 'राति';
      }
    },
    calendar: {
      sameDay: '[आज] LT',
      nextDay: '[भोलि] LT',
      nextWeek: '[आउँदो] dddd[,] LT',
      lastDay: '[हिजो] LT',
      lastWeek: '[गएको] dddd[,] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%sमा',
      past: '%s अगाडि',
      s: 'केही क्षण',
      ss: '%d सेकेण्ड',
      m: 'एक मिनेट',
      mm: '%d मिनेट',
      h: 'एक घण्टा',
      hh: '%d घण्टा',
      d: 'एक दिन',
      dd: '%d दिन',
      M: 'एक महिना',
      MM: '%d महिना',
      y: 'एक बर्ष',
      yy: '%d बर्ष' },

    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return ne;

});

/***/ }),
/* 115 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/nl.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch [nl]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortWithDots =
  'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
  monthsShortWithoutDots =
  'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
  monthsParse = [
  /^jan/i,
  /^feb/i,
  /^maart|mrt.?$/i,
  /^apr/i,
  /^mei$/i,
  /^jun[i.]?$/i,
  /^jul[i.]?$/i,
  /^aug/i,
  /^sep/i,
  /^okt/i,
  /^nov/i,
  /^dec/i],

  monthsRegex =
  /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

  var nl = moment.defineLocale('nl', {
    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortWithDots;
      } else if (/-MMM-/.test(format)) {
        return monthsShortWithoutDots[m.month()];
      } else {
        return monthsShortWithDots[m.month()];
      }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex:
    /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex:
    /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,

    weekdays:
    'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD-MM-YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[vandaag om] LT',
      nextDay: '[morgen om] LT',
      nextWeek: 'dddd [om] LT',
      lastDay: '[gisteren om] LT',
      lastWeek: '[afgelopen] dddd [om] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'over %s',
      past: '%s geleden',
      s: 'een paar seconden',
      ss: '%d seconden',
      m: 'één minuut',
      mm: '%d minuten',
      h: 'één uur',
      hh: '%d uur',
      d: 'één dag',
      dd: '%d dagen',
      w: 'één week',
      ww: '%d weken',
      M: 'één maand',
      MM: '%d maanden',
      y: 'één jaar',
      yy: '%d jaar' },

    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal: function ordinal(number) {
      return (
        number + (
        number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'));

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return nl;

});

/***/ }),
/* 116 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/nl-be.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch (Belgium) [nl-be]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsShortWithDots =
  'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
  monthsShortWithoutDots =
  'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
  monthsParse = [
  /^jan/i,
  /^feb/i,
  /^maart|mrt.?$/i,
  /^apr/i,
  /^mei$/i,
  /^jun[i.]?$/i,
  /^jul[i.]?$/i,
  /^aug/i,
  /^sep/i,
  /^okt/i,
  /^nov/i,
  /^dec/i],

  monthsRegex =
  /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

  var nlBe = moment.defineLocale('nl-be', {
    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
    '_'),

    monthsShort: function monthsShort(m, format) {
      if (!m) {
        return monthsShortWithDots;
      } else if (/-MMM-/.test(format)) {
        return monthsShortWithoutDots[m.month()];
      } else {
        return monthsShortWithDots[m.month()];
      }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex:
    /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex:
    /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,

    weekdays:
    'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[vandaag om] LT',
      nextDay: '[morgen om] LT',
      nextWeek: 'dddd [om] LT',
      lastDay: '[gisteren om] LT',
      lastWeek: '[afgelopen] dddd [om] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'over %s',
      past: '%s geleden',
      s: 'een paar seconden',
      ss: '%d seconden',
      m: 'één minuut',
      mm: '%d minuten',
      h: 'één uur',
      hh: '%d uur',
      d: 'één dag',
      dd: '%d dagen',
      M: 'één maand',
      MM: '%d maanden',
      y: 'één jaar',
      yy: '%d jaar' },

    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal: function ordinal(number) {
      return (
        number + (
        number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'));

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return nlBe;

});

/***/ }),
/* 117 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/nn.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nynorsk [nn]
//! authors : https://github.com/mechuwind
//!           Stephen Ramthun : https://github.com/stephenramthun

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var nn = moment.defineLocale('nn', {
    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
    '_'),

    monthsShort:
    'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
    monthsParseExact: true,
    weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
    weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),
    weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY [kl.] H:mm',
      LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm' },

    calendar: {
      sameDay: '[I dag klokka] LT',
      nextDay: '[I morgon klokka] LT',
      nextWeek: 'dddd [klokka] LT',
      lastDay: '[I går klokka] LT',
      lastWeek: '[Føregåande] dddd [klokka] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'om %s',
      past: '%s sidan',
      s: 'nokre sekund',
      ss: '%d sekund',
      m: 'eit minutt',
      mm: '%d minutt',
      h: 'ein time',
      hh: '%d timar',
      d: 'ein dag',
      dd: '%d dagar',
      w: 'ei veke',
      ww: '%d veker',
      M: 'ein månad',
      MM: '%d månader',
      y: 'eit år',
      yy: '%d år' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return nn;

});

/***/ }),
/* 118 */
/*!******************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/oc-lnc.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Occitan, lengadocian dialecte [oc-lnc]
//! author : Quentin PAGÈS : https://github.com/Quenty31

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ocLnc = moment.defineLocale('oc-lnc', {
    months: {
      standalone:
      'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(
      '_'),

      format: "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split(
      '_'),

      isFormat: /D[oD]?(\s)+MMMM/ },

    monthsShort:
    'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(
    '_'),

    weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),
    weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM [de] YYYY',
      ll: 'D MMM YYYY',
      LLL: 'D MMMM [de] YYYY [a] H:mm',
      lll: 'D MMM YYYY, H:mm',
      LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',
      llll: 'ddd D MMM YYYY, H:mm' },

    calendar: {
      sameDay: '[uèi a] LT',
      nextDay: '[deman a] LT',
      nextWeek: 'dddd [a] LT',
      lastDay: '[ièr a] LT',
      lastWeek: 'dddd [passat a] LT',
      sameElse: 'L' },

    relativeTime: {
      future: "d'aquí %s",
      past: 'fa %s',
      s: 'unas segondas',
      ss: '%d segondas',
      m: 'una minuta',
      mm: '%d minutas',
      h: 'una ora',
      hh: '%d oras',
      d: 'un jorn',
      dd: '%d jorns',
      M: 'un mes',
      MM: '%d meses',
      y: 'un an',
      yy: '%d ans' },

    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
    ordinal: function ordinal(number, period) {
      var output =
      number === 1 ?
      'r' :
      number === 2 ?
      'n' :
      number === 3 ?
      'r' :
      number === 4 ?
      't' :
      'è';
      if (period === 'w' || period === 'W') {
        output = 'a';
      }
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 } });



  return ocLnc;

});

/***/ }),
/* 119 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/pa-in.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Punjabi (India) [pa-in]
//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '੧',
    2: '੨',
    3: '੩',
    4: '੪',
    5: '੫',
    6: '੬',
    7: '੭',
    8: '੮',
    9: '੯',
    0: '੦' },

  numberMap = {
    '੧': '1',
    '੨': '2',
    '੩': '3',
    '੪': '4',
    '੫': '5',
    '੬': '6',
    '੭': '7',
    '੮': '8',
    '੯': '9',
    '੦': '0' };


  var paIn = moment.defineLocale('pa-in', {
    // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
    months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
    '_'),

    monthsShort:
    'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
    '_'),

    weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(
    '_'),

    weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm ਵਜੇ',
      LTS: 'A h:mm:ss ਵਜੇ',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
      LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ' },

    calendar: {
      sameDay: '[ਅਜ] LT',
      nextDay: '[ਕਲ] LT',
      nextWeek: '[ਅਗਲਾ] dddd, LT',
      lastDay: '[ਕਲ] LT',
      lastWeek: '[ਪਿਛਲੇ] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s ਵਿੱਚ',
      past: '%s ਪਿਛਲੇ',
      s: 'ਕੁਝ ਸਕਿੰਟ',
      ss: '%d ਸਕਿੰਟ',
      m: 'ਇਕ ਮਿੰਟ',
      mm: '%d ਮਿੰਟ',
      h: 'ਇੱਕ ਘੰਟਾ',
      hh: '%d ਘੰਟੇ',
      d: 'ਇੱਕ ਦਿਨ',
      dd: '%d ਦਿਨ',
      M: 'ਇੱਕ ਮਹੀਨਾ',
      MM: '%d ਮਹੀਨੇ',
      y: 'ਇੱਕ ਸਾਲ',
      yy: '%d ਸਾਲ' },

    preparse: function preparse(string) {
      return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'ਰਾਤ') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'ਸਵੇਰ') {
        return hour;
      } else if (meridiem === 'ਦੁਪਹਿਰ') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'ਸ਼ਾਮ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ਰਾਤ';
      } else if (hour < 10) {
        return 'ਸਵੇਰ';
      } else if (hour < 17) {
        return 'ਦੁਪਹਿਰ';
      } else if (hour < 20) {
        return 'ਸ਼ਾਮ';
      } else {
        return 'ਰਾਤ';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return paIn;

});

/***/ }),
/* 120 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/pl.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Polish [pl]
//! author : Rafal Hirsz : https://github.com/evoL

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var monthsNominative =
  'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(
  '_'),

  monthsSubjective =
  'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(
  '_'),

  monthsParse = [
  /^sty/i,
  /^lut/i,
  /^mar/i,
  /^kwi/i,
  /^maj/i,
  /^cze/i,
  /^lip/i,
  /^sie/i,
  /^wrz/i,
  /^paź/i,
  /^lis/i,
  /^gru/i];

  function plural(n) {
    return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
  }
  function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
      case 'ss':
        return result + (plural(number) ? 'sekundy' : 'sekund');
      case 'm':
        return withoutSuffix ? 'minuta' : 'minutę';
      case 'mm':
        return result + (plural(number) ? 'minuty' : 'minut');
      case 'h':
        return withoutSuffix ? 'godzina' : 'godzinę';
      case 'hh':
        return result + (plural(number) ? 'godziny' : 'godzin');
      case 'ww':
        return result + (plural(number) ? 'tygodnie' : 'tygodni');
      case 'MM':
        return result + (plural(number) ? 'miesiące' : 'miesięcy');
      case 'yy':
        return result + (plural(number) ? 'lata' : 'lat');}

  }

  var pl = moment.defineLocale('pl', {
    months: function months(momentToFormat, format) {
      if (!momentToFormat) {
        return monthsNominative;
      } else if (/D MMMM/.test(format)) {
        return monthsSubjective[momentToFormat.month()];
      } else {
        return monthsNominative[momentToFormat.month()];
      }
    },
    monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays:
    'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
    weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
    weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Dziś o] LT',
      nextDay: '[Jutro o] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[W niedzielę o] LT';

          case 2:
            return '[We wtorek o] LT';

          case 3:
            return '[W środę o] LT';

          case 6:
            return '[W sobotę o] LT';

          default:
            return '[W] dddd [o] LT';}

      },
      lastDay: '[Wczoraj o] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[W zeszłą niedzielę o] LT';
          case 3:
            return '[W zeszłą środę o] LT';
          case 6:
            return '[W zeszłą sobotę o] LT';
          default:
            return '[W zeszły] dddd [o] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: '%s temu',
      s: 'kilka sekund',
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: '1 dzień',
      dd: '%d dni',
      w: 'tydzień',
      ww: translate,
      M: 'miesiąc',
      MM: translate,
      y: 'rok',
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return pl;

});

/***/ }),
/* 121 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/pt.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese [pt]
//! author : Jefferson : https://github.com/jalex79

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var pt = moment.defineLocale('pt', {
    months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
    '_'),

    monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays:
    'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(
    '_'),

    weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
    weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY HH:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm' },

    calendar: {
      sameDay: '[Hoje às] LT',
      nextDay: '[Amanhã às] LT',
      nextWeek: 'dddd [às] LT',
      lastDay: '[Ontem às] LT',
      lastWeek: function lastWeek() {
        return this.day() === 0 || this.day() === 6 ?
        '[Último] dddd [às] LT' // Saturday + Sunday
        : '[Última] dddd [às] LT'; // Monday - Friday
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'em %s',
      past: 'há %s',
      s: 'segundos',
      ss: '%d segundos',
      m: 'um minuto',
      mm: '%d minutos',
      h: 'uma hora',
      hh: '%d horas',
      d: 'um dia',
      dd: '%d dias',
      w: 'uma semana',
      ww: '%d semanas',
      M: 'um mês',
      MM: '%d meses',
      y: 'um ano',
      yy: '%d anos' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return pt;

});

/***/ }),
/* 122 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/pt-br.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese (Brazil) [pt-br]
//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ptBr = moment.defineLocale('pt-br', {
    months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
    '_'),

    monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays:
    'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(
    '_'),

    weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
    weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D [de] MMMM [de] YYYY',
      LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
      LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm' },

    calendar: {
      sameDay: '[Hoje às] LT',
      nextDay: '[Amanhã às] LT',
      nextWeek: 'dddd [às] LT',
      lastDay: '[Ontem às] LT',
      lastWeek: function lastWeek() {
        return this.day() === 0 || this.day() === 6 ?
        '[Último] dddd [às] LT' // Saturday + Sunday
        : '[Última] dddd [às] LT'; // Monday - Friday
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'em %s',
      past: 'há %s',
      s: 'poucos segundos',
      ss: '%d segundos',
      m: 'um minuto',
      mm: '%d minutos',
      h: 'uma hora',
      hh: '%d horas',
      d: 'um dia',
      dd: '%d dias',
      M: 'um mês',
      MM: '%d meses',
      y: 'um ano',
      yy: '%d anos' },

    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    invalidDate: 'Data inválida' });


  return ptBr;

});

/***/ }),
/* 123 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ro.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Romanian [ro]
//! author : Vlad Gurdiga : https://github.com/gurdiga
//! author : Valentin Agachi : https://github.com/avaly
//! author : Emanuel Cepoi : https://github.com/cepem

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
      ss: 'secunde',
      mm: 'minute',
      hh: 'ore',
      dd: 'zile',
      ww: 'săptămâni',
      MM: 'luni',
      yy: 'ani' },

    separator = ' ';
    if (number % 100 >= 20 || number >= 100 && number % 100 === 0) {
      separator = ' de ';
    }
    return number + separator + format[key];
  }

  var ro = moment.defineLocale('ro', {
    months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(
    '_'),

    monthsShort:
    'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
    weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
    weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY H:mm',
      LLLL: 'dddd, D MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[azi la] LT',
      nextDay: '[mâine la] LT',
      nextWeek: 'dddd [la] LT',
      lastDay: '[ieri la] LT',
      lastWeek: '[fosta] dddd [la] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'peste %s',
      past: '%s în urmă',
      s: 'câteva secunde',
      ss: relativeTimeWithPlural,
      m: 'un minut',
      mm: relativeTimeWithPlural,
      h: 'o oră',
      hh: relativeTimeWithPlural,
      d: 'o zi',
      dd: relativeTimeWithPlural,
      w: 'o săptămână',
      ww: relativeTimeWithPlural,
      M: 'o lună',
      MM: relativeTimeWithPlural,
      y: 'un an',
      yy: relativeTimeWithPlural },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return ro;

});

/***/ }),
/* 124 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ru.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Russian [ru]
//! author : Viktorminator : https://github.com/Viktorminator
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Коренберг Марк : https://github.com/socketpair

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ?
    forms[0] :
    num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ?
    forms[1] :
    forms[2];
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
      ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
      mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
      hh: 'час_часа_часов',
      dd: 'день_дня_дней',
      ww: 'неделя_недели_недель',
      MM: 'месяц_месяца_месяцев',
      yy: 'год_года_лет' };

    if (key === 'm') {
      return withoutSuffix ? 'минута' : 'минуту';
    } else {
      return number + ' ' + plural(format[key], +number);
    }
  }
  var monthsParse = [
  /^янв/i,
  /^фев/i,
  /^мар/i,
  /^апр/i,
  /^ма[йя]/i,
  /^июн/i,
  /^июл/i,
  /^авг/i,
  /^сен/i,
  /^окт/i,
  /^ноя/i,
  /^дек/i];


  // http://new.gramota.ru/spravka/rules/139-prop : § 103
  // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
  // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
  var ru = moment.defineLocale('ru', {
    months: {
      format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(
      '_'),

      standalone:
      'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
      '_') },


    monthsShort: {
      // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку?
      format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(
      '_'),

      standalone:
      'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(
      '_') },


    weekdays: {
      standalone:
      'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(
      '_'),

      format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(
      '_'),

      isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/ },

    weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,

    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
    monthsRegex:
    /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // копия предыдущего
    monthsShortRegex:
    /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // полные названия с падежами
    monthsStrictRegex:
    /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

    // Выражение, которое соответствует только сокращённым формам
    monthsShortStrictRegex:
    /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY г.',
      LLL: 'D MMMM YYYY г., H:mm',
      LLLL: 'dddd, D MMMM YYYY г., H:mm' },

    calendar: {
      sameDay: '[Сегодня, в] LT',
      nextDay: '[Завтра, в] LT',
      lastDay: '[Вчера, в] LT',
      nextWeek: function nextWeek(now) {
        if (now.week() !== this.week()) {
          switch (this.day()) {
            case 0:
              return '[В следующее] dddd, [в] LT';
            case 1:
            case 2:
            case 4:
              return '[В следующий] dddd, [в] LT';
            case 3:
            case 5:
            case 6:
              return '[В следующую] dddd, [в] LT';}

        } else {
          if (this.day() === 2) {
            return '[Во] dddd, [в] LT';
          } else {
            return '[В] dddd, [в] LT';
          }
        }
      },
      lastWeek: function lastWeek(now) {
        if (now.week() !== this.week()) {
          switch (this.day()) {
            case 0:
              return '[В прошлое] dddd, [в] LT';
            case 1:
            case 2:
            case 4:
              return '[В прошлый] dddd, [в] LT';
            case 3:
            case 5:
            case 6:
              return '[В прошлую] dddd, [в] LT';}

        } else {
          if (this.day() === 2) {
            return '[Во] dddd, [в] LT';
          } else {
            return '[В] dddd, [в] LT';
          }
        }
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'через %s',
      past: '%s назад',
      s: 'несколько секунд',
      ss: relativeTimeWithPlural,
      m: relativeTimeWithPlural,
      mm: relativeTimeWithPlural,
      h: 'час',
      hh: relativeTimeWithPlural,
      d: 'день',
      dd: relativeTimeWithPlural,
      w: 'неделя',
      ww: relativeTimeWithPlural,
      M: 'месяц',
      MM: relativeTimeWithPlural,
      y: 'год',
      yy: relativeTimeWithPlural },

    meridiemParse: /ночи|утра|дня|вечера/i,
    isPM: function isPM(input) {
      return /^(дня|вечера)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ночи';
      } else if (hour < 12) {
        return 'утра';
      } else if (hour < 17) {
        return 'дня';
      } else {
        return 'вечера';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'M':
        case 'd':
        case 'DDD':
          return number + '-й';
        case 'D':
          return number + '-го';
        case 'w':
        case 'W':
          return number + '-я';
        default:
          return number;}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ru;

});

/***/ }),
/* 125 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/sd.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sindhi [sd]
//! author : Narain Sagar : https://github.com/narainsagar

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'جنوري',
  'فيبروري',
  'مارچ',
  'اپريل',
  'مئي',
  'جون',
  'جولاءِ',
  'آگسٽ',
  'سيپٽمبر',
  'آڪٽوبر',
  'نومبر',
  'ڊسمبر'],

  days = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];

  var sd = moment.defineLocale('sd', {
    months: months,
    monthsShort: months,
    weekdays: days,
    weekdaysShort: days,
    weekdaysMin: days,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd، D MMMM YYYY HH:mm' },

    meridiemParse: /صبح|شام/,
    isPM: function isPM(input) {
      return 'شام' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'صبح';
      }
      return 'شام';
    },
    calendar: {
      sameDay: '[اڄ] LT',
      nextDay: '[سڀاڻي] LT',
      nextWeek: 'dddd [اڳين هفتي تي] LT',
      lastDay: '[ڪالهه] LT',
      lastWeek: '[گزريل هفتي] dddd [تي] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s پوء',
      past: '%s اڳ',
      s: 'چند سيڪنڊ',
      ss: '%d سيڪنڊ',
      m: 'هڪ منٽ',
      mm: '%d منٽ',
      h: 'هڪ ڪلاڪ',
      hh: '%d ڪلاڪ',
      d: 'هڪ ڏينهن',
      dd: '%d ڏينهن',
      M: 'هڪ مهينو',
      MM: '%d مهينا',
      y: 'هڪ سال',
      yy: '%d سال' },

    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return sd;

});

/***/ }),
/* 126 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/se.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Northern Sami [se]
//! authors : Bård Rolstad Henriksen : https://github.com/karamell

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var se = moment.defineLocale('se', {
    months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(
    '_'),

    monthsShort:
    'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
    weekdays:
    'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(
    '_'),

    weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
    weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'MMMM D. [b.] YYYY',
      LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
      LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm' },

    calendar: {
      sameDay: '[otne ti] LT',
      nextDay: '[ihttin ti] LT',
      nextWeek: 'dddd [ti] LT',
      lastDay: '[ikte ti] LT',
      lastWeek: '[ovddit] dddd [ti] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s geažes',
      past: 'maŋit %s',
      s: 'moadde sekunddat',
      ss: '%d sekunddat',
      m: 'okta minuhta',
      mm: '%d minuhtat',
      h: 'okta diimmu',
      hh: '%d diimmut',
      d: 'okta beaivi',
      dd: '%d beaivvit',
      M: 'okta mánnu',
      MM: '%d mánut',
      y: 'okta jahki',
      yy: '%d jagit' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return se;

});

/***/ }),
/* 127 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/si.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sinhalese [si]
//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  /*jshint -W100*/
  var si = moment.defineLocale('si', {
    months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(
    '_'),

    monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(
    '_'),

    weekdays:
    'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(
    '_'),

    weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
    weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'a h:mm',
      LTS: 'a h:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY MMMM D',
      LLL: 'YYYY MMMM D, a h:mm',
      LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss' },

    calendar: {
      sameDay: '[අද] LT[ට]',
      nextDay: '[හෙට] LT[ට]',
      nextWeek: 'dddd LT[ට]',
      lastDay: '[ඊයේ] LT[ට]',
      lastWeek: '[පසුගිය] dddd LT[ට]',
      sameElse: 'L' },

    relativeTime: {
      future: '%sකින්',
      past: '%sකට පෙර',
      s: 'තත්පර කිහිපය',
      ss: 'තත්පර %d',
      m: 'මිනිත්තුව',
      mm: 'මිනිත්තු %d',
      h: 'පැය',
      hh: 'පැය %d',
      d: 'දිනය',
      dd: 'දින %d',
      M: 'මාසය',
      MM: 'මාස %d',
      y: 'වසර',
      yy: 'වසර %d' },

    dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
    ordinal: function ordinal(number) {
      return number + ' වැනි';
    },
    meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
    isPM: function isPM(input) {
      return input === 'ප.ව.' || input === 'පස් වරු';
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'ප.ව.' : 'පස් වරු';
      } else {
        return isLower ? 'පෙ.ව.' : 'පෙර වරු';
      }
    } });


  return si;

});

/***/ }),
/* 128 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/sk.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovak [sk]
//! author : Martin Minka : https://github.com/k2s
//! based on work of petrbela : https://github.com/petrbela

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months =
  'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(
  '_'),

  monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
  function plural(n) {
    return n > 1 && n < 5;
  }
  function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
      case 's': // a few seconds / in a few seconds / a few seconds ago
        return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';
      case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'sekundy' : 'sekúnd');
        } else {
          return result + 'sekundami';
        }
      case 'm': // a minute / in a minute / a minute ago
        return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';
      case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'minúty' : 'minút');
        } else {
          return result + 'minútami';
        }
      case 'h': // an hour / in an hour / an hour ago
        return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
      case 'hh': // 9 hours / in 9 hours / 9 hours ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'hodiny' : 'hodín');
        } else {
          return result + 'hodinami';
        }
      case 'd': // a day / in a day / a day ago
        return withoutSuffix || isFuture ? 'deň' : 'dňom';
      case 'dd': // 9 days / in 9 days / 9 days ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'dni' : 'dní');
        } else {
          return result + 'dňami';
        }
      case 'M': // a month / in a month / a month ago
        return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';
      case 'MM': // 9 months / in 9 months / 9 months ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'mesiace' : 'mesiacov');
        } else {
          return result + 'mesiacmi';
        }
      case 'y': // a year / in a year / a year ago
        return withoutSuffix || isFuture ? 'rok' : 'rokom';
      case 'yy': // 9 years / in 9 years / 9 years ago
        if (withoutSuffix || isFuture) {
          return result + (plural(number) ? 'roky' : 'rokov');
        } else {
          return result + 'rokmi';
        }}

  }

  var sk = moment.defineLocale('sk', {
    months: months,
    monthsShort: monthsShort,
    weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
    weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
    weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[dnes o] LT',
      nextDay: '[zajtra o] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[v nedeľu o] LT';
          case 1:
          case 2:
            return '[v] dddd [o] LT';
          case 3:
            return '[v stredu o] LT';
          case 4:
            return '[vo štvrtok o] LT';
          case 5:
            return '[v piatok o] LT';
          case 6:
            return '[v sobotu o] LT';}

      },
      lastDay: '[včera o] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[minulú nedeľu o] LT';
          case 1:
          case 2:
            return '[minulý] dddd [o] LT';
          case 3:
            return '[minulú stredu o] LT';
          case 4:
          case 5:
            return '[minulý] dddd [o] LT';
          case 6:
            return '[minulú sobotu o] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'pred %s',
      s: translate,
      ss: translate,
      m: translate,
      mm: translate,
      h: translate,
      hh: translate,
      d: translate,
      dd: translate,
      M: translate,
      MM: translate,
      y: translate,
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return sk;

});

/***/ }),
/* 129 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/sl.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovenian [sl]
//! author : Robert Sedovšek : https://github.com/sedovsek

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
      case 's':
        return withoutSuffix || isFuture ?
        'nekaj sekund' :
        'nekaj sekundami';
      case 'ss':
        if (number === 1) {
          result += withoutSuffix ? 'sekundo' : 'sekundi';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
        } else {
          result += 'sekund';
        }
        return result;
      case 'm':
        return withoutSuffix ? 'ena minuta' : 'eno minuto';
      case 'mm':
        if (number === 1) {
          result += withoutSuffix ? 'minuta' : 'minuto';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'minute' : 'minutami';
        } else {
          result += withoutSuffix || isFuture ? 'minut' : 'minutami';
        }
        return result;
      case 'h':
        return withoutSuffix ? 'ena ura' : 'eno uro';
      case 'hh':
        if (number === 1) {
          result += withoutSuffix ? 'ura' : 'uro';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'uri' : 'urama';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'ure' : 'urami';
        } else {
          result += withoutSuffix || isFuture ? 'ur' : 'urami';
        }
        return result;
      case 'd':
        return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
      case 'dd':
        if (number === 1) {
          result += withoutSuffix || isFuture ? 'dan' : 'dnem';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
        } else {
          result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
        }
        return result;
      case 'M':
        return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
      case 'MM':
        if (number === 1) {
          result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
        } else {
          result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
        }
        return result;
      case 'y':
        return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
      case 'yy':
        if (number === 1) {
          result += withoutSuffix || isFuture ? 'leto' : 'letom';
        } else if (number === 2) {
          result += withoutSuffix || isFuture ? 'leti' : 'letoma';
        } else if (number < 5) {
          result += withoutSuffix || isFuture ? 'leta' : 'leti';
        } else {
          result += withoutSuffix || isFuture ? 'let' : 'leti';
        }
        return result;}

  }

  var sl = moment.defineLocale('sl', {
    months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(
    '_'),

    monthsShort:
    'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
    weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
    weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD. MM. YYYY',
      LL: 'D. MMMM YYYY',
      LLL: 'D. MMMM YYYY H:mm',
      LLLL: 'dddd, D. MMMM YYYY H:mm' },

    calendar: {
      sameDay: '[danes ob] LT',
      nextDay: '[jutri ob] LT',

      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[v] [nedeljo] [ob] LT';
          case 3:
            return '[v] [sredo] [ob] LT';
          case 6:
            return '[v] [soboto] [ob] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[v] dddd [ob] LT';}

      },
      lastDay: '[včeraj ob] LT',
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
            return '[prejšnjo] [nedeljo] [ob] LT';
          case 3:
            return '[prejšnjo] [sredo] [ob] LT';
          case 6:
            return '[prejšnjo] [soboto] [ob] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[prejšnji] dddd [ob] LT';}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'čez %s',
      past: 'pred %s',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: processRelativeTime,
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return sl;

});

/***/ }),
/* 130 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/sq.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Albanian [sq]
//! author : Flakërim Ismani : https://github.com/flakerimi
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Oerd Cukalla : https://github.com/oerd

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var sq = moment.defineLocale('sq', {
    months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(
    '_'),

    monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
    weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(
    '_'),

    weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
    weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
    weekdaysParseExact: true,
    meridiemParse: /PD|MD/,
    isPM: function isPM(input) {
      return input.charAt(0) === 'M';
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      return hours < 12 ? 'PD' : 'MD';
    },
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Sot në] LT',
      nextDay: '[Nesër në] LT',
      nextWeek: 'dddd [në] LT',
      lastDay: '[Dje në] LT',
      lastWeek: 'dddd [e kaluar në] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'në %s',
      past: '%s më parë',
      s: 'disa sekonda',
      ss: '%d sekonda',
      m: 'një minutë',
      mm: '%d minuta',
      h: 'një orë',
      hh: '%d orë',
      d: 'një ditë',
      dd: '%d ditë',
      M: 'një muaj',
      MM: '%d muaj',
      y: 'një vit',
      yy: '%d vite' },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return sq;

});

/***/ }),
/* 131 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/sr.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian [sr]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
//! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var translator = {
    words: {
      //Different grammatical cases
      ss: ['sekunda', 'sekunde', 'sekundi'],
      m: ['jedan minut', 'jednog minuta'],
      mm: ['minut', 'minuta', 'minuta'],
      h: ['jedan sat', 'jednog sata'],
      hh: ['sat', 'sata', 'sati'],
      d: ['jedan dan', 'jednog dana'],
      dd: ['dan', 'dana', 'dana'],
      M: ['jedan mesec', 'jednog meseca'],
      MM: ['mesec', 'meseca', 'meseci'],
      y: ['jednu godinu', 'jedne godine'],
      yy: ['godinu', 'godine', 'godina'] },

    correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
      if (
      number % 10 >= 1 &&
      number % 10 <= 4 && (
      number % 100 < 10 || number % 100 >= 20))
      {
        return number % 10 === 1 ? wordKey[0] : wordKey[1];
      }
      return wordKey[2];
    },
    translate: function translate(number, withoutSuffix, key, isFuture) {
      var wordKey = translator.words[key],
      word;

      if (key.length === 1) {
        // Nominativ
        if (key === 'y' && withoutSuffix) return 'jedna godina';
        return isFuture || withoutSuffix ? wordKey[0] : wordKey[1];
      }

      word = translator.correctGrammaticalCase(number, wordKey);
      // Nominativ
      if (key === 'yy' && withoutSuffix && word === 'godinu') {
        return number + ' godina';
      }

      return number + ' ' + word;
    } };


  var sr = moment.defineLocale('sr', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
    '_'),

    monthsShort:
    'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(
    '_'),

    weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'D. M. YYYY.',
      LL: 'D. MMMM YYYY.',
      LLL: 'D. MMMM YYYY. H:mm',
      LLLL: 'dddd, D. MMMM YYYY. H:mm' },

    calendar: {
      sameDay: '[danas u] LT',
      nextDay: '[sutra u] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[u] [nedelju] [u] LT';
          case 3:
            return '[u] [sredu] [u] LT';
          case 6:
            return '[u] [subotu] [u] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[u] dddd [u] LT';}

      },
      lastDay: '[juče u] LT',
      lastWeek: function lastWeek() {
        var lastWeekDays = [
        '[prošle] [nedelje] [u] LT',
        '[prošlog] [ponedeljka] [u] LT',
        '[prošlog] [utorka] [u] LT',
        '[prošle] [srede] [u] LT',
        '[prošlog] [četvrtka] [u] LT',
        '[prošlog] [petka] [u] LT',
        '[prošle] [subote] [u] LT'];

        return lastWeekDays[this.day()];
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'za %s',
      past: 'pre %s',
      s: 'nekoliko sekundi',
      ss: translator.translate,
      m: translator.translate,
      mm: translator.translate,
      h: translator.translate,
      hh: translator.translate,
      d: translator.translate,
      dd: translator.translate,
      M: translator.translate,
      MM: translator.translate,
      y: translator.translate,
      yy: translator.translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return sr;

});

/***/ }),
/* 132 */
/*!*******************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/sr-cyrl.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian Cyrillic [sr-cyrl]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
//! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var translator = {
    words: {
      //Different grammatical cases
      ss: ['секунда', 'секунде', 'секунди'],
      m: ['један минут', 'једног минута'],
      mm: ['минут', 'минута', 'минута'],
      h: ['један сат', 'једног сата'],
      hh: ['сат', 'сата', 'сати'],
      d: ['један дан', 'једног дана'],
      dd: ['дан', 'дана', 'дана'],
      M: ['један месец', 'једног месеца'],
      MM: ['месец', 'месеца', 'месеци'],
      y: ['једну годину', 'једне године'],
      yy: ['годину', 'године', 'година'] },

    correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
      if (
      number % 10 >= 1 &&
      number % 10 <= 4 && (
      number % 100 < 10 || number % 100 >= 20))
      {
        return number % 10 === 1 ? wordKey[0] : wordKey[1];
      }
      return wordKey[2];
    },
    translate: function translate(number, withoutSuffix, key, isFuture) {
      var wordKey = translator.words[key],
      word;

      if (key.length === 1) {
        // Nominativ
        if (key === 'y' && withoutSuffix) return 'једна година';
        return isFuture || withoutSuffix ? wordKey[0] : wordKey[1];
      }

      word = translator.correctGrammaticalCase(number, wordKey);
      // Nominativ
      if (key === 'yy' && withoutSuffix && word === 'годину') {
        return number + ' година';
      }

      return number + ' ' + word;
    } };


  var srCyrl = moment.defineLocale('sr-cyrl', {
    months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(
    '_'),

    monthsShort:
    'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
    monthsParseExact: true,
    weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
    weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
    weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'D. M. YYYY.',
      LL: 'D. MMMM YYYY.',
      LLL: 'D. MMMM YYYY. H:mm',
      LLLL: 'dddd, D. MMMM YYYY. H:mm' },

    calendar: {
      sameDay: '[данас у] LT',
      nextDay: '[сутра у] LT',
      nextWeek: function nextWeek() {
        switch (this.day()) {
          case 0:
            return '[у] [недељу] [у] LT';
          case 3:
            return '[у] [среду] [у] LT';
          case 6:
            return '[у] [суботу] [у] LT';
          case 1:
          case 2:
          case 4:
          case 5:
            return '[у] dddd [у] LT';}

      },
      lastDay: '[јуче у] LT',
      lastWeek: function lastWeek() {
        var lastWeekDays = [
        '[прошле] [недеље] [у] LT',
        '[прошлог] [понедељка] [у] LT',
        '[прошлог] [уторка] [у] LT',
        '[прошле] [среде] [у] LT',
        '[прошлог] [четвртка] [у] LT',
        '[прошлог] [петка] [у] LT',
        '[прошле] [суботе] [у] LT'];

        return lastWeekDays[this.day()];
      },
      sameElse: 'L' },

    relativeTime: {
      future: 'за %s',
      past: 'пре %s',
      s: 'неколико секунди',
      ss: translator.translate,
      m: translator.translate,
      mm: translator.translate,
      h: translator.translate,
      hh: translator.translate,
      d: translator.translate,
      dd: translator.translate,
      M: translator.translate,
      MM: translator.translate,
      y: translator.translate,
      yy: translator.translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 1st is the first week of the year.
    } });


  return srCyrl;

});

/***/ }),
/* 133 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ss.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : siSwati [ss]
//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ss = moment.defineLocale('ss', {
    months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
    '_'),

    monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
    weekdays:
    'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(
    '_'),

    weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
    weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Namuhla nga] LT',
      nextDay: '[Kusasa nga] LT',
      nextWeek: 'dddd [nga] LT',
      lastDay: '[Itolo nga] LT',
      lastWeek: 'dddd [leliphelile] [nga] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'nga %s',
      past: 'wenteka nga %s',
      s: 'emizuzwana lomcane',
      ss: '%d mzuzwana',
      m: 'umzuzu',
      mm: '%d emizuzu',
      h: 'lihora',
      hh: '%d emahora',
      d: 'lilanga',
      dd: '%d emalanga',
      M: 'inyanga',
      MM: '%d tinyanga',
      y: 'umnyaka',
      yy: '%d iminyaka' },

    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 11) {
        return 'ekuseni';
      } else if (hours < 15) {
        return 'emini';
      } else if (hours < 19) {
        return 'entsambama';
      } else {
        return 'ebusuku';
      }
    },
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'ekuseni') {
        return hour;
      } else if (meridiem === 'emini') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
        if (hour === 0) {
          return 0;
        }
        return hour + 12;
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal: '%d',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ss;

});

/***/ }),
/* 134 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/sv.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swedish [sv]
//! author : Jens Alm : https://github.com/ulmus

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var sv = moment.defineLocale('sv', {
    months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(
    '_'),

    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
    weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
    weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY [kl.] HH:mm',
      LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
      lll: 'D MMM YYYY HH:mm',
      llll: 'ddd D MMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Idag] LT',
      nextDay: '[Imorgon] LT',
      lastDay: '[Igår] LT',
      nextWeek: '[På] dddd LT',
      lastWeek: '[I] dddd[s] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'om %s',
      past: 'för %s sedan',
      s: 'några sekunder',
      ss: '%d sekunder',
      m: 'en minut',
      mm: '%d minuter',
      h: 'en timme',
      hh: '%d timmar',
      d: 'en dag',
      dd: '%d dagar',
      M: 'en månad',
      MM: '%d månader',
      y: 'ett år',
      yy: '%d år' },

    dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      ':e' :
      b === 1 ?
      ':a' :
      b === 2 ?
      ':a' :
      b === 3 ?
      ':e' :
      ':e';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return sv;

});

/***/ }),
/* 135 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/sw.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swahili [sw]
//! author : Fahad Kassim : https://github.com/fadsel

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var sw = moment.defineLocale('sw', {
    months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(
    '_'),

    monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
    weekdays:
    'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(
    '_'),

    weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
    weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'hh:mm A',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[leo saa] LT',
      nextDay: '[kesho saa] LT',
      nextWeek: '[wiki ijayo] dddd [saat] LT',
      lastDay: '[jana] LT',
      lastWeek: '[wiki iliyopita] dddd [saat] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s baadaye',
      past: 'tokea %s',
      s: 'hivi punde',
      ss: 'sekunde %d',
      m: 'dakika moja',
      mm: 'dakika %d',
      h: 'saa limoja',
      hh: 'masaa %d',
      d: 'siku moja',
      dd: 'siku %d',
      M: 'mwezi mmoja',
      MM: 'miezi %d',
      y: 'mwaka mmoja',
      yy: 'miaka %d' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return sw;

});

/***/ }),
/* 136 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ta.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tamil [ta]
//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var symbolMap = {
    1: '௧',
    2: '௨',
    3: '௩',
    4: '௪',
    5: '௫',
    6: '௬',
    7: '௭',
    8: '௮',
    9: '௯',
    0: '௦' },

  numberMap = {
    '௧': '1',
    '௨': '2',
    '௩': '3',
    '௪': '4',
    '௫': '5',
    '௬': '6',
    '௭': '7',
    '௮': '8',
    '௯': '9',
    '௦': '0' };


  var ta = moment.defineLocale('ta', {
    months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
    '_'),

    monthsShort:
    'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
    '_'),

    weekdays:
    'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(
    '_'),

    weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(
    '_'),

    weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, HH:mm',
      LLLL: 'dddd, D MMMM YYYY, HH:mm' },

    calendar: {
      sameDay: '[இன்று] LT',
      nextDay: '[நாளை] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[நேற்று] LT',
      lastWeek: '[கடந்த வாரம்] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s இல்',
      past: '%s முன்',
      s: 'ஒரு சில விநாடிகள்',
      ss: '%d விநாடிகள்',
      m: 'ஒரு நிமிடம்',
      mm: '%d நிமிடங்கள்',
      h: 'ஒரு மணி நேரம்',
      hh: '%d மணி நேரம்',
      d: 'ஒரு நாள்',
      dd: '%d நாட்கள்',
      M: 'ஒரு மாதம்',
      MM: '%d மாதங்கள்',
      y: 'ஒரு வருடம்',
      yy: '%d ஆண்டுகள்' },

    dayOfMonthOrdinalParse: /\d{1,2}வது/,
    ordinal: function ordinal(number) {
      return number + 'வது';
    },
    preparse: function preparse(string) {
      return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
        return numberMap[match];
      });
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      });
    },
    // refer http://ta.wikipedia.org/s/1er1
    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 2) {
        return ' யாமம்';
      } else if (hour < 6) {
        return ' வைகறை'; // வைகறை
      } else if (hour < 10) {
        return ' காலை'; // காலை
      } else if (hour < 14) {
        return ' நண்பகல்'; // நண்பகல்
      } else if (hour < 18) {
        return ' எற்பாடு'; // எற்பாடு
      } else if (hour < 22) {
        return ' மாலை'; // மாலை
      } else {
        return ' யாமம்';
      }
    },
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'யாமம்') {
        return hour < 2 ? hour : hour + 12;
      } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
        return hour;
      } else if (meridiem === 'நண்பகல்') {
        return hour >= 10 ? hour : hour + 12;
      } else {
        return hour + 12;
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return ta;

});

/***/ }),
/* 137 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/te.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Telugu [te]
//! author : Krishna Chaitanya Thota : https://github.com/kcthota

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var te = moment.defineLocale('te', {
    months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(
    '_'),

    monthsShort:
    'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(
    '_'),

    monthsParseExact: true,
    weekdays:
    'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(
    '_'),

    weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
    weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
    longDateFormat: {
      LT: 'A h:mm',
      LTS: 'A h:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY, A h:mm',
      LLLL: 'dddd, D MMMM YYYY, A h:mm' },

    calendar: {
      sameDay: '[నేడు] LT',
      nextDay: '[రేపు] LT',
      nextWeek: 'dddd, LT',
      lastDay: '[నిన్న] LT',
      lastWeek: '[గత] dddd, LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s లో',
      past: '%s క్రితం',
      s: 'కొన్ని క్షణాలు',
      ss: '%d సెకన్లు',
      m: 'ఒక నిమిషం',
      mm: '%d నిమిషాలు',
      h: 'ఒక గంట',
      hh: '%d గంటలు',
      d: 'ఒక రోజు',
      dd: '%d రోజులు',
      M: 'ఒక నెల',
      MM: '%d నెలలు',
      y: 'ఒక సంవత్సరం',
      yy: '%d సంవత్సరాలు' },

    dayOfMonthOrdinalParse: /\d{1,2}వ/,
    ordinal: '%dవ',
    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'రాత్రి') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'ఉదయం') {
        return hour;
      } else if (meridiem === 'మధ్యాహ్నం') {
        return hour >= 10 ? hour : hour + 12;
      } else if (meridiem === 'సాయంత్రం') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'రాత్రి';
      } else if (hour < 10) {
        return 'ఉదయం';
      } else if (hour < 17) {
        return 'మధ్యాహ్నం';
      } else if (hour < 20) {
        return 'సాయంత్రం';
      } else {
        return 'రాత్రి';
      }
    },
    week: {
      dow: 0, // Sunday is the first day of the week.
      doy: 6 // The week that contains Jan 6th is the first week of the year.
    } });


  return te;

});

/***/ }),
/* 138 */
/*!***************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/tet.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tetun Dili (East Timor) [tet]
//! author : Joshua Brooks : https://github.com/joshbrooks
//! author : Onorio De J. Afonso : https://github.com/marobo
//! author : Sonia Simoes : https://github.com/soniasimoes

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var tet = moment.defineLocale('tet', {
    months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(
    '_'),

    monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
    weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
    weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
    weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Ohin iha] LT',
      nextDay: '[Aban iha] LT',
      nextWeek: 'dddd [iha] LT',
      lastDay: '[Horiseik iha] LT',
      lastWeek: 'dddd [semana kotuk] [iha] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'iha %s',
      past: '%s liuba',
      s: 'segundu balun',
      ss: 'segundu %d',
      m: 'minutu ida',
      mm: 'minutu %d',
      h: 'oras ida',
      hh: 'oras %d',
      d: 'loron ida',
      dd: 'loron %d',
      M: 'fulan ida',
      MM: 'fulan %d',
      y: 'tinan ida',
      yy: 'tinan %d' },

    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return tet;

});

/***/ }),
/* 139 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/tg.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tajik [tg]
//! author : Orif N. Jr. : https://github.com/orif-jr

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    0: '-ум',
    1: '-ум',
    2: '-юм',
    3: '-юм',
    4: '-ум',
    5: '-ум',
    6: '-ум',
    7: '-ум',
    8: '-ум',
    9: '-ум',
    10: '-ум',
    12: '-ум',
    13: '-ум',
    20: '-ум',
    30: '-юм',
    40: '-ум',
    50: '-ум',
    60: '-ум',
    70: '-ум',
    80: '-ум',
    90: '-ум',
    100: '-ум' };


  var tg = moment.defineLocale('tg', {
    months: {
      format: 'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split(
      '_'),

      standalone:
      'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
      '_') },


    monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
    weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(
    '_'),

    weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
    weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Имрӯз соати] LT',
      nextDay: '[Фардо соати] LT',
      lastDay: '[Дирӯз соати] LT',
      nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',
      lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'баъди %s',
      past: '%s пеш',
      s: 'якчанд сония',
      m: 'як дақиқа',
      mm: '%d дақиқа',
      h: 'як соат',
      hh: '%d соат',
      d: 'як рӯз',
      dd: '%d рӯз',
      M: 'як моҳ',
      MM: '%d моҳ',
      y: 'як сол',
      yy: '%d сол' },

    meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === 'шаб') {
        return hour < 4 ? hour : hour + 12;
      } else if (meridiem === 'субҳ') {
        return hour;
      } else if (meridiem === 'рӯз') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === 'бегоҳ') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'шаб';
      } else if (hour < 11) {
        return 'субҳ';
      } else if (hour < 16) {
        return 'рӯз';
      } else if (hour < 19) {
        return 'бегоҳ';
      } else {
        return 'шаб';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
    ordinal: function ordinal(number) {
      var a = number % 10,
      b = number >= 100 ? 100 : null;
      return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 1th is the first week of the year.
    } });


  return tg;

});

/***/ }),
/* 140 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/th.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Thai [th]
//! author : Kridsada Thanabulpong : https://github.com/sirn

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var th = moment.defineLocale('th', {
    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(
    '_'),

    monthsShort:
    'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
    weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'H:mm',
      LTS: 'H:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY เวลา H:mm',
      LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm' },

    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
    isPM: function isPM(input) {
      return input === 'หลังเที่ยง';
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'ก่อนเที่ยง';
      } else {
        return 'หลังเที่ยง';
      }
    },
    calendar: {
      sameDay: '[วันนี้ เวลา] LT',
      nextDay: '[พรุ่งนี้ เวลา] LT',
      nextWeek: 'dddd[หน้า เวลา] LT',
      lastDay: '[เมื่อวานนี้ เวลา] LT',
      lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'อีก %s',
      past: '%sที่แล้ว',
      s: 'ไม่กี่วินาที',
      ss: '%d วินาที',
      m: '1 นาที',
      mm: '%d นาที',
      h: '1 ชั่วโมง',
      hh: '%d ชั่วโมง',
      d: '1 วัน',
      dd: '%d วัน',
      w: '1 สัปดาห์',
      ww: '%d สัปดาห์',
      M: '1 เดือน',
      MM: '%d เดือน',
      y: '1 ปี',
      yy: '%d ปี' } });



  return th;

});

/***/ }),
/* 141 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/tk.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkmen [tk]
//! author : Atamyrat Abdyrahmanov : https://github.com/atamyratabdy

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    1: "'inji",
    5: "'inji",
    8: "'inji",
    70: "'inji",
    80: "'inji",
    2: "'nji",
    7: "'nji",
    20: "'nji",
    50: "'nji",
    3: "'ünji",
    4: "'ünji",
    100: "'ünji",
    6: "'njy",
    9: "'unjy",
    10: "'unjy",
    30: "'unjy",
    60: "'ynjy",
    90: "'ynjy" };


  var tk = moment.defineLocale('tk', {
    months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(
    '_'),

    monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),
    weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(
    '_'),

    weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),
    weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[bugün sagat] LT',
      nextDay: '[ertir sagat] LT',
      nextWeek: '[indiki] dddd [sagat] LT',
      lastDay: '[düýn] LT',
      lastWeek: '[geçen] dddd [sagat] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s soň',
      past: '%s öň',
      s: 'birnäçe sekunt',
      m: 'bir minut',
      mm: '%d minut',
      h: 'bir sagat',
      hh: '%d sagat',
      d: 'bir gün',
      dd: '%d gün',
      M: 'bir aý',
      MM: '%d aý',
      y: 'bir ýyl',
      yy: '%d ýyl' },

    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'Do':
        case 'DD':
          return number;
        default:
          if (number === 0) {
            // special case for zero
            return number + "'unjy";
          }
          var a = number % 10,
          b = number % 100 - a,
          c = number >= 100 ? 100 : null;
          return number + (suffixes[a] || suffixes[b] || suffixes[c]);}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return tk;

});

/***/ }),
/* 142 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/tl-ph.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tagalog (Philippines) [tl-ph]
//! author : Dan Hagman : https://github.com/hagmandan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var tlPh = moment.defineLocale('tl-ph', {
    months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
    '_'),

    monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
    weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
    '_'),

    weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
    weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'MM/D/YYYY',
      LL: 'MMMM D, YYYY',
      LLL: 'MMMM D, YYYY HH:mm',
      LLLL: 'dddd, MMMM DD, YYYY HH:mm' },

    calendar: {
      sameDay: 'LT [ngayong araw]',
      nextDay: '[Bukas ng] LT',
      nextWeek: 'LT [sa susunod na] dddd',
      lastDay: 'LT [kahapon]',
      lastWeek: 'LT [noong nakaraang] dddd',
      sameElse: 'L' },

    relativeTime: {
      future: 'sa loob ng %s',
      past: '%s ang nakalipas',
      s: 'ilang segundo',
      ss: '%d segundo',
      m: 'isang minuto',
      mm: '%d minuto',
      h: 'isang oras',
      hh: '%d oras',
      d: 'isang araw',
      dd: '%d araw',
      M: 'isang buwan',
      MM: '%d buwan',
      y: 'isang taon',
      yy: '%d taon' },

    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal: function ordinal(number) {
      return number;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return tlPh;

});

/***/ }),
/* 143 */
/*!***************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/tlh.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Klingon [tlh]
//! author : Dominika Kruk : https://github.com/amaranthrose

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

  function translateFuture(output) {
    var time = output;
    time =
    output.indexOf('jaj') !== -1 ?
    time.slice(0, -3) + 'leS' :
    output.indexOf('jar') !== -1 ?
    time.slice(0, -3) + 'waQ' :
    output.indexOf('DIS') !== -1 ?
    time.slice(0, -3) + 'nem' :
    time + ' pIq';
    return time;
  }

  function translatePast(output) {
    var time = output;
    time =
    output.indexOf('jaj') !== -1 ?
    time.slice(0, -3) + 'Hu’' :
    output.indexOf('jar') !== -1 ?
    time.slice(0, -3) + 'wen' :
    output.indexOf('DIS') !== -1 ?
    time.slice(0, -3) + 'ben' :
    time + ' ret';
    return time;
  }

  function translate(number, withoutSuffix, string, isFuture) {
    var numberNoun = numberAsNoun(number);
    switch (string) {
      case 'ss':
        return numberNoun + ' lup';
      case 'mm':
        return numberNoun + ' tup';
      case 'hh':
        return numberNoun + ' rep';
      case 'dd':
        return numberNoun + ' jaj';
      case 'MM':
        return numberNoun + ' jar';
      case 'yy':
        return numberNoun + ' DIS';}

  }

  function numberAsNoun(number) {
    var hundred = Math.floor(number % 1000 / 100),
    ten = Math.floor(number % 100 / 10),
    one = number % 10,
    word = '';
    if (hundred > 0) {
      word += numbersNouns[hundred] + 'vatlh';
    }
    if (ten > 0) {
      word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';
    }
    if (one > 0) {
      word += (word !== '' ? ' ' : '') + numbersNouns[one];
    }
    return word === '' ? 'pagh' : word;
  }

  var tlh = moment.defineLocale('tlh', {
    months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(
    '_'),

    monthsShort:
    'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
    '_'),

    weekdaysShort:
    'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    weekdaysMin:
    'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[DaHjaj] LT',
      nextDay: '[wa’leS] LT',
      nextWeek: 'LLL',
      lastDay: '[wa’Hu’] LT',
      lastWeek: 'LLL',
      sameElse: 'L' },

    relativeTime: {
      future: translateFuture,
      past: translatePast,
      s: 'puS lup',
      ss: translate,
      m: 'wa’ tup',
      mm: translate,
      h: 'wa’ rep',
      hh: translate,
      d: 'wa’ jaj',
      dd: translate,
      M: 'wa’ jar',
      MM: translate,
      y: 'wa’ DIS',
      yy: translate },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return tlh;

});

/***/ }),
/* 144 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/tr.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkish [tr]
//! authors : Erhan Gundogan : https://github.com/erhangundogan,
//!           Burak Yiğit Kaya: https://github.com/BYK

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var suffixes = {
    1: "'inci",
    5: "'inci",
    8: "'inci",
    70: "'inci",
    80: "'inci",
    2: "'nci",
    7: "'nci",
    20: "'nci",
    50: "'nci",
    3: "'üncü",
    4: "'üncü",
    100: "'üncü",
    6: "'ncı",
    9: "'uncu",
    10: "'uncu",
    30: "'uncu",
    60: "'ıncı",
    90: "'ıncı" };


  var tr = moment.defineLocale('tr', {
    months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(
    '_'),

    monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
    weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(
    '_'),

    weekdaysShort: 'Paz_Pzt_Sal_Çar_Per_Cum_Cmt'.split('_'),
    weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 12) {
        return isLower ? 'öö' : 'ÖÖ';
      } else {
        return isLower ? 'ös' : 'ÖS';
      }
    },
    meridiemParse: /öö|ÖÖ|ös|ÖS/,
    isPM: function isPM(input) {
      return input === 'ös' || input === 'ÖS';
    },
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[bugün saat] LT',
      nextDay: '[yarın saat] LT',
      nextWeek: '[gelecek] dddd [saat] LT',
      lastDay: '[dün] LT',
      lastWeek: '[geçen] dddd [saat] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s sonra',
      past: '%s önce',
      s: 'birkaç saniye',
      ss: '%d saniye',
      m: 'bir dakika',
      mm: '%d dakika',
      h: 'bir saat',
      hh: '%d saat',
      d: 'bir gün',
      dd: '%d gün',
      w: 'bir hafta',
      ww: '%d hafta',
      M: 'bir ay',
      MM: '%d ay',
      y: 'bir yıl',
      yy: '%d yıl' },

    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'Do':
        case 'DD':
          return number;
        default:
          if (number === 0) {
            // special case for zero
            return number + "'ıncı";
          }
          var a = number % 10,
          b = number % 100 - a,
          c = number >= 100 ? 100 : null;
          return number + (suffixes[a] || suffixes[b] || suffixes[c]);}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return tr;

});

/***/ }),
/* 145 */
/*!***************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/tzl.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Talossan [tzl]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v
//! author : Iustì Canun

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
  // This is currently too difficult (maybe even impossible) to add.
  var tzl = moment.defineLocale('tzl', {
    months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(
    '_'),

    monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
    weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
    weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
    weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
    longDateFormat: {
      LT: 'HH.mm',
      LTS: 'HH.mm.ss',
      L: 'DD.MM.YYYY',
      LL: 'D. MMMM [dallas] YYYY',
      LLL: 'D. MMMM [dallas] YYYY HH.mm',
      LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm' },

    meridiemParse: /d\'o|d\'a/i,
    isPM: function isPM(input) {
      return "d'o" === input.toLowerCase();
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? "d'o" : "D'O";
      } else {
        return isLower ? "d'a" : "D'A";
      }
    },
    calendar: {
      sameDay: '[oxhi à] LT',
      nextDay: '[demà à] LT',
      nextWeek: 'dddd [à] LT',
      lastDay: '[ieiri à] LT',
      lastWeek: '[sür el] dddd [lasteu à] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'osprei %s',
      past: 'ja%s',
      s: processRelativeTime,
      ss: processRelativeTime,
      m: processRelativeTime,
      mm: processRelativeTime,
      h: processRelativeTime,
      hh: processRelativeTime,
      d: processRelativeTime,
      dd: processRelativeTime,
      M: processRelativeTime,
      MM: processRelativeTime,
      y: processRelativeTime,
      yy: processRelativeTime },

    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
      s: ['viensas secunds', "'iensas secunds"],
      ss: [number + ' secunds', '' + number + ' secunds'],
      m: ["'n míut", "'iens míut"],
      mm: [number + ' míuts', '' + number + ' míuts'],
      h: ["'n þora", "'iensa þora"],
      hh: [number + ' þoras', '' + number + ' þoras'],
      d: ["'n ziua", "'iensa ziua"],
      dd: [number + ' ziuas', '' + number + ' ziuas'],
      M: ["'n mes", "'iens mes"],
      MM: [number + ' mesen', '' + number + ' mesen'],
      y: ["'n ar", "'iens ar"],
      yy: [number + ' ars', '' + number + ' ars'] };

    return isFuture ?
    format[key][0] :
    withoutSuffix ?
    format[key][0] :
    format[key][1];
  }

  return tzl;

});

/***/ }),
/* 146 */
/*!***************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/tzm.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight [tzm]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var tzm = moment.defineLocale('tzm', {
    months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
    '_'),

    monthsShort:
    'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
    '_'),

    weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
      nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
      nextWeek: 'dddd [ⴴ] LT',
      lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
      lastWeek: 'dddd [ⴴ] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
      past: 'ⵢⴰⵏ %s',
      s: 'ⵉⵎⵉⴽ',
      ss: '%d ⵉⵎⵉⴽ',
      m: 'ⵎⵉⵏⵓⴺ',
      mm: '%d ⵎⵉⵏⵓⴺ',
      h: 'ⵙⴰⵄⴰ',
      hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
      d: 'ⴰⵙⵙ',
      dd: '%d oⵙⵙⴰⵏ',
      M: 'ⴰⵢoⵓⵔ',
      MM: '%d ⵉⵢⵢⵉⵔⵏ',
      y: 'ⴰⵙⴳⴰⵙ',
      yy: '%d ⵉⵙⴳⴰⵙⵏ' },

    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return tzm;

});

/***/ }),
/* 147 */
/*!********************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/tzm-latn.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight Latin [tzm-latn]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var tzmLatn = moment.defineLocale('tzm-latn', {
    months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
    '_'),

    monthsShort:
    'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
    '_'),

    weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[asdkh g] LT',
      nextDay: '[aska g] LT',
      nextWeek: 'dddd [g] LT',
      lastDay: '[assant g] LT',
      lastWeek: 'dddd [g] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'dadkh s yan %s',
      past: 'yan %s',
      s: 'imik',
      ss: '%d imik',
      m: 'minuḍ',
      mm: '%d minuḍ',
      h: 'saɛa',
      hh: '%d tassaɛin',
      d: 'ass',
      dd: '%d ossan',
      M: 'ayowr',
      MM: '%d iyyirn',
      y: 'asgas',
      yy: '%d isgasn' },

    week: {
      dow: 6, // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 12th is the first week of the year.
    } });


  return tzmLatn;

});

/***/ }),
/* 148 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ug-cn.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uyghur (China) [ug-cn]
//! author: boyaq : https://github.com/boyaq

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var ugCn = moment.defineLocale('ug-cn', {
    months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
    '_'),

    monthsShort:
    'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
    '_'),

    weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
    '_'),

    weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
    weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY-MM-DD',
      LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
      LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
      LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm' },

    meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (
      meridiem === 'يېرىم كېچە' ||
      meridiem === 'سەھەر' ||
      meridiem === 'چۈشتىن بۇرۇن')
      {
        return hour;
      } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
        return hour + 12;
      } else {
        return hour >= 11 ? hour : hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return 'يېرىم كېچە';
      } else if (hm < 900) {
        return 'سەھەر';
      } else if (hm < 1130) {
        return 'چۈشتىن بۇرۇن';
      } else if (hm < 1230) {
        return 'چۈش';
      } else if (hm < 1800) {
        return 'چۈشتىن كېيىن';
      } else {
        return 'كەچ';
      }
    },
    calendar: {
      sameDay: '[بۈگۈن سائەت] LT',
      nextDay: '[ئەتە سائەت] LT',
      nextWeek: '[كېلەركى] dddd [سائەت] LT',
      lastDay: '[تۆنۈگۈن] LT',
      lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s كېيىن',
      past: '%s بۇرۇن',
      s: 'نەچچە سېكونت',
      ss: '%d سېكونت',
      m: 'بىر مىنۇت',
      mm: '%d مىنۇت',
      h: 'بىر سائەت',
      hh: '%d سائەت',
      d: 'بىر كۈن',
      dd: '%d كۈن',
      M: 'بىر ئاي',
      MM: '%d ئاي',
      y: 'بىر يىل',
      yy: '%d يىل' },


    dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '-كۈنى';
        case 'w':
        case 'W':
          return number + '-ھەپتە';
        default:
          return number;}

    },
    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 1st is the first week of the year.
    } });


  return ugCn;

});

/***/ }),
/* 149 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/uk.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Ukrainian [uk]
//! author : zemlanin : https://github.com/zemlanin
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ?
    forms[0] :
    num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ?
    forms[1] :
    forms[2];
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
      ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
      mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
      hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
      dd: 'день_дні_днів',
      MM: 'місяць_місяці_місяців',
      yy: 'рік_роки_років' };

    if (key === 'm') {
      return withoutSuffix ? 'хвилина' : 'хвилину';
    } else if (key === 'h') {
      return withoutSuffix ? 'година' : 'годину';
    } else {
      return number + ' ' + plural(format[key], +number);
    }
  }
  function weekdaysCaseReplace(m, format) {
    var weekdays = {
      nominative:
      'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(
      '_'),

      accusative:
      'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(
      '_'),

      genitive:
      'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(
      '_') },


    nounCase;

    if (m === true) {
      return weekdays['nominative'].
      slice(1, 7).
      concat(weekdays['nominative'].slice(0, 1));
    }
    if (!m) {
      return weekdays['nominative'];
    }

    nounCase = /(\[[ВвУу]\]) ?dddd/.test(format) ?
    'accusative' :
    /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format) ?
    'genitive' :
    'nominative';
    return weekdays[nounCase][m.day()];
  }
  function processHoursFunction(str) {
    return function () {
      return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
    };
  }

  var uk = moment.defineLocale('uk', {
    months: {
      format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(
      '_'),

      standalone:
      'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(
      '_') },


    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(
    '_'),

    weekdays: weekdaysCaseReplace,
    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD.MM.YYYY',
      LL: 'D MMMM YYYY р.',
      LLL: 'D MMMM YYYY р., HH:mm',
      LLLL: 'dddd, D MMMM YYYY р., HH:mm' },

    calendar: {
      sameDay: processHoursFunction('[Сьогодні '),
      nextDay: processHoursFunction('[Завтра '),
      lastDay: processHoursFunction('[Вчора '),
      nextWeek: processHoursFunction('[У] dddd ['),
      lastWeek: function lastWeek() {
        switch (this.day()) {
          case 0:
          case 3:
          case 5:
          case 6:
            return processHoursFunction('[Минулої] dddd [').call(this);
          case 1:
          case 2:
          case 4:
            return processHoursFunction('[Минулого] dddd [').call(this);}

      },
      sameElse: 'L' },

    relativeTime: {
      future: 'за %s',
      past: '%s тому',
      s: 'декілька секунд',
      ss: relativeTimeWithPlural,
      m: relativeTimeWithPlural,
      mm: relativeTimeWithPlural,
      h: 'годину',
      hh: relativeTimeWithPlural,
      d: 'день',
      dd: relativeTimeWithPlural,
      M: 'місяць',
      MM: relativeTimeWithPlural,
      y: 'рік',
      yy: relativeTimeWithPlural },

    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
    meridiemParse: /ночі|ранку|дня|вечора/,
    isPM: function isPM(input) {
      return /^(дня|вечора)$/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 4) {
        return 'ночі';
      } else if (hour < 12) {
        return 'ранку';
      } else if (hour < 17) {
        return 'дня';
      } else {
        return 'вечора';
      }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'M':
        case 'd':
        case 'DDD':
        case 'w':
        case 'W':
          return number + '-й';
        case 'D':
          return number + '-го';
        default:
          return number;}

    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return uk;

});

/***/ }),
/* 150 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/ur.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Urdu [ur]
//! author : Sawood Alam : https://github.com/ibnesayeed
//! author : Zack : https://github.com/ZackVision

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var months = [
  'جنوری',
  'فروری',
  'مارچ',
  'اپریل',
  'مئی',
  'جون',
  'جولائی',
  'اگست',
  'ستمبر',
  'اکتوبر',
  'نومبر',
  'دسمبر'],

  days = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];

  var ur = moment.defineLocale('ur', {
    months: months,
    monthsShort: months,
    weekdays: days,
    weekdaysShort: days,
    weekdaysMin: days,
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd، D MMMM YYYY HH:mm' },

    meridiemParse: /صبح|شام/,
    isPM: function isPM(input) {
      return 'شام' === input;
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return 'صبح';
      }
      return 'شام';
    },
    calendar: {
      sameDay: '[آج بوقت] LT',
      nextDay: '[کل بوقت] LT',
      nextWeek: 'dddd [بوقت] LT',
      lastDay: '[گذشتہ روز بوقت] LT',
      lastWeek: '[گذشتہ] dddd [بوقت] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s بعد',
      past: '%s قبل',
      s: 'چند سیکنڈ',
      ss: '%d سیکنڈ',
      m: 'ایک منٹ',
      mm: '%d منٹ',
      h: 'ایک گھنٹہ',
      hh: '%d گھنٹے',
      d: 'ایک دن',
      dd: '%d دن',
      M: 'ایک ماہ',
      MM: '%d ماہ',
      y: 'ایک سال',
      yy: '%d سال' },

    preparse: function preparse(string) {
      return string.replace(/،/g, ',');
    },
    postformat: function postformat(string) {
      return string.replace(/,/g, '،');
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return ur;

});

/***/ }),
/* 151 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/uz.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek [uz]
//! author : Sardor Muminov : https://github.com/muminoff

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var uz = moment.defineLocale('uz', {
    months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
    '_'),

    monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
    weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
    weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
    weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'D MMMM YYYY, dddd HH:mm' },

    calendar: {
      sameDay: '[Бугун соат] LT [да]',
      nextDay: '[Эртага] LT [да]',
      nextWeek: 'dddd [куни соат] LT [да]',
      lastDay: '[Кеча соат] LT [да]',
      lastWeek: '[Утган] dddd [куни соат] LT [да]',
      sameElse: 'L' },

    relativeTime: {
      future: 'Якин %s ичида',
      past: 'Бир неча %s олдин',
      s: 'фурсат',
      ss: '%d фурсат',
      m: 'бир дакика',
      mm: '%d дакика',
      h: 'бир соат',
      hh: '%d соат',
      d: 'бир кун',
      dd: '%d кун',
      M: 'бир ой',
      MM: '%d ой',
      y: 'бир йил',
      yy: '%d йил' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 4th is the first week of the year.
    } });


  return uz;

});

/***/ }),
/* 152 */
/*!*******************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/uz-latn.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek Latin [uz-latn]
//! author : Rasulbek Mirzayev : github.com/Rasulbeeek

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var uzLatn = moment.defineLocale('uz-latn', {
    months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(
    '_'),

    monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
    weekdays:
    'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(
    '_'),

    weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
    weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'D MMMM YYYY, dddd HH:mm' },

    calendar: {
      sameDay: '[Bugun soat] LT [da]',
      nextDay: '[Ertaga] LT [da]',
      nextWeek: 'dddd [kuni soat] LT [da]',
      lastDay: '[Kecha soat] LT [da]',
      lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
      sameElse: 'L' },

    relativeTime: {
      future: 'Yaqin %s ichida',
      past: 'Bir necha %s oldin',
      s: 'soniya',
      ss: '%d soniya',
      m: 'bir daqiqa',
      mm: '%d daqiqa',
      h: 'bir soat',
      hh: '%d soat',
      d: 'bir kun',
      dd: '%d kun',
      M: 'bir oy',
      MM: '%d oy',
      y: 'bir yil',
      yy: '%d yil' },

    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 7 // The week that contains Jan 7th is the first week of the year.
    } });


  return uzLatn;

});

/***/ }),
/* 153 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/vi.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Vietnamese [vi]
//! author : Bang Nguyen : https://github.com/bangnk
//! author : Chien Kira : https://github.com/chienkira

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var vi = moment.defineLocale('vi', {
    months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(
    '_'),

    monthsShort:
    'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(
    '_'),

    monthsParseExact: true,
    weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(
    '_'),

    weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysParseExact: true,
    meridiemParse: /sa|ch/i,
    isPM: function isPM(input) {
      return /^ch$/i.test(input);
    },
    meridiem: function meridiem(hours, minutes, isLower) {
      if (hours < 12) {
        return isLower ? 'sa' : 'SA';
      } else {
        return isLower ? 'ch' : 'CH';
      }
    },
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM [năm] YYYY',
      LLL: 'D MMMM [năm] YYYY HH:mm',
      LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
      l: 'DD/M/YYYY',
      ll: 'D MMM YYYY',
      lll: 'D MMM YYYY HH:mm',
      llll: 'ddd, D MMM YYYY HH:mm' },

    calendar: {
      sameDay: '[Hôm nay lúc] LT',
      nextDay: '[Ngày mai lúc] LT',
      nextWeek: 'dddd [tuần tới lúc] LT',
      lastDay: '[Hôm qua lúc] LT',
      lastWeek: 'dddd [tuần trước lúc] LT',
      sameElse: 'L' },

    relativeTime: {
      future: '%s tới',
      past: '%s trước',
      s: 'vài giây',
      ss: '%d giây',
      m: 'một phút',
      mm: '%d phút',
      h: 'một giờ',
      hh: '%d giờ',
      d: 'một ngày',
      dd: '%d ngày',
      w: 'một tuần',
      ww: '%d tuần',
      M: 'một tháng',
      MM: '%d tháng',
      y: 'một năm',
      yy: '%d năm' },

    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal: function ordinal(number) {
      return number;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return vi;

});

/***/ }),
/* 154 */
/*!********************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/x-pseudo.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Pseudo [x-pseudo]
//! author : Andrew Hood : https://github.com/andrewhood125

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var xPseudo = moment.defineLocale('x-pseudo', {
    months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(
    '_'),

    monthsShort:
    'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(
    '_'),

    monthsParseExact: true,
    weekdays:
    'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(
    '_'),

    weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
    weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: 'HH:mm',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY HH:mm',
      LLLL: 'dddd, D MMMM YYYY HH:mm' },

    calendar: {
      sameDay: '[T~ódá~ý át] LT',
      nextDay: '[T~ómó~rró~w át] LT',
      nextWeek: 'dddd [át] LT',
      lastDay: '[Ý~ést~érdá~ý át] LT',
      lastWeek: '[L~ást] dddd [át] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'í~ñ %s',
      past: '%s á~gó',
      s: 'á ~féw ~sécó~ñds',
      ss: '%d s~écóñ~ds',
      m: 'á ~míñ~úté',
      mm: '%d m~íñú~tés',
      h: 'á~ñ hó~úr',
      hh: '%d h~óúrs',
      d: 'á ~dáý',
      dd: '%d d~áýs',
      M: 'á ~móñ~th',
      MM: '%d m~óñt~hs',
      y: 'á ~ýéár',
      yy: '%d ý~éárs' },

    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output =
      ~~(number % 100 / 10) === 1 ?
      'th' :
      b === 1 ?
      'st' :
      b === 2 ?
      'nd' :
      b === 3 ?
      'rd' :
      'th';
      return number + output;
    },
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return xPseudo;

});

/***/ }),
/* 155 */
/*!**************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/yo.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Yoruba Nigeria [yo]
//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var yo = moment.defineLocale('yo', {
    months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(
    '_'),

    monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
    weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
    weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
    weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
    longDateFormat: {
      LT: 'h:mm A',
      LTS: 'h:mm:ss A',
      L: 'DD/MM/YYYY',
      LL: 'D MMMM YYYY',
      LLL: 'D MMMM YYYY h:mm A',
      LLLL: 'dddd, D MMMM YYYY h:mm A' },

    calendar: {
      sameDay: '[Ònì ni] LT',
      nextDay: '[Ọ̀la ni] LT',
      nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
      lastDay: '[Àna ni] LT',
      lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
      sameElse: 'L' },

    relativeTime: {
      future: 'ní %s',
      past: '%s kọjá',
      s: 'ìsẹjú aayá die',
      ss: 'aayá %d',
      m: 'ìsẹjú kan',
      mm: 'ìsẹjú %d',
      h: 'wákati kan',
      hh: 'wákati %d',
      d: 'ọjọ́ kan',
      dd: 'ọjọ́ %d',
      M: 'osù kan',
      MM: 'osù %d',
      y: 'ọdún kan',
      yy: 'ọdún %d' },

    dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
    ordinal: 'ọjọ́ %d',
    week: {
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return yo;

});

/***/ }),
/* 156 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/zh-cn.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (China) [zh-cn]
//! author : suupic : https://github.com/suupic
//! author : Zeno Zeng : https://github.com/zenozeng
//! author : uu109 : https://github.com/uu109

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var zhCn = moment.defineLocale('zh-cn', {
    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
    '_'),

    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日Ah点mm分',
      LLLL: 'YYYY年M月D日ddddAh点mm分',
      l: 'YYYY/M/D',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日dddd HH:mm' },

    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
        return hour;
      } else if (meridiem === '下午' || meridiem === '晚上') {
        return hour + 12;
      } else {
        // '中午'
        return hour >= 11 ? hour : hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return '凌晨';
      } else if (hm < 900) {
        return '早上';
      } else if (hm < 1130) {
        return '上午';
      } else if (hm < 1230) {
        return '中午';
      } else if (hm < 1800) {
        return '下午';
      } else {
        return '晚上';
      }
    },
    calendar: {
      sameDay: '[今天]LT',
      nextDay: '[明天]LT',
      nextWeek: function nextWeek(now) {
        if (now.week() !== this.week()) {
          return '[下]dddLT';
        } else {
          return '[本]dddLT';
        }
      },
      lastDay: '[昨天]LT',
      lastWeek: function lastWeek(now) {
        if (this.week() !== now.week()) {
          return '[上]dddLT';
        } else {
          return '[本]dddLT';
        }
      },
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        case 'M':
          return number + '月';
        case 'w':
        case 'W':
          return number + '周';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s后',
      past: '%s前',
      s: '几秒',
      ss: '%d 秒',
      m: '1 分钟',
      mm: '%d 分钟',
      h: '1 小时',
      hh: '%d 小时',
      d: '1 天',
      dd: '%d 天',
      w: '1 周',
      ww: '%d 周',
      M: '1 个月',
      MM: '%d 个月',
      y: '1 年',
      yy: '%d 年' },

    week: {
      // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
      dow: 1, // Monday is the first day of the week.
      doy: 4 // The week that contains Jan 4th is the first week of the year.
    } });


  return zhCn;

});

/***/ }),
/* 157 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/zh-hk.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Hong Kong) [zh-hk]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Konstantin : https://github.com/skfd
//! author : Anthony : https://github.com/anthonylau

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var zhHk = moment.defineLocale('zh-hk', {
    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
    '_'),

    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日 HH:mm',
      LLLL: 'YYYY年M月D日dddd HH:mm',
      l: 'YYYY/M/D',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日dddd HH:mm' },

    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
        return hour;
      } else if (meridiem === '中午') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === '下午' || meridiem === '晚上') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return '凌晨';
      } else if (hm < 900) {
        return '早上';
      } else if (hm < 1200) {
        return '上午';
      } else if (hm === 1200) {
        return '中午';
      } else if (hm < 1800) {
        return '下午';
      } else {
        return '晚上';
      }
    },
    calendar: {
      sameDay: '[今天]LT',
      nextDay: '[明天]LT',
      nextWeek: '[下]ddddLT',
      lastDay: '[昨天]LT',
      lastWeek: '[上]ddddLT',
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        case 'M':
          return number + '月';
        case 'w':
        case 'W':
          return number + '週';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s後',
      past: '%s前',
      s: '幾秒',
      ss: '%d 秒',
      m: '1 分鐘',
      mm: '%d 分鐘',
      h: '1 小時',
      hh: '%d 小時',
      d: '1 天',
      dd: '%d 天',
      M: '1 個月',
      MM: '%d 個月',
      y: '1 年',
      yy: '%d 年' } });



  return zhHk;

});

/***/ }),
/* 158 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/zh-mo.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Macau) [zh-mo]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Tan Yuanhong : https://github.com/le0tan

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var zhMo = moment.defineLocale('zh-mo', {
    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
    '_'),

    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'DD/MM/YYYY',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日 HH:mm',
      LLLL: 'YYYY年M月D日dddd HH:mm',
      l: 'D/M/YYYY',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日dddd HH:mm' },

    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
        return hour;
      } else if (meridiem === '中午') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === '下午' || meridiem === '晚上') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return '凌晨';
      } else if (hm < 900) {
        return '早上';
      } else if (hm < 1130) {
        return '上午';
      } else if (hm < 1230) {
        return '中午';
      } else if (hm < 1800) {
        return '下午';
      } else {
        return '晚上';
      }
    },
    calendar: {
      sameDay: '[今天] LT',
      nextDay: '[明天] LT',
      nextWeek: '[下]dddd LT',
      lastDay: '[昨天] LT',
      lastWeek: '[上]dddd LT',
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        case 'M':
          return number + '月';
        case 'w':
        case 'W':
          return number + '週';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s內',
      past: '%s前',
      s: '幾秒',
      ss: '%d 秒',
      m: '1 分鐘',
      mm: '%d 分鐘',
      h: '1 小時',
      hh: '%d 小時',
      d: '1 天',
      dd: '%d 天',
      M: '1 個月',
      MM: '%d 個月',
      y: '1 年',
      yy: '%d 年' } });



  return zhMo;

});

/***/ }),
/* 159 */
/*!*****************************************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/node_modules/_moment@2.29.3@moment/locale/zh-tw.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Taiwan) [zh-tw]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris

;(function (global, factory) {
   true ? factory(__webpack_require__(/*! ../moment */ 22)) :
  undefined;
})(this, function (moment) {'use strict';

  //! moment.js locale configuration

  var zhTw = moment.defineLocale('zh-tw', {
    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
    '_'),

    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
    '_'),

    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
    longDateFormat: {
      LT: 'HH:mm',
      LTS: 'HH:mm:ss',
      L: 'YYYY/MM/DD',
      LL: 'YYYY年M月D日',
      LLL: 'YYYY年M月D日 HH:mm',
      LLLL: 'YYYY年M月D日dddd HH:mm',
      l: 'YYYY/M/D',
      ll: 'YYYY年M月D日',
      lll: 'YYYY年M月D日 HH:mm',
      llll: 'YYYY年M月D日dddd HH:mm' },

    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function meridiemHour(hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
        return hour;
      } else if (meridiem === '中午') {
        return hour >= 11 ? hour : hour + 12;
      } else if (meridiem === '下午' || meridiem === '晚上') {
        return hour + 12;
      }
    },
    meridiem: function meridiem(hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return '凌晨';
      } else if (hm < 900) {
        return '早上';
      } else if (hm < 1130) {
        return '上午';
      } else if (hm < 1230) {
        return '中午';
      } else if (hm < 1800) {
        return '下午';
      } else {
        return '晚上';
      }
    },
    calendar: {
      sameDay: '[今天] LT',
      nextDay: '[明天] LT',
      nextWeek: '[下]dddd LT',
      lastDay: '[昨天] LT',
      lastWeek: '[上]dddd LT',
      sameElse: 'L' },

    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal: function ordinal(number, period) {
      switch (period) {
        case 'd':
        case 'D':
        case 'DDD':
          return number + '日';
        case 'M':
          return number + '月';
        case 'w':
        case 'W':
          return number + '週';
        default:
          return number;}

    },
    relativeTime: {
      future: '%s後',
      past: '%s前',
      s: '幾秒',
      ss: '%d 秒',
      m: '1 分鐘',
      mm: '%d 分鐘',
      h: '1 小時',
      hh: '%d 小時',
      d: '1 天',
      dd: '%d 天',
      M: '1 個月',
      MM: '%d 個月',
      y: '1 年',
      yy: '%d 年' } });



  return zhTw;

});

/***/ }),
/* 160 */
/*!*******************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/dbbase.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;} // 操作数据库的增删改查的类
var db = wx.cloud.database();var

Dbadd = /*#__PURE__*/function () {"use strict";
  function Dbadd(collect) {var datas = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'db';_classCallCheck(this, Dbadd);
    this.collect = collect;
    this.datas = datas;
  }

  // get请求数据库
  _createClass(Dbadd, [{ key: "pullGet", value: function pullGet() {var _this = this;
      return new Promise(function (resolve, reject) {
        var base = db.collection(_this.collect);
        base.get().
        then(function (res) {
          resolve(res);
        }).
        catch(function (err) {
          reject(err);
        });
      });
    }

    // add提交到集合
  }, { key: "pullAdd", value: function pullAdd() {var _this2 = this;
      return new Promise(function (resolve, reject) {
        var base = db.collection(_this2.collect);
        base.add({
          data: _this2.datas }).

        then(function (res) {
          resolve(res);
        }).
        catch(function (err) {
          reject(err);
        });
      });
    }

    // where查询数据库集合
  }, { key: "pullWhere", value: function pullWhere(obj) {var _this3 = this;
      return new Promise(function (resolve, reject) {
        var base = db.collection(_this3.collect);
        base.where(obj).get().
        then(function (res) {
          resolve(res);
        }).
        catch(function (err) {
          reject(err);
        });
      });
    } }]);return Dbadd;}();


module.exports = Dbadd;

/***/ }),
/* 161 */
/*!*******************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/thesum.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;} //计算确诊，治愈，死亡：每一个总和
var _console = console,log = _console.log;var
Thesum = /*#__PURE__*/function () {"use strict";
  function Thesum(numberof) {_classCallCheck(this, Thesum);
    this.numberof = numberof;
  }_createClass(Thesum, [{ key: "Total", value: function Total()

    {var _this = this;
      return new Promise(function (resolve, reject) {
        //抽出diadata和时间重组一个数组
        var disgarr = _this.numberof.map(function (item) {
          var data = item.diadata;
          var times = item.time;
          return { data: data, times: times };
        });
        //取出value值
        var arrlist = [];
        disgarr.forEach(function (item) {
          for (var key in item.data) {
            arrlist.push(item.data[key]);
          }
        });
        //计算arrlist里的数字总和
        var numdata = 0;
        arrlist.forEach(function (item) {
          numdata += item;
        });
        //取出上传时间
        var statime = disgarr.map(function (item) {
          var times = item.times;
          return times;
        });
        var result = { statime: statime, numdata: numdata };
        resolve(result);
      });
    } }]);return Thesum;}();


module.exports = Thesum;

/***/ }),
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */
/*!************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/cssing/quill.core.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
    if(false) { var cssReload; }
  

/***/ }),
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */
/*!*********************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/checking.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.check = void 0; // 身份证正则
var idcardReg = /^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$|^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}([0-9]|X)$/;
// 手机号码
var ipho = /^1[3456789]\d{9}$/;

var check = function check(obj) {var

  names =










  obj.names,iphone = obj.iphone,IDcard = obj.IDcard,Gender = obj.Gender,date = obj.date,city = obj.city,province = obj.province,address = obj.address,lodge = obj.lodge,sympom = obj.sympom,agree = obj.agree;
  return new Promise(function (resolve, reject) {
    // 姓名
    if (names == '') {
      var _tip = '请填写姓名';
      resolve(_tip);
      return false;
    }
    // 手机号码
    if (!ipho.test(iphone)) {
      var _tip2 = '请填写正确的手机号码';
      resolve(_tip2);
      return false;
    }
    // 身份证
    if (!idcardReg.test(IDcard)) {
      var _tip3 = '请填写正确的身份证号码';
      resolve(_tip3);
      return false;
    }
    // 性别
    if (Gender == '') {
      var _tip4 = '请选择性别';
      resolve(_tip4);
      return false;
    }
    // 出生日期
    if (date == '') {
      var _tip5 = '请选择出生日期';
      resolve(_tip5);
      return false;
    }
    // 户籍
    if (city == '') {
      var _tip6 = '请选择户籍所在地';
      resolve(_tip6);
      return false;
    }
    // 居住省市
    if (province == '') {
      var _tip7 = '请选择居住省市';
      resolve(_tip7);
      return false;
    }
    // 详细地址
    if (address == '') {
      var _tip8 = '请填写详细地址';
      resolve(_tip8);
      return false;
    }
    // 是否常住辽宁
    if (lodge == '') {
      var _tip9 = '请选择是否常住辽宁';
      resolve(_tip9);
      return false;
    }
    // 是否出现症状
    if (sympom.length == 0) {
      var _tip10 = '请选择是否出现症状';
      resolve(_tip10);
      return false;
    }
    // 勾选，同意
    if (agree.length == 0) {
      var _tip11 = '请勾选本申报所列事项';
      resolve(_tip11);
      return false;
    }
    // 全部通过
    var tip = 'SUCCESS';
    resolve(tip);

  });
};exports.check = check;

/***/ }),
/* 196 */
/*!*******************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/upload.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;} // 处理上传图片
var Upload = /*#__PURE__*/function () {"use strict";
  function Upload() {var arg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '1';_classCallCheck(this, Upload);
    this.arg = arg;
  }

  // 上传本地相册的图片
  _createClass(Upload, [{ key: "upLoadimg", value: function upLoadimg() {
      return new Promise(function (resolve, reject) {
        wx.chooseImage({
          count: 1,
          sizeType: ['compressed'],
          sourceType: ['album', 'camera'],
          success: function success(res) {
            resolve(res.tempFilePaths[0]);
          },
          fail: function fail(err) {
            reject(err);
          } });

      });
    }

    // 上传图片到云储存
  }, { key: "collEctimg", value: function collEctimg(img) {
      return new Promise(function (resolve, reject) {
        // 为防止同名文件产生，需更改图片命名
        var imgion = img.lastIndexOf('.');
        var eximg = img.slice(imgion);
        // 时间戳，随机数
        var cloudpath = "".concat(Date.now(), "-").concat(Math.floor(Math.random(0, 1) * 10000000)).concat(eximg);
        wx.cloud.uploadFile({
          cloudPath: 'idcard/' + cloudpath,
          filePath: img // 文件路径
        }).then(function (res) {
          resolve(res.fileID);
        }).catch(function (error) {
          reject(error);
        });
      });
    }

    // 换取htpps的图片地址
  }, { key: "httpImg", value: function httpImg(fid) {
      return new Promise(function (resolve, reject) {
        wx.cloud.getTempFileURL({
          fileList: [{
            fileID: fid }] }).

        then(function (res) {
          resolve(res.fileList[0].tempFileURL);
        }).catch(function (error) {
          reject(error);
        });
      });
    }

    // 调用身份证识别的云函数
  }, { key: "aiClound", value: function aiClound(cloundimg) {
      return new Promise(function (resolve, reject) {
        wx.cloud.callFunction({
          // 要调用的云函数名称
          name: 'xinguan-idcard',
          // 传递给云函数的event参数
          data: { cardimg: cloundimg } }).
        then(function (res) {
          resolve(res);
        }).catch(function (err) {
          reject(err);
        });
      });
    } }]);return Upload;}();


module.exports = Upload;

/***/ }),
/* 197 */
/*!********************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/errdata.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;} // 公用提示
var Errdatas = /*#__PURE__*/function () {"use strict";
  function Errdatas() {var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '识别失败,请上传正确的身份证重试';_classCallCheck(this, Errdatas);
    this.msg = msg;
  }_createClass(Errdatas, [{ key: "errlist", value: function errlist()

    {
      wx.showToast({
        icon: 'none',
        title: this.msg,
        duration: 2000 });

    } }]);return Errdatas;}();


module.exports = Errdatas;

/***/ }),
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */
/*!**********************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/components/u-charts/u-charts.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {/*
 * uCharts v1.9.3.20190922
 * uni-app平台高性能跨全端图表，支持H5、APP、小程序（微信/支付宝/百度/头条/QQ/360）
 * Copyright (c) 2019 QIUN秋云 https://www.ucharts.cn All rights reserved.
 * Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
 * 
 * uCharts官方网站
 * https://www.uCharts.cn
 * 
 * 开源地址:
 * https://gitee.com/uCharts/uCharts
 * 
 * uni-app插件市场地址：
 * http://ext.dcloud.net.cn/plugin?id=271
 * 
 */



var config = {
  yAxisWidth: 15,
  yAxisSplit: 5,
  xAxisHeight: 15,
  xAxisLineHeight: 15,
  legendHeight: 15,
  yAxisTitleWidth: 15,
  padding: [10, 10, 10, 10],
  pixelRatio: 1,
  rotate: false,
  columePadding: 3,
  fontSize: 13,
  //dataPointShape: ['diamond', 'circle', 'triangle', 'rect'],
  dataPointShape: ['circle', 'circle', 'circle', 'circle'],
  colors: ['#1890ff', '#2fc25b', '#facc14', '#f04864', '#8543e0', '#90ed7d'],
  pieChartLinePadding: 15,
  pieChartTextPadding: 5,
  xAxisTextPadding: 3,
  titleColor: '#333333',
  titleFontSize: 20,
  subtitleColor: '#999999',
  subtitleFontSize: 15,
  toolTipPadding: 3,
  toolTipBackground: '#000000',
  toolTipOpacity: 0.7,
  toolTipLineHeight: 20,
  radarLabelTextMargin: 15,
  gaugeLabelTextMargin: 15 };


var assign = function assign(target) {for (var _len2 = arguments.length, varArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {varArgs[_key2 - 1] = arguments[_key2];}
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }
  if (!varArgs || varArgs.length <= 0) {
    return target;
  }
  // 深度合并对象
  function deepAssign(obj1, obj2) {
    for (var key in obj2) {
      obj1[key] = obj1[key] && obj1[key].toString() === "[object Object]" ?
      deepAssign(obj1[key], obj2[key]) : obj1[key] = obj2[key];
    }
    return obj1;
  }

  varArgs.forEach(function (val) {
    target = deepAssign(target, val);
  });
  return target;
};

var util = {
  toFixed: function toFixed(num, limit) {
    limit = limit || 2;
    if (this.isFloat(num)) {
      num = num.toFixed(limit);
    }
    return num;
  },
  isFloat: function isFloat(num) {
    return num % 1 !== 0;
  },
  approximatelyEqual: function approximatelyEqual(num1, num2) {
    return Math.abs(num1 - num2) < 1e-10;
  },
  isSameSign: function isSameSign(num1, num2) {
    return Math.abs(num1) === num1 && Math.abs(num2) === num2 || Math.abs(num1) !== num1 && Math.abs(num2) !== num2;
  },
  isSameXCoordinateArea: function isSameXCoordinateArea(p1, p2) {
    return this.isSameSign(p1.x, p2.x);
  },
  isCollision: function isCollision(obj1, obj2) {
    obj1.end = {};
    obj1.end.x = obj1.start.x + obj1.width;
    obj1.end.y = obj1.start.y - obj1.height;
    obj2.end = {};
    obj2.end.x = obj2.start.x + obj2.width;
    obj2.end.y = obj2.start.y - obj2.height;
    var flag = obj2.start.x > obj1.end.x || obj2.end.x < obj1.start.x || obj2.end.y > obj1.start.y || obj2.start.y < obj1.end.y;
    return !flag;
  } };


//兼容H5点击事件
function getH5Offset(e) {
  e.mp = {
    changedTouches: [] };

  e.mp.changedTouches.push({
    x: e.offsetX,
    y: e.offsetY });

  return e;
}

// hex 转 rgba
function hexToRgb(hexValue, opc) {
  var rgx = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
  var hex = hexValue.replace(rgx, function (m, r, g, b) {
    return r + r + g + g + b + b;
  });
  var rgb = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  var r = parseInt(rgb[1], 16);
  var g = parseInt(rgb[2], 16);
  var b = parseInt(rgb[3], 16);
  return 'rgba(' + r + ',' + g + ',' + b + ',' + opc + ')';
}

function findRange(num, type, limit) {
  if (isNaN(num)) {
    throw new Error('[uCharts] unvalid series data!');
  }
  limit = limit || 10;
  type = type ? type : 'upper';
  var multiple = 1;
  while (limit < 1) {
    limit *= 10;
    multiple *= 10;
  }
  if (type === 'upper') {
    num = Math.ceil(num * multiple);
  } else {
    num = Math.floor(num * multiple);
  }
  while (num % limit !== 0) {
    if (type === 'upper') {
      num++;
    } else {
      num--;
    }
  }
  return num / multiple;
}

function calCandleMA(dayArr, nameArr, colorArr, kdata) {
  var seriesTemp = [];
  for (var k = 0; k < dayArr.length; k++) {
    var seriesItem = {
      data: [],
      name: nameArr[k],
      color: colorArr[k] };

    for (var i = 0, len = kdata.length; i < len; i++) {
      if (i < dayArr[k]) {
        seriesItem.data.push(null);
        continue;
      }
      var sum = 0;
      for (var j = 0; j < dayArr[k]; j++) {
        sum += kdata[i - j][1];
      }
      seriesItem.data.push(+(sum / dayArr[k]).toFixed(3));
    }
    seriesTemp.push(seriesItem);
  }
  return seriesTemp;
}

function calValidDistance(self, distance, chartData, config, opts) {
  var dataChartAreaWidth = opts.width - opts.area[1] - opts.area[3];
  var dataChartWidth = chartData.eachSpacing * (opts.chartData.xAxisData.xAxisPoints.length - 1);
  var validDistance = distance;
  if (distance >= 0) {
    validDistance = 0;
    self.event.trigger('scrollLeft');
  } else if (Math.abs(distance) >= dataChartWidth - dataChartAreaWidth) {
    validDistance = dataChartAreaWidth - dataChartWidth;
    self.event.trigger('scrollRight');
  }
  return validDistance;
}

function isInAngleRange(angle, startAngle, endAngle) {
  function adjust(angle) {
    while (angle < 0) {
      angle += 2 * Math.PI;
    }
    while (angle > 2 * Math.PI) {
      angle -= 2 * Math.PI;
    }
    return angle;
  }
  angle = adjust(angle);
  startAngle = adjust(startAngle);
  endAngle = adjust(endAngle);
  if (startAngle > endAngle) {
    endAngle += 2 * Math.PI;
    if (angle < startAngle) {
      angle += 2 * Math.PI;
    }
  }
  return angle >= startAngle && angle <= endAngle;
}

function calRotateTranslate(x, y, h) {
  var xv = x;
  var yv = h - y;
  var transX = xv + (h - yv - xv) / Math.sqrt(2);
  transX *= -1;
  var transY = (h - yv) * (Math.sqrt(2) - 1) - (h - yv - xv) / Math.sqrt(2);
  return {
    transX: transX,
    transY: transY };

}

function createCurveControlPoints(points, i) {

  function isNotMiddlePoint(points, i) {
    if (points[i - 1] && points[i + 1]) {
      return points[i].y >= Math.max(points[i - 1].y, points[i + 1].y) || points[i].y <= Math.min(points[i - 1].y, points[i + 1].y);
    } else {
      return false;
    }
  }
  function isNotMiddlePointX(points, i) {
    if (points[i - 1] && points[i + 1]) {
      return points[i].x >= Math.max(points[i - 1].x, points[i + 1].x) || points[i].x <= Math.min(points[i - 1].x, points[i + 1].x);
    } else {
      return false;
    }
  }
  var a = 0.2;
  var b = 0.2;
  var pAx = null;
  var pAy = null;
  var pBx = null;
  var pBy = null;
  if (i < 1) {
    pAx = points[0].x + (points[1].x - points[0].x) * a;
    pAy = points[0].y + (points[1].y - points[0].y) * a;
  } else {
    pAx = points[i].x + (points[i + 1].x - points[i - 1].x) * a;
    pAy = points[i].y + (points[i + 1].y - points[i - 1].y) * a;
  }

  if (i > points.length - 3) {
    var last = points.length - 1;
    pBx = points[last].x - (points[last].x - points[last - 1].x) * b;
    pBy = points[last].y - (points[last].y - points[last - 1].y) * b;
  } else {
    pBx = points[i + 1].x - (points[i + 2].x - points[i].x) * b;
    pBy = points[i + 1].y - (points[i + 2].y - points[i].y) * b;
  }
  if (isNotMiddlePoint(points, i + 1)) {
    pBy = points[i + 1].y;
  }
  if (isNotMiddlePoint(points, i)) {
    pAy = points[i].y;
  }
  if (isNotMiddlePointX(points, i + 1)) {
    pBx = points[i + 1].x;
  }
  if (isNotMiddlePointX(points, i)) {
    pAx = points[i].x;
  }
  if (pAy >= Math.max(points[i].y, points[i + 1].y) || pAy <= Math.min(points[i].y, points[i + 1].y)) {
    pAy = points[i].y;
  }
  if (pBy >= Math.max(points[i].y, points[i + 1].y) || pBy <= Math.min(points[i].y, points[i + 1].y)) {
    pBy = points[i + 1].y;
  }
  if (pAx >= Math.max(points[i].x, points[i + 1].x) || pAx <= Math.min(points[i].x, points[i + 1].x)) {
    pAx = points[i].x;
  }
  if (pBx >= Math.max(points[i].x, points[i + 1].x) || pBx <= Math.min(points[i].x, points[i + 1].x)) {
    pBx = points[i + 1].x;
  }
  return {
    ctrA: {
      x: pAx,
      y: pAy },

    ctrB: {
      x: pBx,
      y: pBy } };


}

function convertCoordinateOrigin(x, y, center) {
  return {
    x: center.x + x,
    y: center.y - y };

}

function avoidCollision(obj, target) {
  if (target) {
    // is collision test
    while (util.isCollision(obj, target)) {
      if (obj.start.x > 0) {
        obj.start.y--;
      } else if (obj.start.x < 0) {
        obj.start.y++;
      } else {
        if (obj.start.y > 0) {
          obj.start.y++;
        } else {
          obj.start.y--;
        }
      }
    }
  }
  return obj;
}

function fillSeries(series, opts, config) {
  var index = 0;
  return series.map(function (item) {
    if (!item.color) {
      item.color = config.colors[index];
      index = (index + 1) % config.colors.length;
    }
    if (!item.index) {
      item.index = 0;
    }
    if (!item.type) {
      item.type = opts.type;
    }
    if (typeof item.show == "undefined") {
      item.show = true;
    }
    if (!item.type) {
      item.type = opts.type;
    }
    if (!item.pointShape) {
      item.pointShape = "circle";
    }
    if (!item.legendShape) {
      switch (item.type) {
        case 'line':
          item.legendShape = "line";
          break;
        case 'column':
          item.legendShape = "rect";
          break;
        case 'area':
          item.legendShape = "triangle";
          break;
        default:
          item.legendShape = "circle";}

    }
    return item;
  });
}

function getDataRange(minData, maxData) {
  var limit = 0;
  var range = maxData - minData;
  if (range >= 10000) {
    limit = 1000;
  } else if (range >= 1000) {
    limit = 100;
  } else if (range >= 100) {
    limit = 10;
  } else if (range >= 10) {
    limit = 5;
  } else if (range >= 1) {
    limit = 1;
  } else if (range >= 0.1) {
    limit = 0.1;
  } else if (range >= 0.01) {
    limit = 0.01;
  } else if (range >= 0.001) {
    limit = 0.001;
  } else if (range >= 0.0001) {
    limit = 0.0001;
  } else if (range >= 0.00001) {
    limit = 0.00001;
  } else {
    limit = 0.000001;
  }
  return {
    minRange: findRange(minData, 'lower', limit),
    maxRange: findRange(maxData, 'upper', limit) };

}

function measureText(text) {
  var fontSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.fontSize;
  text = String(text);
  var text = text.split('');
  var width = 0;
  for (var i = 0; i < text.length; i++) {
    var item = text[i];
    if (/[a-zA-Z]/.test(item)) {
      width += 7;
    } else if (/[0-9]/.test(item)) {
      width += 5.5;
    } else if (/\./.test(item)) {
      width += 2.7;
    } else if (/-/.test(item)) {
      width += 3.25;
    } else if (/[\u4e00-\u9fa5]/.test(item)) {
      width += 10;
    } else if (/\(|\)/.test(item)) {
      width += 3.73;
    } else if (/\s/.test(item)) {
      width += 2.5;
    } else if (/%/.test(item)) {
      width += 8;
    } else {
      width += 10;
    }
  }
  return width * fontSize / 10;
}

function dataCombine(series) {
  return series.reduce(function (a, b) {
    return (a.data ? a.data : a).concat(b.data);
  }, []);
}

function dataCombineStack(series, len) {
  var sum = new Array(len);
  for (var j = 0; j < sum.length; j++) {
    sum[j] = 0;
  }
  for (var i = 0; i < series.length; i++) {
    for (var j = 0; j < sum.length; j++) {
      sum[j] += series[i].data[j];
    }
  }
  return series.reduce(function (a, b) {
    return (a.data ? a.data : a).concat(b.data).concat(sum);
  }, []);
}

function getTouches(touches, opts, e) {
  var x, y;
  if (touches.clientX) {
    if (opts.rotate) {
      y = opts.height - touches.clientX * opts.pixelRatio;
      x = (touches.pageY - e.currentTarget.offsetTop - opts.height / opts.pixelRatio / 2 * (opts.pixelRatio - 1)) *
      opts.pixelRatio;
    } else {
      x = touches.clientX * opts.pixelRatio;
      y = (touches.pageY - e.currentTarget.offsetTop - opts.height / opts.pixelRatio / 2 * (opts.pixelRatio - 1)) *
      opts.pixelRatio;
    }
  } else {
    if (opts.rotate) {
      y = opts.height - touches.x * opts.pixelRatio;
      x = touches.y * opts.pixelRatio;
    } else {
      x = touches.x * opts.pixelRatio;
      y = touches.y * opts.pixelRatio;
    }
  }
  return {
    x: x,
    y: y };

}

function getSeriesDataItem(series, index) {
  var data = [];
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    if (item.data[index] !== null && typeof item.data[index] !== 'undefined' && item.show) {
      var seriesItem = {};
      seriesItem.color = item.color;
      seriesItem.type = item.type;
      seriesItem.style = item.style;
      seriesItem.pointShape = item.pointShape;
      seriesItem.disableLegend = item.disableLegend;
      seriesItem.name = item.name;
      seriesItem.show = item.show;
      seriesItem.data = item.format ? item.format(item.data[index]) : item.data[index];
      data.push(seriesItem);
    }
  }
  return data;
}

function getMaxTextListLength(list) {
  var lengthList = list.map(function (item) {
    return measureText(item);
  });
  return Math.max.apply(null, lengthList);
}

function getRadarCoordinateSeries(length) {
  var eachAngle = 2 * Math.PI / length;
  var CoordinateSeries = [];
  for (var i = 0; i < length; i++) {
    CoordinateSeries.push(eachAngle * i);
  }

  return CoordinateSeries.map(function (item) {
    return -1 * item + Math.PI / 2;
  });
}

function getToolTipData(seriesData, calPoints, index, categories) {
  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

  var textList = seriesData.map(function (item) {
    var titleText = [];
    if (categories) {
      titleText = categories;
    } else {
      titleText = item.data;
    }
    return {
      text: option.format ? option.format(item, titleText[index]) : item.name + ': ' + item.data,
      color: item.color };

  });
  var validCalPoints = [];
  var offset = {
    x: 0,
    y: 0 };

  for (var i = 0; i < calPoints.length; i++) {
    var points = calPoints[i];
    if (typeof points[index] !== 'undefined' && points[index] !== null) {
      validCalPoints.push(points[index]);
    }
  }
  for (var _i = 0; _i < validCalPoints.length; _i++) {
    var item = validCalPoints[_i];
    offset.x = Math.round(item.x);
    offset.y += item.y;
  }
  offset.y /= validCalPoints.length;
  return {
    textList: textList,
    offset: offset };

}

function getMixToolTipData(seriesData, calPoints, index, categories) {
  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var textList = seriesData.map(function (item) {
    return {
      text: option.format ? option.format(item, categories[index]) : item.name + ': ' + item.data,
      color: item.color,
      disableLegend: item.disableLegend ? true : false };

  });
  textList = textList.filter(function (item) {
    if (item.disableLegend !== true) {
      return item;
    }
  });
  var validCalPoints = [];
  var offset = {
    x: 0,
    y: 0 };

  for (var i = 0; i < calPoints.length; i++) {
    var points = calPoints[i];
    if (typeof points[index] !== 'undefined' && points[index] !== null) {
      validCalPoints.push(points[index]);
    }
  }
  for (var _i2 = 0; _i2 < validCalPoints.length; _i2++) {
    var item = validCalPoints[_i2];
    offset.x = Math.round(item.x);
    offset.y += item.y;
  }
  offset.y /= validCalPoints.length;
  return {
    textList: textList,
    offset: offset };

}

function getCandleToolTipData(series, seriesData, calPoints, index, categories, extra) {
  var option = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};
  var upColor = extra.color.upFill;
  var downColor = extra.color.downFill;
  //颜色顺序为开盘，收盘，最低，最高
  var color = [upColor, upColor, downColor, upColor];
  var textList = [];
  var text0 = {
    text: categories[index],
    color: null };

  textList.push(text0);
  seriesData.map(function (item) {
    if (index == 0 && item.data[1] - item.data[0] < 0) {
      color[1] = downColor;
    } else {
      if (item.data[0] < series[index - 1][1]) {
        color[0] = downColor;
      }
      if (item.data[1] < item.data[0]) {
        color[1] = downColor;
      }
      if (item.data[2] > series[index - 1][1]) {
        color[2] = upColor;
      }
      if (item.data[3] < series[index - 1][1]) {
        color[3] = downColor;
      }
    }
    var text1 = {
      text: '开盘：' + item.data[0],
      color: color[0] };

    var text2 = {
      text: '收盘：' + item.data[1],
      color: color[1] };

    var text3 = {
      text: '最低：' + item.data[2],
      color: color[2] };

    var text4 = {
      text: '最高：' + item.data[3],
      color: color[3] };

    textList.push(text1, text2, text3, text4);
  });
  var validCalPoints = [];
  var offset = {
    x: 0,
    y: 0 };

  for (var i = 0; i < calPoints.length; i++) {
    var points = calPoints[i];
    if (typeof points[index] !== 'undefined' && points[index] !== null) {
      validCalPoints.push(points[index]);
    }
  }
  offset.x = Math.round(validCalPoints[0][0].x);
  return {
    textList: textList,
    offset: offset };

}

function filterSeries(series) {
  var tempSeries = [];
  for (var i = 0; i < series.length; i++) {
    if (series[i].show == true) {
      tempSeries.push(series[i]);
    }
  }
  return tempSeries;
}

function findCurrentIndex(currentPoints, calPoints, opts, config) {
  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
  var currentIndex = -1;
  var spacing = opts.chartData.eachSpacing / 2;
  var xAxisPoints = [];
  if (calPoints.length > 0) {
    if (opts.type == 'candle') {
      for (var i = 0; i < calPoints[0].length; i++) {
        xAxisPoints.push(calPoints[0][i][0].x);
      }
    } else {
      for (var _i3 = 0; _i3 < calPoints[0].length; _i3++) {
        xAxisPoints.push(calPoints[0][_i3].x);
      }
    }
    if ((opts.type == 'line' || opts.type == 'area') && opts.xAxis.boundaryGap == 'justify') {
      spacing = opts.chartData.eachSpacing / 2;
    }
    if (!opts.categories) {
      spacing = 0;
    }
    if (isInExactChartArea(currentPoints, opts, config)) {
      xAxisPoints.forEach(function (item, index) {
        if (currentPoints.x + offset + spacing > item) {
          currentIndex = index;
        }
      });
    }
  }
  return currentIndex;
}

function findLegendIndex(currentPoints, legendData, opts) {
  var currentIndex = -1;
  if (isInExactLegendArea(currentPoints, legendData.area)) {
    var points = legendData.points;
    var index = -1;
    for (var i = 0, len = points.length; i < len; i++) {
      var item = points[i];
      for (var j = 0; j < item.length; j++) {
        index += 1;
        var area = item[j]['area'];
        if (currentPoints.x > area[0] && currentPoints.x < area[2] && currentPoints.y > area[1] && currentPoints.y < area[3]) {
          currentIndex = index;
          break;
        }
      }
    }
    return currentIndex;
  }
  return currentIndex;
}

function isInExactLegendArea(currentPoints, area) {
  return currentPoints.x > area.start.x && currentPoints.x < area.end.x && currentPoints.y > area.start.y &&
  currentPoints.y < area.end.y;
}

function isInExactChartArea(currentPoints, opts, config) {
  return currentPoints.x <= opts.width - opts.area[1] + 10 && currentPoints.x >= opts.area[3] - 10 && currentPoints.y >= opts.area[0] && currentPoints.y <= opts.height - opts.area[2];
}

function findRadarChartCurrentIndex(currentPoints, radarData, count) {
  var eachAngleArea = 2 * Math.PI / count;
  var currentIndex = -1;
  if (isInExactPieChartArea(currentPoints, radarData.center, radarData.radius)) {
    var fixAngle = function fixAngle(angle) {
      if (angle < 0) {
        angle += 2 * Math.PI;
      }
      if (angle > 2 * Math.PI) {
        angle -= 2 * Math.PI;
      }
      return angle;
    };

    var angle = Math.atan2(radarData.center.y - currentPoints.y, currentPoints.x - radarData.center.x);
    angle = -1 * angle;
    if (angle < 0) {
      angle += 2 * Math.PI;
    }

    var angleList = radarData.angleList.map(function (item) {
      item = fixAngle(-1 * item);

      return item;
    });

    angleList.forEach(function (item, index) {
      var rangeStart = fixAngle(item - eachAngleArea / 2);
      var rangeEnd = fixAngle(item + eachAngleArea / 2);
      if (rangeEnd < rangeStart) {
        rangeEnd += 2 * Math.PI;
      }
      if (angle >= rangeStart && angle <= rangeEnd || angle + 2 * Math.PI >= rangeStart && angle + 2 * Math.PI <=
      rangeEnd) {
        currentIndex = index;
      }
    });
  }

  return currentIndex;
}

function findFunnelChartCurrentIndex(currentPoints, funnelData) {
  var currentIndex = -1;
  for (var i = 0, len = funnelData.series.length; i < len; i++) {
    var item = funnelData.series[i];
    if (currentPoints.x > item.funnelArea[0] && currentPoints.x < item.funnelArea[2] && currentPoints.y > item.funnelArea[1] && currentPoints.y < item.funnelArea[3]) {
      currentIndex = i;
      break;
    }
  }
  return currentIndex;
}

function findWordChartCurrentIndex(currentPoints, wordData) {
  var currentIndex = -1;
  for (var i = 0, len = wordData.length; i < len; i++) {
    var item = wordData[i];
    if (currentPoints.x > item.area[0] && currentPoints.x < item.area[2] && currentPoints.y > item.area[1] && currentPoints.y < item.area[3]) {
      currentIndex = i;
      break;
    }
  }
  return currentIndex;
}

function findMapChartCurrentIndex(currentPoints, opts) {
  var currentIndex = -1;
  var cData = opts.chartData.mapData;
  var data = opts.series;
  var tmp = pointToCoordinate(currentPoints.y, currentPoints.x, cData.bounds, cData.scale, cData.xoffset, cData.yoffset);
  var poi = [tmp.x, tmp.y];
  for (var i = 0, len = data.length; i < len; i++) {
    var item = data[i].geometry.coordinates;
    if (isPoiWithinPoly(poi, item)) {
      currentIndex = i;
      break;
    }
  }
  return currentIndex;
}

function findPieChartCurrentIndex(currentPoints, pieData) {
  var currentIndex = -1;
  if (isInExactPieChartArea(currentPoints, pieData.center, pieData.radius)) {
    var angle = Math.atan2(pieData.center.y - currentPoints.y, currentPoints.x - pieData.center.x);
    angle = -angle;
    for (var i = 0, len = pieData.series.length; i < len; i++) {
      var item = pieData.series[i];
      if (isInAngleRange(angle, item._start_, item._start_ + item._proportion_ * 2 * Math.PI)) {
        currentIndex = i;
        break;
      }
    }
  }

  return currentIndex;
}

function isInExactPieChartArea(currentPoints, center, radius) {
  return Math.pow(currentPoints.x - center.x, 2) + Math.pow(currentPoints.y - center.y, 2) <= Math.pow(radius, 2);
}

function splitPoints(points) {
  var newPoints = [];
  var items = [];
  points.forEach(function (item, index) {
    if (item !== null) {
      items.push(item);
    } else {
      if (items.length) {
        newPoints.push(items);
      }
      items = [];
    }
  });
  if (items.length) {
    newPoints.push(items);
  }

  return newPoints;
}

function calLegendData(series, opts, config, chartData) {
  var legendData = {
    area: {
      start: {
        x: 0,
        y: 0 },

      end: {
        x: 0,
        y: 0 },

      width: 0,
      height: 0,
      wholeWidth: 0,
      wholeHeight: 0 },

    points: [],
    widthArr: [],
    heightArr: [] };

  if (opts.legend.show === false) {
    chartData.legendData = legendData;
    return legendData;
  }

  var padding = opts.legend.padding;
  var margin = opts.legend.margin;
  var fontSize = opts.legend.fontSize;
  var shapeWidth = 15 * opts.pixelRatio;
  var shapeRight = 5 * opts.pixelRatio;
  var lineHeight = Math.max(opts.legend.lineHeight * opts.pixelRatio, fontSize);
  if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {
    var legendList = [];
    var widthCount = 0;
    var widthCountArr = [];
    var currentRow = [];
    for (var i = 0; i < series.length; i++) {
      var item = series[i];
      var itemWidth = shapeWidth + shapeRight + measureText(item.name || 'undefined', fontSize) + opts.legend.itemGap;
      if (widthCount + itemWidth > opts.width - opts.padding[1] - opts.padding[3]) {
        legendList.push(currentRow);
        widthCountArr.push(widthCount - opts.legend.itemGap);
        widthCount = itemWidth;
        currentRow = [item];
      } else {
        widthCount += itemWidth;
        currentRow.push(item);
      }
    }
    if (currentRow.length) {
      legendList.push(currentRow);
      widthCountArr.push(widthCount - opts.legend.itemGap);
      legendData.widthArr = widthCountArr;
      var legendWidth = Math.max.apply(null, widthCountArr);
      switch (opts.legend.float) {
        case 'left':
          legendData.area.start.x = opts.padding[3];
          legendData.area.end.x = opts.padding[3] + 2 * padding;
          break;
        case 'right':
          legendData.area.start.x = opts.width - opts.padding[1] - legendWidth - 2 * padding;
          legendData.area.end.x = opts.width - opts.padding[1];
          break;
        default:
          legendData.area.start.x = (opts.width - legendWidth) / 2 - padding;
          legendData.area.end.x = (opts.width + legendWidth) / 2 + padding;}

      legendData.area.width = legendWidth + 2 * padding;
      legendData.area.wholeWidth = legendWidth + 2 * padding;
      legendData.area.height = legendList.length * lineHeight + 2 * padding;
      legendData.area.wholeHeight = legendList.length * lineHeight + 2 * padding + 2 * margin;
      legendData.points = legendList;
    }
  } else {
    var len = series.length;
    var maxHeight = opts.height - opts.padding[0] - opts.padding[2] - 2 * margin - 2 * padding;
    var maxLength = Math.min(Math.floor(maxHeight / lineHeight), len);
    legendData.area.height = maxLength * lineHeight + padding * 2;
    legendData.area.wholeHeight = maxLength * lineHeight + padding * 2;
    switch (opts.legend.float) {
      case 'top':
        legendData.area.start.y = opts.padding[0] + margin;
        legendData.area.end.y = opts.padding[0] + margin + legendData.area.height;
        break;
      case 'bottom':
        legendData.area.start.y = opts.height - opts.padding[2] - margin - legendData.area.height;
        legendData.area.end.y = opts.height - opts.padding[2] - margin;
        break;
      default:
        legendData.area.start.y = (opts.height - legendData.area.height) / 2;
        legendData.area.end.y = (opts.height + legendData.area.height) / 2;}

    var lineNum = len % maxLength === 0 ? len / maxLength : Math.floor(len / maxLength + 1);
    var _currentRow = [];
    for (var _i4 = 0; _i4 < lineNum; _i4++) {
      var temp = series.slice(_i4 * maxLength, _i4 * maxLength + maxLength);
      _currentRow.push(temp);
    }

    legendData.points = _currentRow;

    if (_currentRow.length) {
      for (var _i5 = 0; _i5 < _currentRow.length; _i5++) {
        var _item = _currentRow[_i5];
        var maxWidth = 0;
        for (var j = 0; j < _item.length; j++) {
          var _itemWidth = shapeWidth + shapeRight + measureText(_item[j].name || 'undefined', fontSize) + opts.legend.itemGap;
          if (_itemWidth > maxWidth) {
            maxWidth = _itemWidth;
          }
        }
        legendData.widthArr.push(maxWidth);
        legendData.heightArr.push(_item.length * lineHeight + padding * 2);
      }
      var _legendWidth = 0;
      for (var _i6 = 0; _i6 < legendData.widthArr.length; _i6++) {
        _legendWidth += legendData.widthArr[_i6];
      }
      legendData.area.width = _legendWidth - opts.legend.itemGap + 2 * padding;
      legendData.area.wholeWidth = legendData.area.width + padding;
    }
  }

  switch (opts.legend.position) {
    case 'top':
      legendData.area.start.y = opts.padding[0] + margin;
      legendData.area.end.y = opts.padding[0] + margin + legendData.area.height;
      break;
    case 'bottom':
      legendData.area.start.y = opts.height - opts.padding[2] - legendData.area.height - margin;
      legendData.area.end.y = opts.height - opts.padding[2] - margin;
      break;
    case 'left':
      legendData.area.start.x = opts.padding[3];
      legendData.area.end.x = opts.padding[3] + legendData.area.width;
      break;
    case 'right':
      legendData.area.start.x = opts.width - opts.padding[1] - legendData.area.width;
      legendData.area.end.x = opts.width - opts.padding[1];
      break;}

  chartData.legendData = legendData;
  return legendData;
}

function calCategoriesData(categories, opts, config, eachSpacing) {
  var result = {
    angle: 0,
    xAxisHeight: config.xAxisHeight };

  var categoriesTextLenth = categories.map(function (item) {
    return measureText(item, opts.xAxis.fontSize || config.fontSize);
  });
  var maxTextLength = Math.max.apply(this, categoriesTextLenth);

  if (opts.xAxis.rotateLabel == true && maxTextLength + 2 * config.xAxisTextPadding > eachSpacing) {
    result.angle = 45 * Math.PI / 180;
    result.xAxisHeight = 2 * config.xAxisTextPadding + maxTextLength * Math.sin(result.angle);
  }
  return result;
}

function getXAxisTextList(series, opts, config) {
  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;
  var data = dataCombine(series);
  var sorted = [];
  // remove null from data
  data = data.filter(function (item) {
    //return item !== null;
    if (typeof item === 'object' && item !== null) {
      if (item.constructor == Array) {
        return item !== null;
      } else {
        return item.value !== null;
      }
    } else {
      return item !== null;
    }
  });
  data.map(function (item) {
    if (typeof item === 'object') {
      if (item.constructor == Array) {
        if (opts.type == 'candle') {
          item.map(function (subitem) {
            sorted.push(subitem);
          });
        } else {
          sorted.push(item[0]);
        }
      } else {
        sorted.push(item.value);
      }
    } else {
      sorted.push(item);
    }
  });

  var minData = 0;
  var maxData = 0;
  if (sorted.length > 0) {
    minData = Math.min.apply(this, sorted);
    maxData = Math.max.apply(this, sorted);
  }
  //为了兼容v1.9.0之前的项目
  if (index > -1) {
    if (typeof opts.xAxis.data[index].min === 'number') {
      minData = Math.min(opts.xAxis.data[index].min, minData);
    }
    if (typeof opts.xAxis.data[index].max === 'number') {
      maxData = Math.max(opts.xAxis.data[index].max, maxData);
    }
  } else {
    if (typeof opts.xAxis.min === 'number') {
      minData = Math.min(opts.xAxis.min, minData);
    }
    if (typeof opts.xAxis.max === 'number') {
      maxData = Math.max(opts.xAxis.max, maxData);
    }
  }


  if (minData === maxData) {
    var rangeSpan = maxData || 10;
    maxData += rangeSpan;
  }

  //var dataRange = getDataRange(minData, maxData);
  var minRange = minData;
  var maxRange = maxData;

  var range = [];
  var eachRange = (maxRange - minRange) / opts.xAxis.splitNumber;

  for (var i = 0; i <= opts.xAxis.splitNumber; i++) {
    range.push(minRange + eachRange * i);
  }
  return range;
}

function calXAxisData(series, opts, config) {
  var result = {
    angle: 0,
    xAxisHeight: config.xAxisHeight };


  result.ranges = getXAxisTextList(series, opts, config);
  result.rangesFormat = result.ranges.map(function (item) {
    item = opts.xAxis.format ? opts.xAxis.format(item) : util.toFixed(item, 2);
    return item;
  });

  var xAxisScaleValues = result.ranges.map(function (item) {
    // 如果刻度值是浮点数,则保留两位小数
    item = util.toFixed(item, 2);
    // 若有自定义格式则调用自定义的格式化函数
    item = opts.xAxis.format ? opts.xAxis.format(Number(item)) : item;
    return item;
  });

  result = Object.assign(result, getXAxisPoints(xAxisScaleValues, opts, config));
  // 计算X轴刻度的属性譬如每个刻度的间隔,刻度的起始点\结束点以及总长
  var eachSpacing = result.eachSpacing;

  var textLength = xAxisScaleValues.map(function (item) {
    return measureText(item);
  });

  // get max length of categories text
  var maxTextLength = Math.max.apply(this, textLength);

  // 如果刻度值文本内容过长,则将其逆时针旋转45°
  if (maxTextLength + 2 * config.xAxisTextPadding > eachSpacing) {
    result.angle = 45 * Math.PI / 180;
    result.xAxisHeight = 2 * config.xAxisTextPadding + maxTextLength * Math.sin(result.angle);
  }

  if (opts.xAxis.disabled === true) {
    result.xAxisHeight = 0;
  }

  return result;
}

function getRadarDataPoints(angleList, center, radius, series, opts) {
  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;

  var radarOption = opts.extra.radar || {};
  radarOption.max = radarOption.max || 0;
  var maxData = Math.max(radarOption.max, Math.max.apply(null, dataCombine(series)));

  var data = [];var _loop2 = function _loop2(
  i) {
    var each = series[i];
    var listItem = {};
    listItem.color = each.color;
    listItem.legendShape = each.legendShape;
    listItem.pointShape = each.pointShape;
    listItem.data = [];
    each.data.forEach(function (item, index) {
      var tmp = {};
      tmp.angle = angleList[index];

      tmp.proportion = item / maxData;
      tmp.position = convertCoordinateOrigin(radius * tmp.proportion * process * Math.cos(tmp.angle), radius * tmp.proportion *
      process * Math.sin(tmp.angle), center);
      listItem.data.push(tmp);
    });

    data.push(listItem);};for (var i = 0; i < series.length; i++) {_loop2(i);
  }

  return data;
}

function getPieDataPoints(series, radius) {
  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

  var count = 0;
  var _start_ = 0;
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    item.data = item.data === null ? 0 : item.data;
    count += item.data;
  }
  for (var _i7 = 0; _i7 < series.length; _i7++) {
    var _item2 = series[_i7];
    _item2.data = _item2.data === null ? 0 : _item2.data;
    if (count === 0) {
      _item2._proportion_ = 1 / series.length * process;
    } else {
      _item2._proportion_ = _item2.data / count * process;
    }
    _item2._radius_ = radius;
  }
  for (var _i8 = 0; _i8 < series.length; _i8++) {
    var _item3 = series[_i8];
    _item3._start_ = _start_;
    _start_ += 2 * _item3._proportion_ * Math.PI;
  }

  return series;
}

function getFunnelDataPoints(series, radius) {
  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  series = series.sort(function (a, b) {return parseInt(b.data) - parseInt(a.data);});
  for (var i = 0; i < series.length; i++) {
    series[i].radius = series[i].data / series[0].data * radius * process;
    series[i]._proportion_ = series[i].data / series[0].data;
  }
  return series.reverse();
}

function getRoseDataPoints(series, type, minRadius, radius) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var count = 0;
  var _start_ = 0;

  var dataArr = [];
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    item.data = item.data === null ? 0 : item.data;
    count += item.data;
    dataArr.push(item.data);
  }

  var minData = Math.min.apply(null, dataArr);
  var maxData = Math.max.apply(null, dataArr);
  var radiusLength = radius - minRadius;

  for (var _i9 = 0; _i9 < series.length; _i9++) {
    var _item4 = series[_i9];
    _item4.data = _item4.data === null ? 0 : _item4.data;
    if (count === 0 || type == 'area') {
      _item4._proportion_ = _item4.data / count * process;
      _item4._rose_proportion_ = 1 / series.length * process;
    } else {
      _item4._proportion_ = _item4.data / count * process;
      _item4._rose_proportion_ = _item4.data / count * process;
    }
    _item4._radius_ = minRadius + radiusLength * ((_item4.data - minData) / (maxData - minData));
  }
  for (var _i10 = 0; _i10 < series.length; _i10++) {
    var _item5 = series[_i10];
    _item5._start_ = _start_;
    _start_ += 2 * _item5._rose_proportion_ * Math.PI;
  }

  return series;
}

function getArcbarDataPoints(series, arcbarOption) {
  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  if (process == 1) {
    process = 0.999999;
  }
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    item.data = item.data === null ? 0 : item.data;
    var totalAngle = void 0;
    if (arcbarOption.type == 'circle') {
      totalAngle = 2;
    } else {
      if (arcbarOption.endAngle < arcbarOption.startAngle) {
        totalAngle = 2 + arcbarOption.endAngle - arcbarOption.startAngle;
      } else {
        totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;
      }
    }
    item._proportion_ = totalAngle * item.data * process + arcbarOption.startAngle;
    if (item._proportion_ >= 2) {
      item._proportion_ = item._proportion_ % 2;
    }
  }
  return series;
}

function getGaugeAxisPoints(categories, startAngle, endAngle) {
  var totalAngle = startAngle - endAngle + 1;
  var tempStartAngle = startAngle;
  for (var i = 0; i < categories.length; i++) {
    categories[i].value = categories[i].value === null ? 0 : categories[i].value;
    categories[i]._startAngle_ = tempStartAngle;
    categories[i]._endAngle_ = totalAngle * categories[i].value + startAngle;
    if (categories[i]._endAngle_ >= 2) {
      categories[i]._endAngle_ = categories[i]._endAngle_ % 2;
    }
    tempStartAngle = categories[i]._endAngle_;
  }
  return categories;
}

function getGaugeDataPoints(series, categories, gaugeOption) {
  var process = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    item.data = item.data === null ? 0 : item.data;
    if (gaugeOption.pointer.color == 'auto') {
      for (var _i11 = 0; _i11 < categories.length; _i11++) {
        if (item.data <= categories[_i11].value) {
          item.color = categories[_i11].color;
          break;
        }
      }
    } else {
      item.color = gaugeOption.pointer.color;
    }
    var totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;
    item._endAngle_ = totalAngle * item.data + gaugeOption.startAngle;
    item._oldAngle_ = gaugeOption.oldAngle;
    if (gaugeOption.oldAngle < gaugeOption.endAngle) {
      item._oldAngle_ += 2;
    }
    if (item.data >= gaugeOption.oldData) {
      item._proportion_ = (item._endAngle_ - item._oldAngle_) * process + gaugeOption.oldAngle;
    } else {
      item._proportion_ = item._oldAngle_ - (item._oldAngle_ - item._endAngle_) * process;
    }
    if (item._proportion_ >= 2) {
      item._proportion_ = item._proportion_ % 2;
    }
  }
  return series;
}

function getPieTextMaxLength(series) {
  series = getPieDataPoints(series);
  var maxLength = 0;
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';
    maxLength = Math.max(maxLength, measureText(text));
  }

  return maxLength;
}

function fixColumeData(points, eachSpacing, columnLen, index, config, opts) {
  return points.map(function (item) {
    if (item === null) {
      return null;
    }
    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / columnLen);

    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {
      item.width = Math.min(item.width, +opts.extra.column.width);
    }
    if (item.width <= 0) {
      item.width = 1;
    }
    item.x += (index + 0.5 - columnLen / 2) * item.width;
    return item;
  });
}

function fixColumeMeterData(points, eachSpacing, columnLen, index, config, opts, border) {
  return points.map(function (item) {
    if (item === null) {
      return null;
    }
    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / 2);

    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {
      item.width = Math.min(item.width, +opts.extra.column.width);
    }

    if (index > 0) {
      item.width -= 2 * border;
    }
    return item;
  });
}

function fixColumeStackData(points, eachSpacing, columnLen, index, config, opts, series) {

  return points.map(function (item, indexn) {

    if (item === null) {
      return null;
    }
    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / 2);

    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {
      item.width = Math.min(item.width, +opts.extra.column.width);
    }
    return item;
  });
}

function getXAxisPoints(categories, opts, config) {
  var spacingValid = opts.width - opts.area[1] - opts.area[3];
  var dataCount = opts.enableScroll ? Math.min(opts.xAxis.itemCount, categories.length) : categories.length;
  if ((opts.type == 'line' || opts.type == 'area') && dataCount > 1 && opts.xAxis.boundaryGap == 'justify') {
    dataCount -= 1;
  }
  var eachSpacing = spacingValid / dataCount;

  var xAxisPoints = [];
  var startX = opts.area[3];
  var endX = opts.width - opts.area[1];
  categories.forEach(function (item, index) {
    xAxisPoints.push(startX + index * eachSpacing);
  });
  if (opts.xAxis.boundaryGap !== 'justify') {
    if (opts.enableScroll === true) {
      xAxisPoints.push(startX + categories.length * eachSpacing);
    } else {
      xAxisPoints.push(endX);
    }
  }
  return {
    xAxisPoints: xAxisPoints,
    startX: startX,
    endX: endX,
    eachSpacing: eachSpacing };

}

function getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {
  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;
  var points = [];
  var validHeight = opts.height - opts.area[0] - opts.area[2];
  data.forEach(function (item, index) {
    if (item === null) {
      points.push(null);
    } else {
      var cPoints = [];
      item.forEach(function (items, indexs) {
        var point = {};
        point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);
        var value = items.value || items;
        var height = validHeight * (value - minRange) / (maxRange - minRange);
        height *= process;
        point.y = opts.height - Math.round(height) - opts.area[2];
        cPoints.push(point);
      });
      points.push(cPoints);
    }
  });

  return points;
}

function getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {
  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;
  var boundaryGap = 'center';
  if (opts.type == 'line' || opts.type == 'area') {
    boundaryGap = opts.xAxis.boundaryGap;
  }
  var points = [];
  var validHeight = opts.height - opts.area[0] - opts.area[2];
  var validWidth = opts.width - opts.area[1] - opts.area[3];
  data.forEach(function (item, index) {
    if (item === null) {
      points.push(null);
    } else {
      var point = {};
      point.color = item.color;
      point.x = xAxisPoints[index];
      var value = item;
      if (typeof item === 'object' && item !== null) {
        if (item.constructor == Array) {
          var xranges, xminRange, xmaxRange;
          xranges = [].concat(opts.chartData.xAxisData.ranges);
          xminRange = xranges.shift();
          xmaxRange = xranges.pop();
          value = item[1];
          point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);
        } else {
          value = item.value;
        }
      }
      if (boundaryGap == 'center') {
        point.x += Math.round(eachSpacing / 2);
      }
      var height = validHeight * (value - minRange) / (maxRange - minRange);
      height *= process;
      point.y = opts.height - Math.round(height) - opts.area[2];
      points.push(point);
    }
  });

  return points;
}

function getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, stackSeries) {
  var process = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;
  var points = [];
  var validHeight = opts.height - opts.area[0] - opts.area[2];

  data.forEach(function (item, index) {
    if (item === null) {
      points.push(null);
    } else {
      var point = {};
      point.color = item.color;
      point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);

      if (seriesIndex > 0) {
        var value = 0;
        for (var i = 0; i <= seriesIndex; i++) {
          value += stackSeries[i].data[index];
        }
        var value0 = value - item;
        var height = validHeight * (value - minRange) / (maxRange - minRange);
        var height0 = validHeight * (value0 - minRange) / (maxRange - minRange);
      } else {
        var value = item;
        var height = validHeight * (value - minRange) / (maxRange - minRange);
        var height0 = 0;
      }
      var heightc = height0;
      height *= process;
      heightc *= process;
      point.y = opts.height - Math.round(height) - opts.area[2];
      point.y0 = opts.height - Math.round(heightc) - opts.area[2];
      points.push(point);
    }
  });

  return points;
}

function getYAxisTextList(series, opts, config, stack) {
  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;
  var data;
  if (stack == 'stack') {
    data = dataCombineStack(series, opts.categories.length);
  } else {
    data = dataCombine(series);
  }
  var sorted = [];
  // remove null from data
  data = data.filter(function (item) {
    //return item !== null;
    if (typeof item === 'object' && item !== null) {
      if (item.constructor == Array) {
        return item !== null;
      } else {
        return item.value !== null;
      }
    } else {
      return item !== null;
    }
  });
  data.map(function (item) {
    if (typeof item === 'object') {
      if (item.constructor == Array) {
        if (opts.type == 'candle') {
          item.map(function (subitem) {
            sorted.push(subitem);
          });
        } else {
          sorted.push(item[1]);
        }
      } else {
        sorted.push(item.value);
      }
    } else {
      sorted.push(item);
    }
  });

  var minData = 0;
  var maxData = 0;
  if (sorted.length > 0) {
    minData = Math.min.apply(this, sorted);
    maxData = Math.max.apply(this, sorted);
  }
  //为了兼容v1.9.0之前的项目
  if (index > -1) {
    if (typeof opts.yAxis.data[index].min === 'number') {
      minData = Math.min(opts.yAxis.data[index].min, minData);
    }
    if (typeof opts.yAxis.data[index].max === 'number') {
      maxData = Math.max(opts.yAxis.data[index].max, maxData);
    }
  } else {
    if (typeof opts.yAxis.min === 'number') {
      minData = Math.min(opts.yAxis.min, minData);
    }
    if (typeof opts.yAxis.max === 'number') {
      maxData = Math.max(opts.yAxis.max, maxData);
    }
  }


  if (minData === maxData) {
    var rangeSpan = maxData || 10;
    maxData += rangeSpan;
  }

  var dataRange = getDataRange(minData, maxData);
  var minRange = dataRange.minRange;
  var maxRange = dataRange.maxRange;

  var range = [];
  var eachRange = (maxRange - minRange) / opts.yAxis.splitNumber;

  for (var i = 0; i <= opts.yAxis.splitNumber; i++) {
    range.push(minRange + eachRange * i);
  }
  return range.reverse();
}

function calYAxisData(series, opts, config) {
  //堆叠图重算Y轴
  var columnstyle = assign({}, {
    type: "" },
  opts.extra.column);
  //如果是多Y轴，重新计算
  var YLength = opts.yAxis.data.length;
  var newSeries = new Array(YLength);
  if (YLength > 0) {
    for (var i = 0; i < YLength; i++) {
      newSeries[i] = [];
      for (var j = 0; j < series.length; j++) {
        if (series[j].index == i) {
          newSeries[i].push(series[j]);
        }
      }
    }
    var rangesArr = new Array(YLength);
    var rangesFormatArr = new Array(YLength);
    var yAxisWidthArr = new Array(YLength);var _loop3 = function _loop3(

    _i12) {
      var yData = opts.yAxis.data[_i12];
      //如果总开关不显示，强制每个Y轴为不显示
      if (opts.yAxis.disabled == true) {
        yData.disabled = true;
      }
      rangesArr[_i12] = getYAxisTextList(newSeries[_i12], opts, config, columnstyle.type, _i12);
      var yAxisFontSizes = yData.fontSize || config.fontSize;
      yAxisWidthArr[_i12] = { position: yData.position ? yData.position : 'left', width: 0 };
      rangesFormatArr[_i12] = rangesArr[_i12].map(function (items) {
        items = util.toFixed(items, 6);
        items = yData.format ? yData.format(Number(items)) : items;
        yAxisWidthArr[_i12].width = Math.max(yAxisWidthArr[_i12].width, measureText(items, yAxisFontSizes) + 5);
        return items;
      });
      var calibration = yData.calibration ? 4 * opts.pixelRatio : 0;
      yAxisWidthArr[_i12].width += calibration + 3 * opts.pixelRatio;
      if (yData.disabled === true) {
        yAxisWidthArr[_i12].width = 0;
      }};for (var _i12 = 0; _i12 < YLength; _i12++) {_loop3(_i12);
    }

  } else {
    var rangesArr = new Array(1);
    var rangesFormatArr = new Array(1);
    var yAxisWidthArr = new Array(1);
    rangesArr[0] = getYAxisTextList(series, opts, config, columnstyle.type);
    yAxisWidthArr[0] = { position: 'left', width: 0 };
    var yAxisFontSize = opts.yAxis.fontSize || config.fontSize;
    rangesFormatArr[0] = rangesArr[0].map(function (item) {
      item = util.toFixed(item, 6);
      item = opts.yAxis.format ? opts.yAxis.format(Number(item)) : item;
      yAxisWidthArr[0].width = Math.max(yAxisWidthArr[0].width, measureText(item, yAxisFontSize) + 5);
      return item;
    });
    yAxisWidthArr[0].width += 3 * opts.pixelRatio;
    if (opts.yAxis.disabled === true) {
      yAxisWidthArr[0] = { position: 'left', width: 0 };
      opts.yAxis.data[0] = { disabled: true };
    } else {
      opts.yAxis.data[0] = { disabled: false, position: 'left', max: opts.yAxis.max, min: opts.yAxis.min, format: opts.yAxis.format };
    }

  }

  return {
    rangesFormat: rangesFormatArr,
    ranges: rangesArr,
    yAxisWidth: yAxisWidthArr };


}

function calTooltipYAxisData(point, series, opts, config, eachSpacing) {
  var ranges = [].concat(opts.chartData.yAxisData.ranges);
  var spacingValid = opts.height - opts.area[0] - opts.area[2];
  var minAxis = opts.area[0];
  var items = [];
  for (var i = 0; i < ranges.length; i++) {
    var maxVal = ranges[i].shift();
    var minVal = ranges[i].pop();
    var item = maxVal - (maxVal - minVal) * (point - minAxis) / spacingValid;
    item = opts.yAxis.data[i].format ? opts.yAxis.data[i].format(Number(item)) : item.toFixed(0);
    items.push(String(item));
  }
  return items;
}

function calMarkLineData(points, opts) {
  var minRange, maxRange;
  var spacingValid = opts.height - opts.area[0] - opts.area[2];
  for (var i = 0; i < points.length; i++) {
    points[i].yAxisIndex = points[i].yAxisIndex ? points[i].yAxisIndex : 0;
    var range = [].concat(opts.chartData.yAxisData.ranges[points[i].yAxisIndex]);
    minRange = range.pop();
    maxRange = range.shift();
    var height = spacingValid * (points[i].value - minRange) / (maxRange - minRange);
    points[i].y = opts.height - Math.round(height) - opts.area[2];
  }
  return points;
}

function contextRotate(context, opts) {
  if (opts.rotateLock !== true) {
    context.translate(opts.height, 0);
    context.rotate(90 * Math.PI / 180);
  } else if (opts._rotate_ !== true) {
    context.translate(opts.height, 0);
    context.rotate(90 * Math.PI / 180);
    opts._rotate_ = true;
  }
}

function drawPointShape(points, color, shape, context, opts) {
  context.beginPath();
  if (opts.dataPointShapeType == 'hollow') {
    context.setStrokeStyle(color);
    context.setFillStyle(opts.background);
    context.setLineWidth(2 * opts.pixelRatio);
  } else {
    context.setStrokeStyle("#ffffff");
    context.setFillStyle(color);
    context.setLineWidth(1 * opts.pixelRatio);
  }
  if (shape === 'diamond') {
    points.forEach(function (item, index) {
      if (item !== null) {
        context.moveTo(item.x, item.y - 4.5);
        context.lineTo(item.x - 4.5, item.y);
        context.lineTo(item.x, item.y + 4.5);
        context.lineTo(item.x + 4.5, item.y);
        context.lineTo(item.x, item.y - 4.5);
      }
    });
  } else if (shape === 'circle') {
    points.forEach(function (item, index) {
      if (item !== null) {
        context.moveTo(item.x + 2.5 * opts.pixelRatio, item.y);
        context.arc(item.x, item.y, 3 * opts.pixelRatio, 0, 2 * Math.PI, false);
      }
    });
  } else if (shape === 'rect') {
    points.forEach(function (item, index) {
      if (item !== null) {
        context.moveTo(item.x - 3.5, item.y - 3.5);
        context.rect(item.x - 3.5, item.y - 3.5, 7, 7);
      }
    });
  } else if (shape === 'triangle') {
    points.forEach(function (item, index) {
      if (item !== null) {
        context.moveTo(item.x, item.y - 4.5);
        context.lineTo(item.x - 4.5, item.y + 4.5);
        context.lineTo(item.x + 4.5, item.y + 4.5);
        context.lineTo(item.x, item.y - 4.5);
      }
    });
  }
  context.closePath();
  context.fill();
  context.stroke();
}

function drawRingTitle(opts, config, context, center) {
  var titlefontSize = opts.title.fontSize || config.titleFontSize;
  var subtitlefontSize = opts.subtitle.fontSize || config.subtitleFontSize;
  var title = opts.title.name || '';
  var subtitle = opts.subtitle.name || '';
  var titleFontColor = opts.title.color || config.titleColor;
  var subtitleFontColor = opts.subtitle.color || config.subtitleColor;
  var titleHeight = title ? titlefontSize : 0;
  var subtitleHeight = subtitle ? subtitlefontSize : 0;
  var margin = 5;

  if (subtitle) {
    var textWidth = measureText(subtitle, subtitlefontSize);
    var startX = center.x - textWidth / 2 + (opts.subtitle.offsetX || 0);
    var startY = center.y + subtitlefontSize / 2 + (opts.subtitle.offsetY || 0);
    if (title) {
      startY += (titleHeight + margin) / 2;
    }
    context.beginPath();
    context.setFontSize(subtitlefontSize);
    context.setFillStyle(subtitleFontColor);
    context.fillText(subtitle, startX, startY);
    context.closePath();
    context.stroke();
  }
  if (title) {
    var _textWidth = measureText(title, titlefontSize);
    var _startX = center.x - _textWidth / 2 + (opts.title.offsetX || 0);
    var _startY = center.y + titlefontSize / 2 + (opts.title.offsetY || 0);
    if (subtitle) {
      _startY -= (subtitleHeight + margin) / 2;
    }
    context.beginPath();
    context.setFontSize(titlefontSize);
    context.setFillStyle(titleFontColor);
    context.fillText(title, _startX, _startY);
    context.closePath();
    context.stroke();
  }
}

function drawPointText(points, series, config, context) {
  // 绘制数据文案
  var data = series.data;
  points.forEach(function (item, index) {
    if (item !== null) {
      //var formatVal = series.format ? series.format(data[index]) : data[index];
      context.beginPath();
      context.setFontSize(series.textSize || config.fontSize);
      context.setFillStyle(series.textColor || '#666666');
      var value = data[index];
      if (typeof data[index] === 'object' && data[index] !== null) {
        if (data[index].constructor == Array) {
          value = data[index][1];
        } else {
          value = data[index].value;
        }
      }
      var formatVal = series.format ? series.format(value) : value;
      context.fillText(String(formatVal), item.x - measureText(formatVal, series.textSize || config.fontSize) / 2, item.y - 4);
      context.closePath();
      context.stroke();
    }
  });

}

function drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context) {
  radius -= gaugeOption.width / 2 + config.gaugeLabelTextMargin;

  var totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;
  var splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;
  var totalNumber = gaugeOption.endNumber - gaugeOption.startNumber;
  var splitNumber = totalNumber / gaugeOption.splitLine.splitNumber;
  var nowAngle = gaugeOption.startAngle;
  var nowNumber = gaugeOption.startNumber;
  for (var i = 0; i < gaugeOption.splitLine.splitNumber + 1; i++) {
    var pos = {
      x: radius * Math.cos(nowAngle * Math.PI),
      y: radius * Math.sin(nowAngle * Math.PI) };

    var labelText = gaugeOption.labelFormat ? gaugeOption.labelFormat(nowNumber) : nowNumber;
    pos.x += centerPosition.x - measureText(labelText) / 2;
    pos.y += centerPosition.y;
    var startX = pos.x;
    var startY = pos.y;
    context.beginPath();
    context.setFontSize(config.fontSize);
    context.setFillStyle(gaugeOption.labelColor || '#666666');
    context.fillText(labelText, startX, startY + config.fontSize / 2);
    context.closePath();
    context.stroke();

    nowAngle += splitAngle;
    if (nowAngle >= 2) {
      nowAngle = nowAngle % 2;
    }
    nowNumber += splitNumber;
  }

}

function drawRadarLabel(angleList, radius, centerPosition, opts, config, context) {
  var radarOption = opts.extra.radar || {};
  radius += config.radarLabelTextMargin;

  angleList.forEach(function (angle, index) {
    var pos = {
      x: radius * Math.cos(angle),
      y: radius * Math.sin(angle) };

    var posRelativeCanvas = convertCoordinateOrigin(pos.x, pos.y, centerPosition);
    var startX = posRelativeCanvas.x;
    var startY = posRelativeCanvas.y;
    if (util.approximatelyEqual(pos.x, 0)) {
      startX -= measureText(opts.categories[index] || '') / 2;
    } else if (pos.x < 0) {
      startX -= measureText(opts.categories[index] || '');
    }
    context.beginPath();
    context.setFontSize(config.fontSize);
    context.setFillStyle(radarOption.labelColor || '#666666');
    context.fillText(opts.categories[index] || '', startX, startY + config.fontSize / 2);
    context.closePath();
    context.stroke();
  });

}

function drawPieText(series, opts, config, context, radius, center) {
  var lineRadius = config.pieChartLinePadding;
  var textObjectCollection = [];
  var lastTextObject = null;

  var seriesConvert = series.map(function (item) {
    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_.toFixed(4) * 100) + '%';
    if (item._rose_proportion_) item._proportion_ = item._rose_proportion_;
    var arc = 2 * Math.PI - (item._start_ + 2 * Math.PI * item._proportion_ / 2);
    var color = item.color;
    var radius = item._radius_;
    return {
      arc: arc,
      text: text,
      color: color,
      radius: radius,
      textColor: item.textColor,
      textSize: item.textSize };

  });
  for (var i = 0; i < seriesConvert.length; i++) {
    var item = seriesConvert[i];
    // line end
    var orginX1 = Math.cos(item.arc) * (item.radius + lineRadius);
    var orginY1 = Math.sin(item.arc) * (item.radius + lineRadius);

    // line start
    var orginX2 = Math.cos(item.arc) * item.radius;
    var orginY2 = Math.sin(item.arc) * item.radius;

    // text start
    var orginX3 = orginX1 >= 0 ? orginX1 + config.pieChartTextPadding : orginX1 - config.pieChartTextPadding;
    var orginY3 = orginY1;
    var textWidth = measureText(item.text, item.textSize || config.fontSize);
    var startY = orginY3;

    if (lastTextObject && util.isSameXCoordinateArea(lastTextObject.start, {
      x: orginX3 }))
    {
      if (orginX3 > 0) {
        startY = Math.min(orginY3, lastTextObject.start.y);
      } else if (orginX1 < 0) {
        startY = Math.max(orginY3, lastTextObject.start.y);
      } else {
        if (orginY3 > 0) {
          startY = Math.max(orginY3, lastTextObject.start.y);
        } else {
          startY = Math.min(orginY3, lastTextObject.start.y);
        }
      }
    }
    if (orginX3 < 0) {
      orginX3 -= textWidth;
    }

    var textObject = {
      lineStart: {
        x: orginX2,
        y: orginY2 },

      lineEnd: {
        x: orginX1,
        y: orginY1 },

      start: {
        x: orginX3,
        y: startY },

      width: textWidth,
      height: config.fontSize,
      text: item.text,
      color: item.color,
      textColor: item.textColor,
      textSize: item.textSize };

    lastTextObject = avoidCollision(textObject, lastTextObject);
    textObjectCollection.push(lastTextObject);
  }

  for (var _i13 = 0; _i13 < textObjectCollection.length; _i13++) {
    var _item6 = textObjectCollection[_i13];
    var lineStartPoistion = convertCoordinateOrigin(_item6.lineStart.x, _item6.lineStart.y, center);
    var lineEndPoistion = convertCoordinateOrigin(_item6.lineEnd.x, _item6.lineEnd.y, center);
    var textPosition = convertCoordinateOrigin(_item6.start.x, _item6.start.y, center);
    context.setLineWidth(1 * opts.pixelRatio);
    context.setFontSize(config.fontSize);
    context.beginPath();
    context.setStrokeStyle(_item6.color);
    context.setFillStyle(_item6.color);
    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);
    var curveStartX = _item6.start.x < 0 ? textPosition.x + _item6.width : textPosition.x;
    var textStartX = _item6.start.x < 0 ? textPosition.x - 5 : textPosition.x + 5;
    context.quadraticCurveTo(lineEndPoistion.x, lineEndPoistion.y, curveStartX, textPosition.y);
    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);
    context.stroke();
    context.closePath();
    context.beginPath();
    context.moveTo(textPosition.x + _item6.width, textPosition.y);
    context.arc(curveStartX, textPosition.y, 2, 0, 2 * Math.PI);
    context.closePath();
    context.fill();
    context.beginPath();
    context.setFontSize(_item6.textSize || config.fontSize);
    context.setFillStyle(_item6.textColor || '#666666');
    context.fillText(_item6.text, textStartX, textPosition.y + 3);
    context.closePath();
    context.stroke();
    context.closePath();
  }
}

function drawToolTipSplitLine(offsetX, opts, config, context) {
  var toolTipOption = opts.extra.tooltip || {};
  toolTipOption.gridType = toolTipOption.gridType == undefined ? 'solid' : toolTipOption.gridType;
  toolTipOption.dashLength = toolTipOption.dashLength == undefined ? 4 : toolTipOption.dashLength;
  var startY = opts.area[0];
  var endY = opts.height - opts.area[2];

  if (toolTipOption.gridType == 'dash') {
    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);
  }
  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');
  context.setLineWidth(1 * opts.pixelRatio);
  context.beginPath();
  context.moveTo(offsetX, startY);
  context.lineTo(offsetX, endY);
  context.stroke();
  context.setLineDash([]);

  if (toolTipOption.xAxisLabel) {
    var labelText = opts.categories[opts.tooltip.index];
    context.setFontSize(config.fontSize);
    var textWidth = measureText(labelText, config.fontSize);

    var textX = offsetX - 0.5 * textWidth;
    var textY = endY;
    context.beginPath();
    context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));
    context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);
    context.setLineWidth(1 * opts.pixelRatio);
    context.rect(textX - config.toolTipPadding, textY, textWidth + 2 * config.toolTipPadding, config.fontSize + 2 * config.toolTipPadding);
    context.closePath();
    context.stroke();
    context.fill();

    context.beginPath();
    context.setFontSize(config.fontSize);
    context.setFillStyle(toolTipOption.labelFontColor || config.fontColor);
    context.fillText(String(labelText), textX, textY + config.toolTipPadding + config.fontSize);
    context.closePath();
    context.stroke();
  }
}

function drawMarkLine(opts, config, context) {
  var markLineOption = assign({}, {
    type: 'solid',
    dashLength: 4,
    data: [] },
  opts.extra.markLine);
  var startX = opts.area[3];
  var endX = opts.width - opts.area[1];
  var points = calMarkLineData(markLineOption.data, opts);

  for (var i = 0; i < points.length; i++) {
    var item = assign({}, {
      lineColor: '#DE4A42',
      showLabel: false,
      labelFontColor: '#666666',
      labelBgColor: '#DFE8FF',
      labelBgOpacity: 0.8,
      yAxisIndex: 0 },
    points[i]);

    if (markLineOption.type == 'dash') {
      context.setLineDash([markLineOption.dashLength, markLineOption.dashLength]);
    }
    context.setStrokeStyle(item.lineColor);
    context.setLineWidth(1 * opts.pixelRatio);
    context.beginPath();
    context.moveTo(startX, item.y);
    context.lineTo(endX, item.y);
    context.stroke();
    context.setLineDash([]);
    if (item.showLabel) {
      var labelText = opts.yAxis.format ? opts.yAxis.format(Number(item.value)) : item.value;
      context.setFontSize(config.fontSize);
      var textWidth = measureText(labelText, config.fontSize);
      var bgStartX = opts.padding[3] + config.yAxisTitleWidth - config.toolTipPadding;
      var bgEndX = Math.max(opts.area[3], textWidth + config.toolTipPadding * 2);
      var bgWidth = bgEndX - bgStartX;

      var textX = bgStartX + (bgWidth - textWidth) / 2;
      var textY = item.y;
      context.setFillStyle(hexToRgb(item.labelBgColor, item.labelBgOpacity));
      context.setStrokeStyle(item.labelBgColor);
      context.setLineWidth(1 * opts.pixelRatio);
      context.beginPath();
      context.rect(bgStartX, textY - 0.5 * config.fontSize - config.toolTipPadding, bgWidth, config.fontSize + 2 * config.toolTipPadding);
      context.closePath();
      context.stroke();
      context.fill();

      context.beginPath();
      context.setFontSize(config.fontSize);
      context.setFillStyle(item.labelFontColor);
      context.fillText(String(labelText), textX, textY + 0.5 * config.fontSize);
      context.stroke();
    }
  }
}

function drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints) {
  var toolTipOption = assign({}, {
    gridType: 'solid',
    dashLength: 4 },
  opts.extra.tooltip);

  var startX = opts.area[3];
  var endX = opts.width - opts.area[1];

  if (toolTipOption.gridType == 'dash') {
    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);
  }
  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');
  context.setLineWidth(1 * opts.pixelRatio);
  context.beginPath();
  context.moveTo(startX, opts.tooltip.offset.y);
  context.lineTo(endX, opts.tooltip.offset.y);
  context.stroke();
  context.setLineDash([]);

  if (toolTipOption.yAxisLabel) {
    var labelText = calTooltipYAxisData(opts.tooltip.offset.y, opts.series, opts, config, eachSpacing);
    var widthArr = opts.chartData.yAxisData.yAxisWidth;
    var tStartLeft = opts.area[3];
    var tStartRight = opts.width - opts.area[1];
    for (var i = 0; i < labelText.length; i++) {
      context.setFontSize(config.fontSize);
      var textWidth = measureText(labelText[i], config.fontSize);
      var bgStartX = void 0,bgEndX = void 0,bgWidth = void 0;
      if (widthArr[i].position == 'left') {
        bgStartX = tStartLeft - widthArr[i].width;
        bgEndX = Math.max(bgStartX, bgStartX + textWidth + config.toolTipPadding * 2);
      } else {
        bgStartX = tStartRight;
        bgEndX = Math.max(bgStartX + widthArr[i].width, bgStartX + textWidth + config.toolTipPadding * 2);
      }
      bgWidth = bgEndX - bgStartX;

      var textX = bgStartX + (bgWidth - textWidth) / 2;
      var textY = opts.tooltip.offset.y;
      context.beginPath();
      context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));
      context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);
      context.setLineWidth(1 * opts.pixelRatio);
      context.rect(bgStartX, textY - 0.5 * config.fontSize - config.toolTipPadding, bgWidth, config.fontSize + 2 * config.toolTipPadding);
      context.closePath();
      context.stroke();
      context.fill();

      context.beginPath();
      context.setFontSize(config.fontSize);
      context.setFillStyle(toolTipOption.labelFontColor || config.fontColor);
      context.fillText(labelText[i], textX, textY + 0.5 * config.fontSize);
      context.closePath();
      context.stroke();
      if (widthArr[i].position == 'left') {
        tStartLeft -= widthArr[i].width + opts.yAxis.padding;
      } else {
        tStartRight += widthArr[i].width + opts.yAxis.padding;
      }
    }
  }
}

function drawToolTipSplitArea(offsetX, opts, config, context, eachSpacing) {
  var toolTipOption = assign({}, {
    activeBgColor: '#000000',
    activeBgOpacity: 0.08 },
  opts.extra.tooltip);
  var startY = opts.area[0];
  var endY = opts.height - opts.area[2];
  context.beginPath();
  context.setFillStyle(hexToRgb(toolTipOption.activeBgColor, toolTipOption.activeBgOpacity));
  context.rect(offsetX - eachSpacing / 2, startY, eachSpacing, endY - startY);
  context.closePath();
  context.fill();
}

function drawToolTip(textList, offset, opts, config, context, eachSpacing, xAxisPoints) {
  var toolTipOption = assign({}, {
    showBox: true,
    bgColor: '#000000',
    bgOpacity: 0.7,
    fontColor: '#FFFFFF' },
  opts.extra.tooltip);
  var legendWidth = 4 * opts.pixelRatio;
  var legendMarginRight = 5 * opts.pixelRatio;
  var arrowWidth = 8 * opts.pixelRatio;
  var isOverRightBorder = false;
  if (opts.type == 'line' || opts.type == 'area' || opts.type == 'candle' || opts.type == 'mix') {
    drawToolTipSplitLine(opts.tooltip.offset.x, opts, config, context);
  }

  offset = assign({
    x: 0,
    y: 0 },
  offset);
  offset.y -= 8 * opts.pixelRatio;
  var textWidth = textList.map(function (item) {
    return measureText(item.text, config.fontSize);
  });
  var toolTipWidth = legendWidth + legendMarginRight + 4 * config.toolTipPadding + Math.max.apply(null, textWidth);
  var toolTipHeight = 2 * config.toolTipPadding + textList.length * config.toolTipLineHeight;

  if (toolTipOption.showBox == false) {return;}
  // if beyond the right border
  if (offset.x - Math.abs(opts._scrollDistance_) + arrowWidth + toolTipWidth > opts.width) {
    isOverRightBorder = true;
  }
  if (toolTipHeight + offset.y > opts.height) {
    offset.y = opts.height - toolTipHeight;
  }
  // draw background rect
  context.beginPath();
  context.setFillStyle(hexToRgb(toolTipOption.bgColor || config.toolTipBackground, toolTipOption.bgOpacity || config.toolTipOpacity));
  if (isOverRightBorder) {
    context.moveTo(offset.x, offset.y + 10 * opts.pixelRatio);
    context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pixelRatio - 5 * opts.pixelRatio);
    context.lineTo(offset.x - arrowWidth, offset.y);
    context.lineTo(offset.x - arrowWidth - Math.round(toolTipWidth), offset.y);
    context.lineTo(offset.x - arrowWidth - Math.round(toolTipWidth), offset.y + toolTipHeight);
    context.lineTo(offset.x - arrowWidth, offset.y + toolTipHeight);
    context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pixelRatio + 5 * opts.pixelRatio);
    context.lineTo(offset.x, offset.y + 10 * opts.pixelRatio);
  } else {
    context.moveTo(offset.x, offset.y + 10 * opts.pixelRatio);
    context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pixelRatio - 5 * opts.pixelRatio);
    context.lineTo(offset.x + arrowWidth, offset.y);
    context.lineTo(offset.x + arrowWidth + Math.round(toolTipWidth), offset.y);
    context.lineTo(offset.x + arrowWidth + Math.round(toolTipWidth), offset.y + toolTipHeight);
    context.lineTo(offset.x + arrowWidth, offset.y + toolTipHeight);
    context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pixelRatio + 5 * opts.pixelRatio);
    context.lineTo(offset.x, offset.y + 10 * opts.pixelRatio);
  }

  context.closePath();
  context.fill();

  // draw legend
  textList.forEach(function (item, index) {
    if (item.color !== null) {
      context.beginPath();
      context.setFillStyle(item.color);
      var startX = offset.x + arrowWidth + 2 * config.toolTipPadding;
      var startY = offset.y + (config.toolTipLineHeight - config.fontSize) / 2 + config.toolTipLineHeight * index +
      config.toolTipPadding + 1;
      if (isOverRightBorder) {
        startX = offset.x - toolTipWidth - arrowWidth + 2 * config.toolTipPadding;
      }
      context.fillRect(startX, startY, legendWidth, config.fontSize);
      context.closePath();
    }
  });

  // draw text list

  textList.forEach(function (item, index) {
    var startX = offset.x + arrowWidth + 2 * config.toolTipPadding + legendWidth + legendMarginRight;
    if (isOverRightBorder) {
      startX = offset.x - toolTipWidth - arrowWidth + 2 * config.toolTipPadding + +legendWidth + legendMarginRight;
    }
    var startY = offset.y + (config.toolTipLineHeight - config.fontSize) / 2 + config.toolTipLineHeight * index +
    config.toolTipPadding;
    context.beginPath();
    context.setFontSize(config.fontSize);
    context.setFillStyle(toolTipOption.fontColor);
    context.fillText(item.text, startX, startY + config.fontSize);
    context.closePath();
    context.stroke();
  });
}

function drawYAxisTitle(title, opts, config, context) {
  var startX = config.xAxisHeight + (opts.height - config.xAxisHeight - measureText(title)) / 2;
  context.save();
  context.beginPath();
  context.setFontSize(config.fontSize);
  context.setFillStyle(opts.yAxis.titleFontColor || '#333333');
  context.translate(0, opts.height);
  context.rotate(-90 * Math.PI / 180);
  context.fillText(title, startX, opts.padding[3] + 0.5 * config.fontSize);
  context.closePath();
  context.stroke();
  context.restore();
}

function drawColumnDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;
  var columnOption = assign({}, {
    type: 'group',
    width: eachSpacing / 2,
    meter: {
      border: 4,
      fillColor: '#FFFFFF' } },

  opts.extra.column);

  var calPoints = [];
  context.save();

  var leftNum = -2;
  var rightNum = xAxisPoints.length + 2;

  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;
    rightNum = leftNum + opts.xAxis.itemCount + 4;
  }
  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {
    drawToolTipSplitArea(opts.tooltip.offset.x, opts, config, context, eachSpacing);
  }

  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;
    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();

    var data = eachSeries.data;
    switch (columnOption.type) {
      case 'group':
        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
        var tooltipPoints = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);
        calPoints.push(tooltipPoints);
        points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);
        for (var i = 0; i < points.length; i++) {
          var item = points[i];
          if (item !== null && i > leftNum && i < rightNum) {
            context.beginPath();
            context.setStrokeStyle(item.color || eachSeries.color);
            context.setLineWidth(1);
            context.setFillStyle(item.color || eachSeries.color);
            var startX = item.x - item.width / 2;
            var height = opts.height - item.y - opts.area[2];
            context.moveTo(startX, item.y);
            context.lineTo(startX + item.width - 2, item.y);
            context.lineTo(startX + item.width - 2, opts.height - opts.area[2]);
            context.lineTo(startX, opts.height - opts.area[2]);
            context.lineTo(startX, item.y);
            context.closePath();
            context.stroke();
            context.fill();
          }
        };
        break;
      case 'stack':
        // 绘制堆叠数据图
        var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);
        calPoints.push(points);
        points = fixColumeStackData(points, eachSpacing, series.length, seriesIndex, config, opts, series);

        for (var _i14 = 0; _i14 < points.length; _i14++) {
          var _item7 = points[_i14];
          if (_item7 !== null && _i14 > leftNum && _i14 < rightNum) {
            context.beginPath();
            context.setFillStyle(_item7.color || eachSeries.color);
            var startX = _item7.x - _item7.width / 2 + 1;
            var height = opts.height - _item7.y - opts.area[2];
            var height0 = opts.height - _item7.y0 - opts.area[2];
            if (seriesIndex > 0) {
              height -= height0;
            }
            context.moveTo(startX, _item7.y);
            context.fillRect(startX, _item7.y, _item7.width - 2, height);
            context.closePath();
            context.fill();
          }
        };
        break;
      case 'meter':
        // 绘制温度计数据图
        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
        calPoints.push(points);
        points = fixColumeMeterData(points, eachSpacing, series.length, seriesIndex, config, opts, columnOption.meter.border);
        if (seriesIndex == 0) {
          for (var _i15 = 0; _i15 < points.length; _i15++) {
            var _item8 = points[_i15];
            if (_item8 !== null && _i15 > leftNum && _i15 < rightNum) {
              //画背景颜色
              context.beginPath();
              context.setFillStyle(columnOption.meter.fillColor);
              var startX = _item8.x - _item8.width / 2;
              var height = opts.height - _item8.y - opts.area[2];
              context.moveTo(startX, _item8.y);
              context.fillRect(startX, _item8.y, _item8.width, height);
              context.closePath();
              context.fill();
              //画边框线
              if (columnOption.meter.border > 0) {
                context.beginPath();
                context.setStrokeStyle(eachSeries.color);
                context.setLineWidth(columnOption.meter.border * opts.pixelRatio);
                context.moveTo(startX + columnOption.meter.border * 0.5, _item8.y + height);
                context.lineTo(startX + columnOption.meter.border * 0.5, _item8.y + columnOption.meter.border * 0.5);
                context.lineTo(startX + _item8.width - columnOption.meter.border * 0.5, _item8.y + columnOption.meter.border * 0.5);
                context.lineTo(startX + _item8.width - columnOption.meter.border * 0.5, _item8.y + height);
                context.stroke();
              }
            }
          };
        } else {
          for (var _i16 = 0; _i16 < points.length; _i16++) {
            var _item9 = points[_i16];
            if (_item9 !== null && _i16 > leftNum && _i16 < rightNum) {
              context.beginPath();
              context.setFillStyle(_item9.color || eachSeries.color);
              var startX = _item9.x - _item9.width / 2;
              var height = opts.height - _item9.y - opts.area[2];
              context.moveTo(startX, _item9.y);
              context.fillRect(startX, _item9.y, _item9.width, height);
              context.closePath();
              context.fill();
            }
          };
        }
        break;}

  });

  if (opts.dataLabel !== false && process === 1) {
    series.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;
      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();
      var data = eachSeries.data;
      switch (columnOption.type) {
        case 'group':
          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
          points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);
          drawPointText(points, eachSeries, config, context);
          break;
        case 'stack':
          var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);
          drawPointText(points, eachSeries, config, context);
          break;
        case 'meter':
          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
          drawPointText(points, eachSeries, config, context);
          break;}

    });
  }

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawCandleDataPoints(series, seriesMA, opts, config, context) {
  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;
  var candleOption = assign({}, {
    color: {},
    average: {} },
  opts.extra.candle);
  candleOption.color = assign({}, {
    upLine: '#f04864',
    upFill: '#f04864',
    downLine: '#2fc25b',
    downFill: '#2fc25b' },
  candleOption.color);
  candleOption.average = assign({}, {
    show: false,
    name: [],
    day: [],
    color: config.colors },
  candleOption.average);
  opts.extra.candle = candleOption;

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;

  var calPoints = [];

  context.save();

  var leftNum = -2;
  var rightNum = xAxisPoints.length + 2;
  var leftSpace = 0;
  var rightSpace = opts.width + eachSpacing;

  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;
    rightNum = leftNum + opts.xAxis.itemCount + 4;
    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];
    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;
  }

  //画均线
  if (candleOption.average.show) {
    seriesMA.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;
      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();

      var data = eachSeries.data;
      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
      var splitPointList = splitPoints(points);

      for (var i = 0; i < splitPointList.length; i++) {
        var _points = splitPointList[i];
        context.beginPath();
        context.setStrokeStyle(eachSeries.color);
        context.setLineWidth(1);
        if (_points.length === 1) {
          context.moveTo(_points[0].x, _points[0].y);
          context.arc(_points[0].x, _points[0].y, 1, 0, 2 * Math.PI);
        } else {
          context.moveTo(_points[0].x, _points[0].y);
          var startPoint = 0;
          for (var j = 0; j < _points.length; j++) {
            var item = _points[j];
            if (startPoint == 0 && item.x > leftSpace) {
              context.moveTo(item.x, item.y);
              startPoint = 1;
            }
            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {
              var ctrlPoint = createCurveControlPoints(_points, j - 1);
              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);
            }
          }
          context.moveTo(_points[0].x, _points[0].y);
        }
        context.closePath();
        context.stroke();
      }
    });
  }
  //画K线
  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;
    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();
    var data = eachSeries.data;
    var points = getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
    calPoints.push(points);
    var splitPointList = splitPoints(points);

    for (var i = 0; i < splitPointList[0].length; i++) {
      if (i > leftNum && i < rightNum) {
        var item = splitPointList[0][i];
        context.beginPath();
        //如果上涨
        if (data[i][1] - data[i][0] > 0) {
          context.setStrokeStyle(candleOption.color.upLine);
          context.setFillStyle(candleOption.color.upFill);
          context.setLineWidth(1 * opts.pixelRatio);
          context.moveTo(item[3].x, item[3].y); //顶点
          context.lineTo(item[1].x, item[1].y); //收盘中间点
          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点
          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点
          context.lineTo(item[0].x, item[0].y); //开盘中间点
          context.lineTo(item[2].x, item[2].y); //底点
          context.lineTo(item[0].x, item[0].y); //开盘中间点
          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点
          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点
          context.lineTo(item[1].x, item[1].y); //收盘中间点
          context.moveTo(item[3].x, item[3].y); //顶点
        } else {
          context.setStrokeStyle(candleOption.color.downLine);
          context.setFillStyle(candleOption.color.downFill);
          context.setLineWidth(1 * opts.pixelRatio);
          context.moveTo(item[3].x, item[3].y); //顶点
          context.lineTo(item[0].x, item[0].y); //开盘中间点
          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点
          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点
          context.lineTo(item[1].x, item[1].y); //收盘中间点
          context.lineTo(item[2].x, item[2].y); //底点
          context.lineTo(item[1].x, item[1].y); //收盘中间点
          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点
          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点
          context.lineTo(item[0].x, item[0].y); //开盘中间点
          context.moveTo(item[3].x, item[3].y); //顶点
        }
        context.closePath();
        context.fill();
        context.stroke();
      }
    }
  });

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawAreaDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var areaOption = assign({}, {
    type: 'straight',
    opacity: 0.2,
    addLine: false,
    width: 2,
    gradient: false },
  opts.extra.area);

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;

  var endY = opts.height - opts.area[2];
  var calPoints = [];

  context.save();
  var leftSpace = 0;
  var rightSpace = opts.width + eachSpacing;
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];
    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;
  }

  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;
    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();
    var data = eachSeries.data;
    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
    calPoints.push(points);

    var splitPointList = splitPoints(points);
    for (var i = 0; i < splitPointList.length; i++) {
      var _points2 = splitPointList[i];
      // 绘制区域数
      context.beginPath();
      context.setStrokeStyle(hexToRgb(eachSeries.color, areaOption.opacity));
      if (areaOption.gradient) {
        var gradient = context.createLinearGradient(0, opts.area[0], 0, opts.height - opts.area[2]);
        gradient.addColorStop('0', hexToRgb(eachSeries.color, areaOption.opacity));
        gradient.addColorStop('1.0', hexToRgb("#FFFFFF", 0.1));
        context.setFillStyle(gradient);
      } else {
        context.setFillStyle(hexToRgb(eachSeries.color, areaOption.opacity));
      }
      context.setLineWidth(areaOption.width * opts.pixelRatio);
      if (_points2.length > 1) {
        var firstPoint = _points2[0];
        var lastPoint = _points2[_points2.length - 1];
        context.moveTo(firstPoint.x, firstPoint.y);
        var startPoint = 0;
        if (areaOption.type === 'curve') {
          for (var j = 0; j < _points2.length; j++) {
            var item = _points2[j];
            if (startPoint == 0 && item.x > leftSpace) {
              context.moveTo(item.x, item.y);
              startPoint = 1;
            }
            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {
              var ctrlPoint = createCurveControlPoints(_points2, j - 1);
              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);
            }
          };
        } else {
          for (var _j = 0; _j < _points2.length; _j++) {
            var _item10 = _points2[_j];
            if (startPoint == 0 && _item10.x > leftSpace) {
              context.moveTo(_item10.x, _item10.y);
              startPoint = 1;
            }
            if (_j > 0 && _item10.x > leftSpace && _item10.x < rightSpace) {
              context.lineTo(_item10.x, _item10.y);
            }
          };
        }

        context.lineTo(lastPoint.x, endY);
        context.lineTo(firstPoint.x, endY);
        context.lineTo(firstPoint.x, firstPoint.y);
      } else {
        var _item11 = _points2[0];
        context.moveTo(_item11.x - eachSpacing / 2, _item11.y);
        context.lineTo(_item11.x + eachSpacing / 2, _item11.y);
        context.lineTo(_item11.x + eachSpacing / 2, endY);
        context.lineTo(_item11.x - eachSpacing / 2, endY);
        context.moveTo(_item11.x - eachSpacing / 2, _item11.y);
      }
      context.closePath();
      context.fill();

      //画连线
      if (areaOption.addLine) {
        if (eachSeries.lineType == 'dash') {
          var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;
          dashLength *= opts.pixelRatio;
          context.setLineDash([dashLength, dashLength]);
        }
        context.beginPath();
        context.setStrokeStyle(eachSeries.color);
        context.setLineWidth(areaOption.width * opts.pixelRatio);
        if (_points2.length === 1) {
          context.moveTo(_points2[0].x, _points2[0].y);
          context.arc(_points2[0].x, _points2[0].y, 1, 0, 2 * Math.PI);
        } else {
          context.moveTo(_points2[0].x, _points2[0].y);
          var _startPoint = 0;
          if (areaOption.type === 'curve') {
            for (var _j2 = 0; _j2 < _points2.length; _j2++) {
              var _item12 = _points2[_j2];
              if (_startPoint == 0 && _item12.x > leftSpace) {
                context.moveTo(_item12.x, _item12.y);
                _startPoint = 1;
              }
              if (_j2 > 0 && _item12.x > leftSpace && _item12.x < rightSpace) {
                var _ctrlPoint = createCurveControlPoints(_points2, _j2 - 1);
                context.bezierCurveTo(_ctrlPoint.ctrA.x, _ctrlPoint.ctrA.y, _ctrlPoint.ctrB.x, _ctrlPoint.ctrB.y, _item12.x, _item12.y);
              }
            };
          } else {
            for (var _j3 = 0; _j3 < _points2.length; _j3++) {
              var _item13 = _points2[_j3];
              if (_startPoint == 0 && _item13.x > leftSpace) {
                context.moveTo(_item13.x, _item13.y);
                _startPoint = 1;
              }
              if (_j3 > 0 && _item13.x > leftSpace && _item13.x < rightSpace) {
                context.lineTo(_item13.x, _item13.y);
              }
            };
          }
          context.moveTo(_points2[0].x, _points2[0].y);
        }
        context.stroke();
        context.setLineDash([]);
      }
    }

    //画点
    if (opts.dataPointShape !== false) {
      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);
    }

  });

  if (opts.dataLabel !== false && process === 1) {
    series.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;
      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();
      var data = eachSeries.data;
      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
      drawPointText(points, eachSeries, config, context);
    });
  }

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawLineDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var lineOption = assign({}, {
    type: 'straight',
    width: 2 },
  opts.extra.line);
  lineOption.width *= opts.pixelRatio;

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;
  var calPoints = [];

  context.save();
  var leftSpace = 0;
  var rightSpace = opts.width + eachSpacing;
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];
    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;
  }

  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;
    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();
    var data = eachSeries.data;
    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
    calPoints.push(points);
    var splitPointList = splitPoints(points);

    if (eachSeries.lineType == 'dash') {
      var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;
      dashLength *= opts.pixelRatio;
      context.setLineDash([dashLength, dashLength]);
    }
    context.beginPath();
    context.setStrokeStyle(eachSeries.color);
    context.setLineWidth(lineOption.width);

    splitPointList.forEach(function (points, index) {

      if (points.length === 1) {
        context.moveTo(points[0].x, points[0].y);
        context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);
      } else {
        context.moveTo(points[0].x, points[0].y);
        var startPoint = 0;
        if (lineOption.type === 'curve') {
          for (var j = 0; j < points.length; j++) {
            var item = points[j];
            if (startPoint == 0 && item.x > leftSpace) {
              context.moveTo(item.x, item.y);
              startPoint = 1;
            }
            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {
              var ctrlPoint = createCurveControlPoints(points, j - 1);
              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);
            }
          };
        } else {
          for (var _j4 = 0; _j4 < points.length; _j4++) {
            var _item14 = points[_j4];
            if (startPoint == 0 && _item14.x > leftSpace) {
              context.moveTo(_item14.x, _item14.y);
              startPoint = 1;
            }
            if (_j4 > 0 && _item14.x > leftSpace && _item14.x < rightSpace) {
              context.lineTo(_item14.x, _item14.y);
            }
          };
        }
        context.moveTo(points[0].x, points[0].y);
      }

    });

    context.stroke();
    context.setLineDash([]);

    if (opts.dataPointShape !== false) {
      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);
    }
  });

  if (opts.dataLabel !== false && process === 1) {
    series.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;
      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();
      var data = eachSeries.data;
      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
      drawPointText(points, eachSeries, config, context);
    });
  }

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawMixDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;

  var endY = opts.height - opts.area[2];
  var calPoints = [];

  var columnIndex = 0;
  var columnLength = 0;
  series.forEach(function (eachSeries, seriesIndex) {
    if (eachSeries.type == 'column') {
      columnLength += 1;
    }
  });
  context.save();
  var leftNum = -2;
  var rightNum = xAxisPoints.length + 2;
  var leftSpace = 0;
  var rightSpace = opts.width + eachSpacing;
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;
    rightNum = leftNum + opts.xAxis.itemCount + 4;
    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];
    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;
  }

  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;

    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();

    var data = eachSeries.data;
    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
    calPoints.push(points);

    // 绘制柱状数据图
    if (eachSeries.type == 'column') {
      points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);
      for (var i = 0; i < points.length; i++) {
        var item = points[i];
        if (item !== null && i > leftNum && i < rightNum) {
          context.beginPath();
          context.setStrokeStyle(item.color || eachSeries.color);
          context.setLineWidth(1);
          context.setFillStyle(item.color || eachSeries.color);
          var startX = item.x - item.width / 2;
          var height = opts.height - item.y - opts.area[2];
          context.moveTo(startX, item.y);
          context.moveTo(startX, item.y);
          context.lineTo(startX + item.width - 2, item.y);
          context.lineTo(startX + item.width - 2, opts.height - opts.area[2]);
          context.lineTo(startX, opts.height - opts.area[2]);
          context.lineTo(startX, item.y);
          context.closePath();
          context.stroke();
          context.fill();
          context.closePath();
          context.fill();
        }
      }
      columnIndex += 1;
    }

    //绘制区域图数据

    if (eachSeries.type == 'area') {
      var _splitPointList = splitPoints(points);
      for (var _i17 = 0; _i17 < _splitPointList.length; _i17++) {
        var _points3 = _splitPointList[_i17];
        // 绘制区域数据
        context.beginPath();
        context.setStrokeStyle(eachSeries.color);
        context.setFillStyle(hexToRgb(eachSeries.color, 0.2));
        context.setLineWidth(2 * opts.pixelRatio);
        if (_points3.length > 1) {
          var firstPoint = _points3[0];
          var lastPoint = _points3[_points3.length - 1];
          context.moveTo(firstPoint.x, firstPoint.y);
          var startPoint = 0;
          if (eachSeries.style === 'curve') {
            for (var j = 0; j < _points3.length; j++) {
              var _item15 = _points3[j];
              if (startPoint == 0 && _item15.x > leftSpace) {
                context.moveTo(_item15.x, _item15.y);
                startPoint = 1;
              }
              if (j > 0 && _item15.x > leftSpace && _item15.x < rightSpace) {
                var ctrlPoint = createCurveControlPoints(_points3, j - 1);
                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, _item15.x, _item15.y);
              }
            };
          } else {
            for (var _j5 = 0; _j5 < _points3.length; _j5++) {
              var _item16 = _points3[_j5];
              if (startPoint == 0 && _item16.x > leftSpace) {
                context.moveTo(_item16.x, _item16.y);
                startPoint = 1;
              }
              if (_j5 > 0 && _item16.x > leftSpace && _item16.x < rightSpace) {
                context.lineTo(_item16.x, _item16.y);
              }
            };
          }
          context.lineTo(lastPoint.x, endY);
          context.lineTo(firstPoint.x, endY);
          context.lineTo(firstPoint.x, firstPoint.y);
        } else {
          var _item17 = _points3[0];
          context.moveTo(_item17.x - eachSpacing / 2, _item17.y);
          context.lineTo(_item17.x + eachSpacing / 2, _item17.y);
          context.lineTo(_item17.x + eachSpacing / 2, endY);
          context.lineTo(_item17.x - eachSpacing / 2, endY);
          context.moveTo(_item17.x - eachSpacing / 2, _item17.y);
        }
        context.closePath();
        context.fill();
      }
    }

    // 绘制折线数据图
    if (eachSeries.type == 'line') {
      var splitPointList = splitPoints(points);
      splitPointList.forEach(function (points, index) {
        if (eachSeries.lineType == 'dash') {
          var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;
          dashLength *= opts.pixelRatio;
          context.setLineDash([dashLength, dashLength]);
        }
        context.beginPath();
        context.setStrokeStyle(eachSeries.color);
        context.setLineWidth(2 * opts.pixelRatio);
        if (points.length === 1) {
          context.moveTo(points[0].x, points[0].y);
          context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);
        } else {
          context.moveTo(points[0].x, points[0].y);
          var _startPoint2 = 0;
          if (eachSeries.style == 'curve') {
            for (var _j6 = 0; _j6 < points.length; _j6++) {
              var _item18 = points[_j6];
              if (_startPoint2 == 0 && _item18.x > leftSpace) {
                context.moveTo(_item18.x, _item18.y);
                _startPoint2 = 1;
              }
              if (_j6 > 0 && _item18.x > leftSpace && _item18.x < rightSpace) {
                var ctrlPoint = createCurveControlPoints(points, _j6 - 1);
                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, _item18.x, _item18.y);
              }
            }
          } else {
            for (var _j7 = 0; _j7 < points.length; _j7++) {
              var _item19 = points[_j7];
              if (_startPoint2 == 0 && _item19.x > leftSpace) {
                context.moveTo(_item19.x, _item19.y);
                _startPoint2 = 1;
              }
              if (_j7 > 0 && _item19.x > leftSpace && _item19.x < rightSpace) {
                context.lineTo(_item19.x, _item19.y);
              }
            }
          }
          context.moveTo(points[0].x, points[0].y);
        }
        context.stroke();
        context.setLineDash([]);
      });
    }

    // 绘制点数据图
    if (eachSeries.type == 'point') {
      eachSeries.addPoint = true;
    }

    if (eachSeries.addPoint == true && eachSeries.type !== 'column') {
      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);
    }
  });
  if (opts.dataLabel !== false && process === 1) {
    var columnIndex = 0;
    series.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;

      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();

      var data = eachSeries.data;
      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
      if (eachSeries.type !== 'column') {
        drawPointText(points, eachSeries, config, context);
      } else {
        points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);
        drawPointText(points, eachSeries, config, context);
        columnIndex += 1;
      }

    });
  }

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints) {
  var toolTipOption = opts.extra.tooltip || {};
  if (toolTipOption.horizentalLine && opts.tooltip && process === 1 && (opts.type == 'line' || opts.type == 'area' || opts.type == 'column' || opts.type == 'candle' || opts.type == 'mix')) {
    drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints);
  }
  context.save();
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
  }
  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {
    drawToolTip(opts.tooltip.textList, opts.tooltip.offset, opts, config, context, eachSpacing, xAxisPoints);
  }
  context.restore();

}

function drawXAxis(categories, opts, config, context) {

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  startX = xAxisData.startX,
  endX = xAxisData.endX,
  eachSpacing = xAxisData.eachSpacing;
  var boundaryGap = 'center';
  if (opts.type == 'line' || opts.type == 'area') {
    boundaryGap = opts.xAxis.boundaryGap;
  }
  var startY = opts.height - opts.area[2];
  var endY = opts.area[0];

  //绘制滚动条
  if (opts.enableScroll && opts.xAxis.scrollShow) {
    var scrollY = opts.height - opts.area[2] + config.xAxisHeight;
    var scrollScreenWidth = endX - startX;
    var scrollTotalWidth = eachSpacing * (xAxisPoints.length - 1);
    var scrollWidth = scrollScreenWidth * scrollScreenWidth / scrollTotalWidth;
    var scrollLeft = 0;
    if (opts._scrollDistance_) {
      scrollLeft = -opts._scrollDistance_ * scrollScreenWidth / scrollTotalWidth;
    }
    context.beginPath();
    context.setLineCap('round');
    context.setLineWidth(6 * opts.pixelRatio);
    context.setStrokeStyle(opts.xAxis.scrollBackgroundColor || "#EFEBEF");
    context.moveTo(startX, scrollY);
    context.lineTo(endX, scrollY);
    context.stroke();
    context.closePath();
    context.beginPath();
    context.setLineCap('round');
    context.setLineWidth(6 * opts.pixelRatio);
    context.setStrokeStyle(opts.xAxis.scrollColor || "#A6A6A6");
    context.moveTo(startX + scrollLeft, scrollY);
    context.lineTo(startX + scrollLeft + scrollWidth, scrollY);
    context.stroke();
    context.closePath();
    context.setLineCap('butt');
  }

  context.save();

  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {
    context.translate(opts._scrollDistance_, 0);
  }

  //绘制X轴刻度线
  if (opts.xAxis.calibration === true) {
    context.setStrokeStyle(opts.xAxis.gridColor || "#cccccc");
    context.setLineCap('butt');
    context.setLineWidth(1 * opts.pixelRatio);
    xAxisPoints.forEach(function (item, index) {
      if (index > 0) {
        context.beginPath();
        context.moveTo(item - eachSpacing / 2, startY);
        context.lineTo(item - eachSpacing / 2, startY + 3 * opts.pixelRatio);
        context.closePath();
        context.stroke();
      }
    });
  }
  //绘制X轴网格
  if (opts.xAxis.disableGrid !== true) {
    context.setStrokeStyle(opts.xAxis.gridColor || "#cccccc");
    context.setLineCap('butt');
    context.setLineWidth(1 * opts.pixelRatio);
    if (opts.xAxis.gridType == 'dash') {
      context.setLineDash([opts.xAxis.dashLength, opts.xAxis.dashLength]);
    }
    opts.xAxis.gridEval = opts.xAxis.gridEval || 1;
    xAxisPoints.forEach(function (item, index) {
      if (index % opts.xAxis.gridEval == 0) {
        context.beginPath();
        context.moveTo(item, startY);
        context.lineTo(item, endY);
        context.stroke();
      }
    });
    context.setLineDash([]);
  }


  //绘制X轴文案
  if (opts.xAxis.disabled !== true) {
    // 对X轴列表做抽稀处理
    //默认全部显示X轴标签
    var maxXAxisListLength = categories.length;
    //如果设置了X轴单屏数量
    if (opts.xAxis.labelCount) {
      //如果设置X轴密度
      if (opts.xAxis.itemCount) {
        maxXAxisListLength = Math.ceil(categories.length / opts.xAxis.itemCount * opts.xAxis.labelCount);
      } else {
        maxXAxisListLength = opts.xAxis.labelCount;
      }
      maxXAxisListLength -= 1;
    }

    var ratio = Math.ceil(categories.length / maxXAxisListLength);

    var newCategories = [];
    var cgLength = categories.length;
    for (var i = 0; i < cgLength; i++) {
      if (i % ratio !== 0) {
        newCategories.push("");
      } else {
        newCategories.push(categories[i]);
      }
    }
    newCategories[cgLength - 1] = categories[cgLength - 1];

    var xAxisFontSize = opts.xAxis.fontSize || config.fontSize;
    if (config._xAxisTextAngle_ === 0) {
      newCategories.forEach(function (item, index) {
        var offset = -measureText(String(item), xAxisFontSize) / 2;
        if (boundaryGap == 'center') {
          offset += eachSpacing / 2;
        }
        var scrollHeight = 0;
        if (opts.xAxis.scrollShow) {
          scrollHeight = 6 * opts.pixelRatio;
        }
        context.beginPath();
        context.setFontSize(xAxisFontSize);
        context.setFillStyle(opts.xAxis.fontColor || '#666666');
        context.fillText(String(item), xAxisPoints[index] + offset, startY + xAxisFontSize + (config.xAxisHeight - scrollHeight - xAxisFontSize) / 2);
        context.closePath();
        context.stroke();
      });

    } else {
      newCategories.forEach(function (item, index) {
        context.save();
        context.beginPath();
        context.setFontSize(xAxisFontSize);
        context.setFillStyle(opts.xAxis.fontColor || '#666666');
        var textWidth = measureText(String(item), xAxisFontSize);
        var offset = -textWidth;
        if (boundaryGap == 'center') {
          offset += eachSpacing / 2;
        }
        var _calRotateTranslate = calRotateTranslate(xAxisPoints[index] + eachSpacing / 2, startY + xAxisFontSize / 2 + 5, opts.height),
        transX = _calRotateTranslate.transX,
        transY = _calRotateTranslate.transY;

        context.rotate(-1 * config._xAxisTextAngle_);
        context.translate(transX, transY);
        context.fillText(String(item), xAxisPoints[index] + offset, startY + xAxisFontSize + 5);
        context.closePath();
        context.stroke();
        context.restore();
      });
    }
  }
  context.restore();

  //绘制X轴轴线
  if (opts.xAxis.axisLine) {
    context.beginPath();
    context.setStrokeStyle(opts.xAxis.axisLineColor);
    context.setLineWidth(1 * opts.pixelRatio);
    context.moveTo(startX, opts.height - opts.area[2]);
    context.lineTo(endX, opts.height - opts.area[2]);
    context.stroke();
  }
}

function drawYAxisGrid(categories, opts, config, context) {
  if (opts.yAxis.disableGrid === true) {
    return;
  }
  var spacingValid = opts.height - opts.area[0] - opts.area[2];
  var eachSpacing = spacingValid / opts.yAxis.splitNumber;
  var startX = opts.area[3];
  var xAxisPoints = opts.chartData.xAxisData.xAxisPoints,
  xAxiseachSpacing = opts.chartData.xAxisData.eachSpacing;
  var TotalWidth = xAxiseachSpacing * (xAxisPoints.length - 1);
  var endX = startX + TotalWidth;

  var points = [];
  for (var i = 0; i < opts.yAxis.splitNumber + 1; i++) {
    points.push(opts.height - opts.area[2] - eachSpacing * i);
  }

  context.save();
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {
    context.translate(opts._scrollDistance_, 0);
  }

  if (opts.yAxis.gridType == 'dash') {
    context.setLineDash([opts.yAxis.dashLength, opts.yAxis.dashLength]);
  }
  context.setStrokeStyle(opts.yAxis.gridColor);
  context.setLineWidth(1 * opts.pixelRatio);
  points.forEach(function (item, index) {
    context.beginPath();
    context.moveTo(startX, item);
    context.lineTo(endX, item);
    context.stroke();
  });
  context.setLineDash([]);

  context.restore();
}

function drawYAxis(series, opts, config, context) {
  if (opts.yAxis.disabled === true) {
    return;
  }
  var spacingValid = opts.height - opts.area[0] - opts.area[2];
  var eachSpacing = spacingValid / opts.yAxis.splitNumber;
  var startX = opts.area[3];
  var endX = opts.width - opts.area[1];
  var endY = opts.height - opts.area[2];
  var fillEndY = endY + config.xAxisHeight;
  if (opts.xAxis.scrollShow) {
    fillEndY -= 3 * opts.pixelRatio;
  }
  if (opts.xAxis.rotateLabel) {
    fillEndY = opts.height - opts.area[2] + 3;
  }
  // set YAxis background
  context.beginPath();
  context.setFillStyle(opts.background || '#ffffff');
  if (opts._scrollDistance_ < 0) {
    context.fillRect(0, 0, startX, fillEndY);
  }
  if (opts.enableScroll == true) {
    context.fillRect(endX, 0, opts.width, fillEndY);
  }
  context.closePath();
  context.stroke();

  var points = [];
  for (var i = 0; i <= opts.yAxis.splitNumber; i++) {
    points.push(opts.area[0] + eachSpacing * i);
  }

  var tStartLeft = opts.area[3];
  var tStartRight = opts.width - opts.area[1];var _loop4 = function _loop4(

  _i18) {
    var yData = opts.yAxis.data[_i18];
    if (yData.disabled !== true) {
      var rangesFormat = opts.chartData.yAxisData.rangesFormat[_i18];
      var yAxisFontSize = yData.fontSize || config.fontSize;
      var yAxisWidth = opts.chartData.yAxisData.yAxisWidth[_i18];
      //画Y轴刻度及文案
      rangesFormat.forEach(function (item, index) {
        var pos = points[index] ? points[index] : endY;
        context.beginPath();
        context.setFontSize(yAxisFontSize);
        context.setLineWidth(1 * opts.pixelRatio);
        context.setStrokeStyle(yData.axisLineColor || '#cccccc');
        context.setFillStyle(yData.fontColor || '#666666');
        if (yAxisWidth.position == 'left') {
          context.fillText(String(item), tStartLeft - yAxisWidth.width, pos + yAxisFontSize / 2);
          //画刻度线
          if (yData.calibration == true) {
            context.moveTo(tStartLeft, pos);
            context.lineTo(tStartLeft - 3 * opts.pixelRatio, pos);
          }
        } else {
          context.fillText(String(item), tStartRight + 4 * opts.pixelRatio, pos + yAxisFontSize / 2);
          //画刻度线
          if (yData.calibration == true) {
            context.moveTo(tStartRight, pos);
            context.lineTo(tStartRight + 3 * opts.pixelRatio, pos);
          }
        }
        context.closePath();
        context.stroke();
      });
      //画Y轴轴线
      if (yData.axisLine !== false) {
        context.beginPath();
        context.setStrokeStyle(yData.axisLineColor || '#cccccc');
        context.setLineWidth(1 * opts.pixelRatio);
        if (yAxisWidth.position == 'left') {
          context.moveTo(tStartLeft, opts.height - opts.area[2]);
          context.lineTo(tStartLeft, opts.area[0]);
        } else {
          context.moveTo(tStartRight, opts.height - opts.area[2]);
          context.lineTo(tStartRight, opts.area[0]);
        }
        context.stroke();
      }

      //画Y轴标题
      if (opts.yAxis.showTitle) {

        var titleFontSize = yData.titleFontSize || config.fontSize;
        var title = yData.title;
        context.beginPath();
        context.setFontSize(titleFontSize);
        context.setFillStyle(yData.titleFontColor || '#666666');
        if (yAxisWidth.position == 'left') {
          context.fillText(title, tStartLeft - measureText(title, titleFontSize) / 2, opts.area[0] - 10 * opts.pixelRatio);
        } else {
          context.fillText(title, tStartRight - measureText(title, titleFontSize) / 2, opts.area[0] - 10 * opts.pixelRatio);
        }
        context.closePath();
        context.stroke();
      }
      if (yAxisWidth.position == 'left') {
        tStartLeft -= yAxisWidth.width + opts.yAxis.padding;
      } else {
        tStartRight += yAxisWidth.width + opts.yAxis.padding;
      }
    }};for (var _i18 = 0; _i18 < opts.yAxis.data.length; _i18++) {_loop4(_i18);
  }
}

function drawLegend(series, opts, config, context, chartData) {
  if (opts.legend.show === false) {
    return;
  }
  var legendData = chartData.legendData;
  var legendList = legendData.points;
  var legendArea = legendData.area;
  var padding = opts.legend.padding;
  var fontSize = opts.legend.fontSize;
  var shapeWidth = 15 * opts.pixelRatio;
  var shapeRight = 5 * opts.pixelRatio;
  var itemGap = opts.legend.itemGap;
  var lineHeight = Math.max(opts.legend.lineHeight * opts.pixelRatio, fontSize);

  //画背景及边框
  context.beginPath();
  context.setLineWidth(opts.legend.borderWidth);
  context.setStrokeStyle(opts.legend.borderColor);
  context.setFillStyle(opts.legend.backgroundColor);
  context.moveTo(legendArea.start.x, legendArea.start.y);
  context.rect(legendArea.start.x, legendArea.start.y, legendArea.width, legendArea.height);
  context.closePath();
  context.fill();
  context.stroke();

  legendList.forEach(function (itemList, listIndex) {
    var width = 0;
    var height = 0;
    width = legendData.widthArr[listIndex];
    height = legendData.heightArr[listIndex];
    var startX = 0;
    var startY = 0;
    if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {
      startX = legendArea.start.x + (legendArea.width - width) / 2;
      startY = legendArea.start.y + padding + listIndex * lineHeight;
    } else {
      if (listIndex == 0) {
        width = 0;
      } else {
        width = legendData.widthArr[listIndex - 1];
      }
      startX = legendArea.start.x + padding + width;
      startY = legendArea.start.y + padding + (legendArea.height - height) / 2;
    }

    context.setFontSize(config.fontSize);
    for (var i = 0; i < itemList.length; i++) {
      var item = itemList[i];
      item.area = [0, 0, 0, 0];
      item.area[0] = startX;
      item.area[1] = startY;
      item.area[3] = startY + lineHeight;
      context.beginPath();
      context.setLineWidth(1 * opts.pixelRatio);
      context.setStrokeStyle(item.show ? item.color : opts.legend.hiddenColor);
      context.setFillStyle(item.show ? item.color : opts.legend.hiddenColor);
      switch (item.legendShape) {
        case 'line':
          context.moveTo(startX, startY + 0.5 * lineHeight - 2 * opts.pixelRatio);
          context.fillRect(startX, startY + 0.5 * lineHeight - 2 * opts.pixelRatio, 15 * opts.pixelRatio, 4 * opts.pixelRatio);
          break;
        case 'triangle':
          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          context.lineTo(startX + 2.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);
          context.lineTo(startX + 12.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);
          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          break;
        case 'diamond':
          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          context.lineTo(startX + 2.5 * opts.pixelRatio, startY + 0.5 * lineHeight);
          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);
          context.lineTo(startX + 12.5 * opts.pixelRatio, startY + 0.5 * lineHeight);
          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          break;
        case 'circle':
          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight);
          context.arc(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight, 5 * opts.pixelRatio, 0, 2 * Math.PI);
          break;
        case 'rect':
          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio, 15 * opts.pixelRatio, 10 * opts.pixelRatio);
          break;
        default:
          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio, 15 * opts.pixelRatio, 10 * opts.pixelRatio);}

      context.closePath();
      context.fill();
      context.stroke();

      startX += shapeWidth + shapeRight;
      var fontTrans = 0.5 * lineHeight + 0.5 * fontSize - 2;
      context.beginPath();
      context.setFontSize(fontSize);
      context.setFillStyle(item.show ? opts.legend.fontColor : opts.legend.hiddenColor);
      context.fillText(item.name, startX, startY + fontTrans);
      context.closePath();
      context.stroke();
      if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {
        startX += measureText(item.name, fontSize) + itemGap;
        item.area[2] = startX;
      } else {
        item.area[2] = startX + measureText(item.name, fontSize) + itemGap;;
        startX -= shapeWidth + shapeRight;
        startY += lineHeight;
      }
    }
  });
}

function drawPieDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var pieOption = assign({}, {
    activeOpacity: 0.5,
    activeRadius: 10 * opts.pixelRatio,
    offsetAngle: 0,
    labelWidth: 15 * opts.pixelRatio,
    ringWidth: 0,
    border: false,
    borderWidth: 2,
    borderColor: '#FFFFFF' },
  opts.extra.pie);
  var centerPosition = {
    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,
    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };

  if (config.pieChartLinePadding == 0) {
    config.pieChartLinePadding = pieOption.activeRadius;
  }

  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);

  series = getPieDataPoints(series, radius, process);

  var activeRadius = pieOption.activeRadius;

  series = series.map(function (eachSeries) {
    eachSeries._start_ += pieOption.offsetAngle * Math.PI / 180;
    return eachSeries;
  });
  series.forEach(function (eachSeries, seriesIndex) {
    if (opts.tooltip) {
      if (opts.tooltip.index == seriesIndex) {
        context.beginPath();
        context.setFillStyle(hexToRgb(eachSeries.color, opts.extra.pie.activeOpacity || 0.5));
        context.moveTo(centerPosition.x, centerPosition.y);
        context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_ + activeRadius, eachSeries._start_,
        eachSeries._start_ + 2 *
        eachSeries._proportion_ * Math.PI);
        context.closePath();
        context.fill();
      }
    }
    context.beginPath();
    context.setLineWidth(pieOption.borderWidth * opts.pixelRatio);
    context.lineJoin = "round";
    context.setStrokeStyle(pieOption.borderColor);
    context.setFillStyle(eachSeries.color);
    context.moveTo(centerPosition.x, centerPosition.y);
    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._proportion_ * Math.PI);
    context.closePath();
    context.fill();
    if (pieOption.border == true) {
      context.stroke();
    }
  });

  if (opts.type === 'ring') {
    var innerPieWidth = radius * 0.6;
    if (typeof opts.extra.pie.ringWidth === 'number' && opts.extra.pie.ringWidth > 0) {
      innerPieWidth = Math.max(0, radius - opts.extra.pie.ringWidth);
    }
    context.beginPath();
    context.setFillStyle(opts.background || '#ffffff');
    context.moveTo(centerPosition.x, centerPosition.y);
    context.arc(centerPosition.x, centerPosition.y, innerPieWidth, 0, 2 * Math.PI);
    context.closePath();
    context.fill();
  }

  if (opts.dataLabel !== false && process === 1) {
    var valid = false;
    for (var i = 0, len = series.length; i < len; i++) {
      if (series[i].data > 0) {
        valid = true;
        break;
      }
    }

    if (valid) {
      drawPieText(series, opts, config, context, radius, centerPosition);
    }
  }

  if (process === 1 && opts.type === 'ring') {
    drawRingTitle(opts, config, context, centerPosition);
  }

  return {
    center: centerPosition,
    radius: radius,
    series: series };

}

function drawRoseDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var roseOption = assign({}, {
    type: 'area',
    activeOpacity: 0.5,
    activeRadius: 10 * opts.pixelRatio,
    offsetAngle: 0,
    labelWidth: 15 * opts.pixelRatio,
    border: false,
    borderWidth: 2,
    borderColor: '#FFFFFF' },
  opts.extra.rose);
  if (config.pieChartLinePadding == 0) {
    config.pieChartLinePadding = roseOption.activeRadius;
  }
  var centerPosition = {
    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,
    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };

  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);
  var minRadius = roseOption.minRadius || radius * 0.5;

  series = getRoseDataPoints(series, roseOption.type, minRadius, radius, process);

  var activeRadius = roseOption.activeRadius;

  series = series.map(function (eachSeries) {
    eachSeries._start_ += (roseOption.offsetAngle || 0) * Math.PI / 180;
    return eachSeries;
  });

  series.forEach(function (eachSeries, seriesIndex) {
    if (opts.tooltip) {
      if (opts.tooltip.index == seriesIndex) {
        context.beginPath();
        context.setFillStyle(hexToRgb(eachSeries.color, roseOption.activeOpacity || 0.5));
        context.moveTo(centerPosition.x, centerPosition.y);
        context.arc(centerPosition.x, centerPosition.y, activeRadius + eachSeries._radius_, eachSeries._start_,
        eachSeries._start_ + 2 * eachSeries._rose_proportion_ * Math.PI);
        context.closePath();
        context.fill();
      }
    }
    context.beginPath();
    context.setLineWidth(roseOption.borderWidth * opts.pixelRatio);
    context.lineJoin = "round";
    context.setStrokeStyle(roseOption.borderColor);
    context.setFillStyle(eachSeries.color);
    context.moveTo(centerPosition.x, centerPosition.y);
    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 *
    eachSeries._rose_proportion_ * Math.PI);
    context.closePath();
    context.fill();
    if (roseOption.border == true) {
      context.stroke();
    }
  });

  if (opts.dataLabel !== false && process === 1) {
    var valid = false;
    for (var i = 0, len = series.length; i < len; i++) {
      if (series[i].data > 0) {
        valid = true;
        break;
      }
    }

    if (valid) {
      drawPieText(series, opts, config, context, radius, centerPosition);
    }
  }

  return {
    center: centerPosition,
    radius: radius,
    series: series };

}

function drawArcbarDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var arcbarOption = assign({}, {
    startAngle: 0.75,
    endAngle: 0.25,
    type: 'default',
    width: 12 * opts.pixelRatio,
    gap: 2 * opts.pixelRatio },
  opts.extra.arcbar);

  series = getArcbarDataPoints(series, arcbarOption, process);

  var centerPosition;
  if (arcbarOption.center) {
    centerPosition = arcbarOption.center;
  } else {
    centerPosition = {
      x: opts.width / 2,
      y: opts.height / 2 };

  }

  var radius;
  if (arcbarOption.radius) {
    radius = arcbarOption.radius;
  } else {
    radius = Math.min(centerPosition.x, centerPosition.y);
    radius -= 5 * opts.pixelRatio;
    radius -= arcbarOption.width / 2;
  }

  for (var i = 0; i < series.length; i++) {
    var eachSeries = series[i];
    //背景颜色
    context.setLineWidth(arcbarOption.width);
    context.setStrokeStyle(arcbarOption.backgroundColor || '#E9E9E9');
    context.setLineCap('round');
    context.beginPath();
    if (arcbarOption.type == 'default') {
      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, arcbarOption.startAngle * Math.PI, arcbarOption.endAngle * Math.PI, false);
    } else {
      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, 0, 2 * Math.PI, false);
    }
    context.stroke();
    //进度条
    context.setLineWidth(arcbarOption.width);
    context.setStrokeStyle(eachSeries.color);
    context.setLineCap('round');
    context.beginPath();
    context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, arcbarOption.startAngle * Math.PI, eachSeries._proportion_ * Math.PI, false);
    context.stroke();
  }

  drawRingTitle(opts, config, context, centerPosition);

  return {
    center: centerPosition,
    radius: radius,
    series: series };

}

function drawGaugeDataPoints(categories, series, opts, config, context) {
  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;
  var gaugeOption = assign({}, {
    type: 'default',
    startAngle: 0.75,
    endAngle: 0.25,
    width: 15,
    splitLine: {
      fixRadius: 0,
      splitNumber: 10,
      width: 15,
      color: '#FFFFFF',
      childNumber: 5,
      childWidth: 5 },

    pointer: {
      width: 15,
      color: 'auto' } },

  opts.extra.gauge);

  if (gaugeOption.oldAngle == undefined) {
    gaugeOption.oldAngle = gaugeOption.startAngle;
  }
  if (gaugeOption.oldData == undefined) {
    gaugeOption.oldData = 0;
  }
  categories = getGaugeAxisPoints(categories, gaugeOption.startAngle, gaugeOption.endAngle);

  var centerPosition = {
    x: opts.width / 2,
    y: opts.height / 2 };

  var radius = Math.min(centerPosition.x, centerPosition.y);
  radius -= 5 * opts.pixelRatio;
  radius -= gaugeOption.width / 2;
  var innerRadius = radius - gaugeOption.width;
  var totalAngle = 0;

  //判断仪表盘的样式：default百度样式，progress新样式
  if (gaugeOption.type == 'progress') {

    //## 第一步画中心圆形背景和进度条背景
    //中心圆形背景
    var pieRadius = radius - gaugeOption.width * 3;
    context.beginPath();
    var gradient = context.createLinearGradient(centerPosition.x, centerPosition.y - pieRadius, centerPosition.x, centerPosition.y + pieRadius);
    //配置渐变填充（起点：中心点向上减半径；结束点中心点向下加半径）
    gradient.addColorStop('0', hexToRgb(series[0].color, 0.3));
    gradient.addColorStop('1.0', hexToRgb("#FFFFFF", 0.1));
    context.setFillStyle(gradient);
    context.arc(centerPosition.x, centerPosition.y, pieRadius, 0, 2 * Math.PI, false);
    context.fill();
    //画进度条背景
    context.setLineWidth(gaugeOption.width);
    context.setStrokeStyle(hexToRgb(series[0].color, 0.3));
    context.setLineCap('round');
    context.beginPath();
    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, gaugeOption.endAngle * Math.PI, false);
    context.stroke();

    //## 第二步画刻度线
    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;
    var splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;
    var childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;
    var startX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;
    var endX = -radius - gaugeOption.width - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;
    context.save();
    context.translate(centerPosition.x, centerPosition.y);
    context.rotate((gaugeOption.startAngle - 1) * Math.PI);
    var len = gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1;
    var proc = series[0].data * process;
    for (var i = 0; i < len; i++) {
      context.beginPath();
      //刻度线随进度变色
      if (proc > i / len) {
        context.setStrokeStyle(hexToRgb(series[0].color, 1));
      } else {
        context.setStrokeStyle(hexToRgb(series[0].color, 0.3));
      }
      context.setLineWidth(3 * opts.pixelRatio);
      context.moveTo(startX, 0);
      context.lineTo(endX, 0);
      context.stroke();
      context.rotate(childAngle * Math.PI);
    }
    context.restore();

    //## 第三步画进度条
    series = getArcbarDataPoints(series, gaugeOption, process);
    context.setLineWidth(gaugeOption.width);
    context.setStrokeStyle(series[0].color);
    context.setLineCap('round');
    context.beginPath();
    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, series[0]._proportion_ * Math.PI, false);
    context.stroke();

    //## 第四步画指针
    var pointerRadius = radius - gaugeOption.width * 2.5;
    context.save();
    context.translate(centerPosition.x, centerPosition.y);
    context.rotate((series[0]._proportion_ - 1) * Math.PI);
    context.beginPath();
    context.setLineWidth(gaugeOption.width / 3);
    var gradient3 = context.createLinearGradient(0, -pointerRadius * 0.6, 0, pointerRadius * 0.6);
    gradient3.addColorStop('0', hexToRgb('#FFFFFF', 0));
    gradient3.addColorStop('0.5', hexToRgb(series[0].color, 1));
    gradient3.addColorStop('1.0', hexToRgb('#FFFFFF', 0));
    context.setStrokeStyle(gradient3);
    context.arc(0, 0, pointerRadius, 0.85 * Math.PI, 1.15 * Math.PI, false);
    context.stroke();
    context.beginPath();
    context.setLineWidth(1);
    context.setStrokeStyle(series[0].color);
    context.setFillStyle(series[0].color);
    context.moveTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);
    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2 - 4, 0);
    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, 4);
    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);
    context.stroke();
    context.fill();
    context.restore();

    //default百度样式
  } else {
    //画背景
    context.setLineWidth(gaugeOption.width);
    context.setLineCap('butt');
    for (var _i19 = 0; _i19 < categories.length; _i19++) {
      var eachCategories = categories[_i19];
      context.beginPath();
      context.setStrokeStyle(eachCategories.color);
      context.arc(centerPosition.x, centerPosition.y, radius, eachCategories._startAngle_ * Math.PI, eachCategories._endAngle_ * Math.PI, false);
      context.stroke();
    }
    context.save();

    //画刻度线
    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;
    var _splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;
    var _childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;
    var _startX2 = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;
    var _endX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;
    var childendX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.childWidth;

    context.translate(centerPosition.x, centerPosition.y);
    context.rotate((gaugeOption.startAngle - 1) * Math.PI);

    for (var _i20 = 0; _i20 < gaugeOption.splitLine.splitNumber + 1; _i20++) {
      context.beginPath();
      context.setStrokeStyle(gaugeOption.splitLine.color);
      context.setLineWidth(2 * opts.pixelRatio);
      context.moveTo(_startX2, 0);
      context.lineTo(_endX, 0);
      context.stroke();
      context.rotate(_splitAngle * Math.PI);
    }
    context.restore();

    context.save();
    context.translate(centerPosition.x, centerPosition.y);
    context.rotate((gaugeOption.startAngle - 1) * Math.PI);

    for (var _i21 = 0; _i21 < gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1; _i21++) {
      context.beginPath();
      context.setStrokeStyle(gaugeOption.splitLine.color);
      context.setLineWidth(1 * opts.pixelRatio);
      context.moveTo(_startX2, 0);
      context.lineTo(childendX, 0);
      context.stroke();
      context.rotate(_childAngle * Math.PI);
    }
    context.restore();

    //画指针
    series = getGaugeDataPoints(series, categories, gaugeOption, process);

    for (var _i22 = 0; _i22 < series.length; _i22++) {
      var eachSeries = series[_i22];
      context.save();
      context.translate(centerPosition.x, centerPosition.y);
      context.rotate((eachSeries._proportion_ - 1) * Math.PI);
      context.beginPath();
      context.setFillStyle(eachSeries.color);
      context.moveTo(gaugeOption.pointer.width, 0);
      context.lineTo(0, -gaugeOption.pointer.width / 2);
      context.lineTo(-innerRadius, 0);
      context.lineTo(0, gaugeOption.pointer.width / 2);
      context.lineTo(gaugeOption.pointer.width, 0);
      context.closePath();
      context.fill();
      context.beginPath();
      context.setFillStyle('#FFFFFF');
      context.arc(0, 0, gaugeOption.pointer.width / 6, 0, 2 * Math.PI, false);
      context.fill();
      context.restore();
    }

    if (opts.dataLabel !== false) {
      drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context);
    }
  }

  //画仪表盘标题，副标题
  drawRingTitle(opts, config, context, centerPosition);

  if (process === 1 && opts.type === 'gauge') {
    opts.extra.gauge.oldAngle = series[0]._proportion_;
    opts.extra.gauge.oldData = series[0].data;
  }
  return {
    center: centerPosition,
    radius: radius,
    innerRadius: innerRadius,
    categories: categories,
    totalAngle: totalAngle };

}

function drawRadarDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var radarOption = assign({}, {
    gridColor: '#cccccc',
    labelColor: '#666666',
    opacity: 0.2,
    gridCount: 3 },
  opts.extra.radar);

  var coordinateAngle = getRadarCoordinateSeries(opts.categories.length);

  var centerPosition = {
    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,
    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };


  var radius = Math.min(centerPosition.x - (getMaxTextListLength(opts.categories) + config.radarLabelTextMargin),
  centerPosition.y - config.radarLabelTextMargin);
  //TODO逻辑不对
  radius -= opts.padding[1];

  // draw grid
  context.beginPath();
  context.setLineWidth(1 * opts.pixelRatio);
  context.setStrokeStyle(radarOption.gridColor);
  coordinateAngle.forEach(function (angle) {
    var pos = convertCoordinateOrigin(radius * Math.cos(angle), radius * Math.sin(angle), centerPosition);
    context.moveTo(centerPosition.x, centerPosition.y);
    context.lineTo(pos.x, pos.y);
  });
  context.stroke();
  context.closePath();
  // draw split line grid

  var _loop = function _loop(i) {
    var startPos = {};
    context.beginPath();
    context.setLineWidth(1 * opts.pixelRatio);
    context.setStrokeStyle(radarOption.gridColor);
    coordinateAngle.forEach(function (angle, index) {
      var pos = convertCoordinateOrigin(radius / radarOption.gridCount * i * Math.cos(angle), radius / radarOption.gridCount * i * Math.sin(angle), centerPosition);
      if (index === 0) {
        startPos = pos;
        context.moveTo(pos.x, pos.y);
      } else {
        context.lineTo(pos.x, pos.y);
      }
    });
    context.lineTo(startPos.x, startPos.y);
    context.stroke();
    context.closePath();
  };

  for (var i = 1; i <= radarOption.gridCount; i++) {
    _loop(i);
  }

  var radarDataPoints = getRadarDataPoints(coordinateAngle, centerPosition, radius, series, opts, process);

  radarDataPoints.forEach(function (eachSeries, seriesIndex) {
    // 绘制区域数据
    context.beginPath();
    context.setFillStyle(hexToRgb(eachSeries.color, radarOption.opacity));
    eachSeries.data.forEach(function (item, index) {
      if (index === 0) {
        context.moveTo(item.position.x, item.position.y);
      } else {
        context.lineTo(item.position.x, item.position.y);
      }
    });
    context.closePath();
    context.fill();

    if (opts.dataPointShape !== false) {
      var points = eachSeries.data.map(function (item) {
        return item.position;
      });
      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);
    }
  });
  // draw label text
  drawRadarLabel(coordinateAngle, radius, centerPosition, opts, config, context);

  return {
    center: centerPosition,
    radius: radius,
    angleList: coordinateAngle };

}

function normalInt(min, max, iter) {
  iter = iter == 0 ? 1 : iter;
  var arr = [];
  for (var i = 0; i < iter; i++) {
    arr[i] = Math.random();
  };
  return Math.floor(arr.reduce(function (i, j) {return i + j;}) / iter * (max - min)) + min;
};

function collisionNew(area, points, width, height) {
  var isIn = false;
  for (var i = 0; i < points.length; i++) {
    if (points[i].area) {
      if (area[3] < points[i].area[1] || area[0] > points[i].area[2] || area[1] > points[i].area[3] || area[2] < points[i].area[0]) {
        if (area[0] < 0 || area[1] < 0 || area[2] > width || area[3] > height) {
          isIn = true;
          break;
        } else {
          isIn = false;
        }
      } else {
        isIn = true;
        break;
      }
    }
  }
  return isIn;
};

function getBoundingBox(data) {
  var bounds = {},coords;
  bounds.xMin = 180;
  bounds.xMax = 0;
  bounds.yMin = 90;
  bounds.yMax = 0;
  for (var i = 0; i < data.length; i++) {
    var coorda = data[i].geometry.coordinates;
    for (var k = 0; k < coorda.length; k++) {
      coords = coorda[k];
      if (coords.length == 1) {
        coords = coords[0];
      }
      for (var j = 0; j < coords.length; j++) {
        var longitude = coords[j][0];
        var latitude = coords[j][1];
        var point = {
          x: longitude,
          y: latitude };

        bounds.xMin = bounds.xMin < point.x ? bounds.xMin : point.x;
        bounds.xMax = bounds.xMax > point.x ? bounds.xMax : point.x;
        bounds.yMin = bounds.yMin < point.y ? bounds.yMin : point.y;
        bounds.yMax = bounds.yMax > point.y ? bounds.yMax : point.y;
      }
    }
  }
  return bounds;
}

function coordinateToPoint(latitude, longitude, bounds, scale, xoffset, yoffset) {
  return {
    x: (longitude - bounds.xMin) * scale + xoffset,
    y: (bounds.yMax - latitude) * scale + yoffset };

}

function pointToCoordinate(pointY, pointX, bounds, scale, xoffset, yoffset) {
  return {
    x: (pointX - xoffset) / scale + bounds.xMin,
    y: bounds.yMax - (pointY - yoffset) / scale };

}

function isRayIntersectsSegment(poi, s_poi, e_poi) {
  if (s_poi[1] == e_poi[1]) {return false;}
  if (s_poi[1] > poi[1] && e_poi[1] > poi[1]) {return false;}
  if (s_poi[1] < poi[1] && e_poi[1] < poi[1]) {return false;}
  if (s_poi[1] == poi[1] && e_poi[1] > poi[1]) {return false;}
  if (e_poi[1] == poi[1] && s_poi[1] > poi[1]) {return false;}
  if (s_poi[0] < poi[0] && e_poi[1] < poi[1]) {return false;}
  var xseg = e_poi[0] - (e_poi[0] - s_poi[0]) * (e_poi[1] - poi[1]) / (e_poi[1] - s_poi[1]);
  if (xseg < poi[0]) {
    return false;
  } else {
    return true;
  }
}

function isPoiWithinPoly(poi, poly) {
  var sinsc = 0;
  for (var i = 0; i < poly.length; i++) {
    var epoly = poly[i][0];
    if (poly.length == 1) {
      epoly = poly[i][0];
    }
    for (var j = 0; j < epoly.length - 1; j++) {
      var s_poi = epoly[j];
      var e_poi = epoly[j + 1];
      if (isRayIntersectsSegment(poi, s_poi, e_poi)) {
        sinsc += 1;
      }
    }
  }

  if (sinsc % 2 == 1) {
    return true;
  } else {
    return false;
  }
}


function drawMapDataPoints(series, opts, config, context) {
  var mapOption = assign({}, {
    border: true,
    borderWidth: 1,
    borderColor: '#666666',
    fillOpacity: 0.6,
    activeBorderColor: '#f04864',
    activeFillColor: '#facc14',
    activeFillOpacity: 1 },
  opts.extra.map);
  var coords, point;
  var data = series;
  var bounds = getBoundingBox(data);
  var xScale = opts.width / Math.abs(bounds.xMax - bounds.xMin);
  var yScale = opts.height / Math.abs(bounds.yMax - bounds.yMin);
  var scale = xScale < yScale ? xScale : yScale;
  var xoffset = opts.width / 2 - Math.abs(bounds.xMax - bounds.xMin) / 2 * scale;
  var yoffset = opts.height / 2 - Math.abs(bounds.yMax - bounds.yMin) / 2 * scale;
  context.beginPath();
  context.clearRect(0, 0, opts.width, opts.height);
  context.setFillStyle(opts.background || '#FFFFFF');
  context.rect(0, 0, opts.width, opts.height);
  context.fill();
  for (var i = 0; i < data.length; i++) {
    context.beginPath();
    context.setLineWidth(mapOption.borderWidth * opts.pixelRatio);
    context.setStrokeStyle(mapOption.borderColor);
    context.setFillStyle(hexToRgb(series[i].color, mapOption.fillOpacity));
    if (opts.tooltip) {
      if (opts.tooltip.index == i) {
        context.setStrokeStyle(mapOption.activeBorderColor);
        context.setFillStyle(hexToRgb(mapOption.activeFillColor, mapOption.activeFillOpacity));
      }
    }
    var coorda = data[i].geometry.coordinates;
    for (var k = 0; k < coorda.length; k++) {
      coords = coorda[k];
      if (coords.length == 1) {
        coords = coords[0];
      }
      for (var j = 0; j < coords.length; j++) {
        point = coordinateToPoint(coords[j][1], coords[j][0], bounds, scale, xoffset, yoffset);
        if (j === 0) {
          context.beginPath();
          context.moveTo(point.x, point.y);
        } else {
          context.lineTo(point.x, point.y);
        }
      }
      context.fill();
      if (mapOption.border == true) {
        context.stroke();
      }
    }
    if (opts.dataLabel == true) {
      var centerPoint = data[i].properties.centroid;
      if (centerPoint) {
        point = coordinateToPoint(centerPoint[1], centerPoint[0], bounds, scale, xoffset, yoffset);
        var fontSize = data[i].textSize || config.fontSize;
        var text = data[i].properties.name;
        context.beginPath();
        context.setFontSize(fontSize);
        context.setFillStyle(data[i].textColor || '#666666');
        context.fillText(text, point.x - measureText(text, fontSize) / 2, point.y + fontSize / 2);
        context.closePath();
        context.stroke();
      }
    }
  }
  opts.chartData.mapData = {
    bounds: bounds,
    scale: scale,
    xoffset: xoffset,
    yoffset: yoffset };

  drawToolTipBridge(opts, config, context, 1);
  context.draw();
}

function getWordCloudPoint(opts, type) {
  var points = opts.series.sort(function (a, b) {return parseInt(b.textSize) - parseInt(a.textSize);});
  switch (type) {
    case 'normal':
      for (var i = 0; i < points.length; i++) {
        var text = points[i].name;
        var tHeight = points[i].textSize;
        var tWidth = measureText(text, tHeight);
        var x = void 0,y = void 0;
        var area = void 0;
        var breaknum = 0;
        while (true) {
          breaknum++;
          x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;
          y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;
          area = [x - 5 + opts.width / 2, y - 5 - tHeight + opts.height / 2, x + tWidth + 5 + opts.width / 2, y + 5 + opts.height / 2];
          var isCollision = collisionNew(area, points, opts.width, opts.height);
          if (!isCollision) break;
          if (breaknum == 1000) {
            area = [-100, -100, -100, -100];
            break;
          }
        };
        points[i].area = area;
      }
      break;
    case 'vertical':var
      Spin = function Spin() {
        //获取均匀随机值，是否旋转，旋转的概率为（1-0.5）
        if (Math.random() > 0.7) {
          return true;
        } else {return false;};
      };;
      for (var _i23 = 0; _i23 < points.length; _i23++) {
        var _text = points[_i23].name;
        var _tHeight = points[_i23].textSize;
        var _tWidth = measureText(_text, _tHeight);
        var isSpin = Spin();
        var _x = void 0,_y = void 0,_area = void 0,areav = void 0;
        var _breaknum = 0;
        while (true) {
          _breaknum++;
          var _isCollision = void 0;
          if (isSpin) {
            _x = normalInt(-opts.width / 2, opts.width / 2, 5) - _tWidth / 2;
            _y = normalInt(-opts.height / 2, opts.height / 2, 5) + _tHeight / 2;
            _area = [_y - 5 - _tWidth + opts.width / 2, -_x - 5 + opts.height / 2, _y + 5 + opts.width / 2, -_x + _tHeight + 5 + opts.height / 2];
            areav = [opts.width - (opts.width / 2 - opts.height / 2) - (-_x + _tHeight + 5 + opts.height / 2) - 5, opts.height / 2 - opts.width / 2 + (_y - 5 - _tWidth + opts.width / 2) - 5, opts.width - (opts.width / 2 - opts.height / 2) - (-_x + _tHeight + 5 + opts.height / 2) + _tHeight, opts.height / 2 - opts.width / 2 + (_y - 5 - _tWidth + opts.width / 2) + _tWidth + 5];
            _isCollision = collisionNew(areav, points, opts.height, opts.width);
          } else {
            _x = normalInt(-opts.width / 2, opts.width / 2, 5) - _tWidth / 2;
            _y = normalInt(-opts.height / 2, opts.height / 2, 5) + _tHeight / 2;
            _area = [_x - 5 + opts.width / 2, _y - 5 - _tHeight + opts.height / 2, _x + _tWidth + 5 + opts.width / 2, _y + 5 + opts.height / 2];
            _isCollision = collisionNew(_area, points, opts.width, opts.height);
          }
          if (!_isCollision) break;
          if (_breaknum == 1000) {
            _area = [-1000, -1000, -1000, -1000];
            break;
          }
        };
        if (isSpin) {
          points[_i23].area = areav;
          points[_i23].areav = _area;
        } else {
          points[_i23].area = _area;
        }
        points[_i23].rotate = isSpin;
      };
      break;}

  return points;
}


function drawWordCloudDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var wordOption = assign({}, {
    type: 'normal',
    autoColors: true },
  opts.extra.word);

  context.beginPath();
  context.setFillStyle(opts.background || '#FFFFFF');
  context.rect(0, 0, opts.width, opts.height);
  context.fill();
  context.save();
  var points = opts.chartData.wordCloudData;
  context.translate(opts.width / 2, opts.height / 2);

  for (var i = 0; i < points.length; i++) {
    context.save();
    if (points[i].rotate) {
      context.rotate(90 * Math.PI / 180);
    }
    var text = points[i].name;
    var tHeight = points[i].textSize;
    var tWidth = measureText(text, tHeight);
    context.beginPath();
    context.setStrokeStyle(points[i].color);
    context.setFillStyle(points[i].color);
    context.setFontSize(tHeight);
    if (points[i].rotate) {
      if (points[i].areav[0] > 0) {
        if (opts.tooltip) {
          if (opts.tooltip.index == i) {
            context.strokeText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);
          } else {
            context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);
          }
        } else {
          context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);
        }
      }
    } else {
      if (points[i].area[0] > 0) {
        if (opts.tooltip) {
          if (opts.tooltip.index == i) {
            context.strokeText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);
          } else {
            context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);
          }
        } else {
          context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);
        }

      }
    }

    context.stroke();
    context.restore();
  }
  context.restore();
}

function drawFunnelDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var funnelOption = assign({}, {
    activeWidth: 10,
    activeOpacity: 0.3,
    border: false,
    borderWidth: 2,
    borderColor: '#FFFFFF',
    fillOpacity: 1,
    labelAlign: 'right' },
  opts.extra.funnel);
  var eachSpacing = (opts.height - opts.area[0] - opts.area[2]) / series.length;
  var centerPosition = {
    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,
    y: opts.height - opts.area[2] };

  var activeWidth = funnelOption.activeWidth;
  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - activeWidth, (opts.height - opts.area[0] - opts.area[2]) / 2 - activeWidth);
  series = getFunnelDataPoints(series, radius, process);
  context.save();
  context.translate(centerPosition.x, centerPosition.y);
  for (var i = 0; i < series.length; i++) {
    if (i == 0) {
      if (opts.tooltip) {
        if (opts.tooltip.index == i) {
          context.beginPath();
          context.setFillStyle(hexToRgb(series[i].color, funnelOption.activeOpacity));
          context.moveTo(-activeWidth, 0);
          context.lineTo(-series[i].radius - activeWidth, -eachSpacing);
          context.lineTo(series[i].radius + activeWidth, -eachSpacing);
          context.lineTo(activeWidth, 0);
          context.lineTo(-activeWidth, 0);
          context.closePath();
          context.fill();
        }
      }
      series[i].funnelArea = [centerPosition.x - series[i].radius, centerPosition.y - eachSpacing, centerPosition.x + series[i].radius, centerPosition.y];
      context.beginPath();
      context.setLineWidth(funnelOption.borderWidth * opts.pixelRatio);
      context.setStrokeStyle(funnelOption.borderColor);
      context.setFillStyle(hexToRgb(series[i].color, funnelOption.fillOpacity));
      context.moveTo(0, 0);
      context.lineTo(-series[i].radius, -eachSpacing);
      context.lineTo(series[i].radius, -eachSpacing);
      context.lineTo(0, 0);
      context.closePath();
      context.fill();
      if (funnelOption.border == true) {
        context.stroke();
      }
    } else {
      if (opts.tooltip) {
        if (opts.tooltip.index == i) {
          context.beginPath();
          context.setFillStyle(hexToRgb(series[i].color, funnelOption.activeOpacity));
          context.moveTo(0, 0);
          context.lineTo(-series[i - 1].radius - activeWidth, 0);
          context.lineTo(-series[i].radius - activeWidth, -eachSpacing);
          context.lineTo(series[i].radius + activeWidth, -eachSpacing);
          context.lineTo(series[i - 1].radius + activeWidth, 0);
          context.lineTo(0, 0);
          context.closePath();
          context.fill();
        }
      }
      series[i].funnelArea = [centerPosition.x - series[i].radius, centerPosition.y - eachSpacing * (i + 1), centerPosition.x + series[i].radius, centerPosition.y - eachSpacing * i];
      context.beginPath();
      context.setLineWidth(funnelOption.borderWidth * opts.pixelRatio);
      context.setStrokeStyle(funnelOption.borderColor);
      context.setFillStyle(hexToRgb(series[i].color, funnelOption.fillOpacity));
      context.moveTo(0, 0);
      context.lineTo(-series[i - 1].radius, 0);
      context.lineTo(-series[i].radius, -eachSpacing);
      context.lineTo(series[i].radius, -eachSpacing);
      context.lineTo(series[i - 1].radius, 0);
      context.lineTo(0, 0);
      context.closePath();
      context.fill();
      if (funnelOption.border == true) {
        context.stroke();
      }
    }
    context.translate(0, -eachSpacing);
  }
  context.restore();

  if (opts.dataLabel !== false && process === 1) {
    drawFunnelText(series, opts, context, eachSpacing, funnelOption.labelAlign, activeWidth, centerPosition);
  }

  return {
    center: centerPosition,
    radius: radius,
    series: series };

}

function drawFunnelText(series, opts, context, eachSpacing, labelAlign, activeWidth, centerPosition) {
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    var startX = void 0,endX = void 0,startY = void 0,fontSize = void 0;
    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';
    if (labelAlign == 'right') {
      if (i == 0) {
        startX = (item.funnelArea[2] + centerPosition.x) / 2;
      } else {
        startX = (item.funnelArea[2] + series[i - 1].funnelArea[2]) / 2;
      }
      endX = startX + activeWidth * 2;
      startY = item.funnelArea[1] + eachSpacing / 2;
      fontSize = item.textSize || opts.fontSize;
      context.setLineWidth(1 * opts.pixelRatio);
      context.setStrokeStyle(item.color);
      context.setFillStyle(item.color);
      context.beginPath();
      context.moveTo(startX, startY);
      context.lineTo(endX, startY);
      context.stroke();
      context.closePath();
      context.beginPath();
      context.moveTo(endX, startY);
      context.arc(endX, startY, 2, 0, 2 * Math.PI);
      context.closePath();
      context.fill();
      context.beginPath();
      context.setFontSize(fontSize);
      context.setFillStyle(item.textColor || '#666666');
      context.fillText(text, endX + 5, startY + fontSize / 2 - 2);
      context.closePath();
      context.stroke();
      context.closePath();
    } else {
      if (i == 0) {
        startX = (item.funnelArea[0] + centerPosition.x) / 2;
      } else {
        startX = (item.funnelArea[0] + series[i - 1].funnelArea[0]) / 2;
      }
      endX = startX - activeWidth * 2;
      startY = item.funnelArea[1] + eachSpacing / 2;
      fontSize = item.textSize || opts.fontSize;
      context.setLineWidth(1 * opts.pixelRatio);
      context.setStrokeStyle(item.color);
      context.setFillStyle(item.color);
      context.beginPath();
      context.moveTo(startX, startY);
      context.lineTo(endX, startY);
      context.stroke();
      context.closePath();
      context.beginPath();
      context.moveTo(endX, startY);
      context.arc(endX, startY, 2, 0, 2 * Math.PI);
      context.closePath();
      context.fill();
      context.beginPath();
      context.setFontSize(fontSize);
      context.setFillStyle(item.textColor || '#666666');
      context.fillText(text, endX - 5 - measureText(text), startY + fontSize / 2 - 2);
      context.closePath();
      context.stroke();
      context.closePath();
    }

  }
}


function drawCanvas(opts, context) {
  context.draw();
}

var Timing = {
  easeIn: function easeIn(pos) {
    return Math.pow(pos, 3);
  },
  easeOut: function easeOut(pos) {
    return Math.pow(pos - 1, 3) + 1;
  },
  easeInOut: function easeInOut(pos) {
    if ((pos /= 0.5) < 1) {
      return 0.5 * Math.pow(pos, 3);
    } else {
      return 0.5 * (Math.pow(pos - 2, 3) + 2);
    }
  },
  linear: function linear(pos) {
    return pos;
  } };


function Animation(opts) {
  this.isStop = false;
  opts.duration = typeof opts.duration === 'undefined' ? 1000 : opts.duration;
  opts.timing = opts.timing || 'linear';
  var delay = 17;

  function createAnimationFrame() {
    if (typeof setTimeout !== 'undefined') {
      return function (step, delay) {
        setTimeout(function () {
          var timeStamp = +new Date();
          step(timeStamp);
        }, delay);
      };
    } else if (typeof requestAnimationFrame !== 'undefined') {
      return requestAnimationFrame;
    } else {
      return function (step) {
        step(null);
      };
    }
  };
  var animationFrame = createAnimationFrame();
  var startTimeStamp = null;
  var _step = function step(timestamp) {
    if (timestamp === null || this.isStop === true) {
      opts.onProcess && opts.onProcess(1);
      opts.onAnimationFinish && opts.onAnimationFinish();
      return;
    }
    if (startTimeStamp === null) {
      startTimeStamp = timestamp;
    }
    if (timestamp - startTimeStamp < opts.duration) {
      var process = (timestamp - startTimeStamp) / opts.duration;
      var timingFunction = Timing[opts.timing];
      process = timingFunction(process);

      opts.onProcess && opts.onProcess(process);
      animationFrame(_step, delay);
    } else {
      opts.onProcess && opts.onProcess(1);
      opts.onAnimationFinish && opts.onAnimationFinish();
    }
  };
  _step = _step.bind(this);
  animationFrame(_step, delay);
}

// stop animation immediately
// and tigger onAnimationFinish
Animation.prototype.stop = function () {
  this.isStop = true;
};

function drawCharts(type, opts, config, context) {
  var _this = this;
  var series = opts.series;
  var categories = opts.categories;
  series = fillSeries(series, opts, config);
  var duration = opts.animation ? opts.duration : 0;
  _this.animationInstance && _this.animationInstance.stop();
  var seriesMA = null;
  if (type == 'candle') {
    var average = assign({}, opts.extra.candle.average);
    if (average.show) {
      seriesMA = calCandleMA(average.day, average.name, average.color, series[0].data);
      seriesMA = fillSeries(seriesMA, opts, config);
      opts.seriesMA = seriesMA;
    } else if (opts.seriesMA) {
      seriesMA = opts.seriesMA = fillSeries(opts.seriesMA, opts, config);
    } else {
      seriesMA = series;
    }
  } else {
    seriesMA = series;
  }

  /* 过滤掉show=false的series */
  opts._series_ = series = filterSeries(series);

  //重新计算图表区域

  opts.area = new Array(4);
  //复位绘图区域
  for (var j = 0; j < 4; j++) {
    opts.area[j] = opts.padding[j];
  }

  //通过计算三大区域：图例、X轴、Y轴的大小，确定绘图区域
  var _calLegendData = calLegendData(seriesMA, opts, config, opts.chartData),
  legendHeight = _calLegendData.area.wholeHeight,
  legendWidth = _calLegendData.area.wholeWidth;

  switch (opts.legend.position) {
    case 'top':
      opts.area[0] += legendHeight;
      break;
    case 'bottom':
      opts.area[2] += legendHeight;
      break;
    case 'left':
      opts.area[3] += legendWidth;
      break;
    case 'right':
      opts.area[1] += legendWidth;
      break;}


  var _calYAxisData = {},yAxisWidth = 0;
  if (opts.type === 'line' || opts.type === 'column' || opts.type === 'area' || opts.type === 'mix' || opts.type === 'candle') {
    _calYAxisData = calYAxisData(series, opts, config);
    yAxisWidth = _calYAxisData.yAxisWidth;
    //如果显示Y轴标题
    if (opts.yAxis.showTitle) {
      var maxTitleHeight = 0;
      for (var i = 0; i < opts.yAxis.data.length; i++) {
        maxTitleHeight = Math.max(maxTitleHeight, opts.yAxis.data[i].titleFontSize ? opts.yAxis.data[i].titleFontSize : config.fontSize);
      }
      opts.area[0] += (maxTitleHeight + 6) * opts.pixelRatio;
    }
    var rightIndex = 0,leftIndex = 0;
    //计算主绘图区域左右位置
    for (var _i24 = 0; _i24 < yAxisWidth.length; _i24++) {
      if (yAxisWidth[_i24].position == 'left') {
        if (leftIndex > 0) {
          opts.area[3] += yAxisWidth[_i24].width + opts.yAxis.padding;
        } else {
          opts.area[3] += yAxisWidth[_i24].width;
        }
        leftIndex += 1;
      } else {
        if (rightIndex > 0) {
          opts.area[1] += yAxisWidth[_i24].width + opts.yAxis.padding;
        } else {
          opts.area[1] += yAxisWidth[_i24].width;
        }
        rightIndex += 1;
      }
    }
  } else {
    config.yAxisWidth = yAxisWidth;
  }
  opts.chartData.yAxisData = _calYAxisData;

  if (opts.categories && opts.categories.length) {
    opts.chartData.xAxisData = getXAxisPoints(opts.categories, opts, config);
    var _calCategoriesData = calCategoriesData(opts.categories, opts, config, opts.chartData.xAxisData.eachSpacing),
    xAxisHeight = _calCategoriesData.xAxisHeight,
    angle = _calCategoriesData.angle;
    config.xAxisHeight = xAxisHeight;
    config._xAxisTextAngle_ = angle;
    opts.area[2] += xAxisHeight;
    opts.chartData.categoriesData = _calCategoriesData;
  } else {
    if (opts.type === 'line' || opts.type === 'area' || opts.type === 'points') {
      opts.chartData.xAxisData = calXAxisData(series, opts, config);
      categories = opts.chartData.xAxisData.rangesFormat;
      var _calCategoriesData2 = calCategoriesData(categories, opts, config, opts.chartData.xAxisData.eachSpacing),
      _xAxisHeight = _calCategoriesData2.xAxisHeight,
      _angle = _calCategoriesData2.angle;
      config.xAxisHeight = _xAxisHeight;
      config._xAxisTextAngle_ = _angle;
      opts.area[2] += _xAxisHeight;
      opts.chartData.categoriesData = _calCategoriesData2;
    } else {
      opts.chartData.xAxisData = {
        xAxisPoints: [] };

    }
  }
  //计算右对齐偏移距离
  if (opts.enableScroll && opts.xAxis.scrollAlign == 'right' && opts._scrollDistance_ === undefined) {
    var offsetLeft = 0,
    xAxisPoints = opts.chartData.xAxisData.xAxisPoints,
    startX = opts.chartData.xAxisData.startX,
    endX = opts.chartData.xAxisData.endX,
    eachSpacing = opts.chartData.xAxisData.eachSpacing;
    var totalWidth = eachSpacing * (xAxisPoints.length - 1);
    var screenWidth = endX - startX;
    offsetLeft = screenWidth - totalWidth;
    _this.scrollOption = {
      currentOffset: offsetLeft,
      startTouchX: offsetLeft,
      distance: 0,
      lastMoveTime: 0 };

    opts._scrollDistance_ = offsetLeft;
  }

  if (type === 'pie' || type === 'ring' || type === 'rose') {
    config._pieTextMaxLength_ = opts.dataLabel === false ? 0 : getPieTextMaxLength(seriesMA);
  }

  switch (type) {
    case 'word':
      var wordOption = assign({}, {
        type: 'normal',
        autoColors: true },
      opts.extra.word);
      if (opts.updateData == true || opts.updateData == undefined) {
        opts.chartData.wordCloudData = getWordCloudPoint(opts, wordOption.type);
      }
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawWordCloudDataPoints(series, opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'map':
      context.clearRect(0, 0, opts.width, opts.height);
      drawMapDataPoints(series, opts, config, context);
      break;
    case 'funnel':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.funnelData = drawFunnelDataPoints(series, opts, config, context, process);
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'line':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawLineDataPoints = drawLineDataPoints(series, opts, config, context, process),
          xAxisPoints = _drawLineDataPoints.xAxisPoints,
          calPoints = _drawLineDataPoints.calPoints,
          eachSpacing = _drawLineDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);

        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'mix':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawMixDataPoints = drawMixDataPoints(series, opts, config, context, process),
          xAxisPoints = _drawMixDataPoints.xAxisPoints,
          calPoints = _drawMixDataPoints.calPoints,
          eachSpacing = _drawMixDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'column':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawColumnDataPoints = drawColumnDataPoints(series, opts, config, context, process),
          xAxisPoints = _drawColumnDataPoints.xAxisPoints,
          calPoints = _drawColumnDataPoints.calPoints,
          eachSpacing = _drawColumnDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'area':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawAreaDataPoints = drawAreaDataPoints(series, opts, config, context, process),
          xAxisPoints = _drawAreaDataPoints.xAxisPoints,
          calPoints = _drawAreaDataPoints.calPoints,
          eachSpacing = _drawAreaDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'ring':
    case 'pie':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.pieData = drawPieDataPoints(series, opts, config, context, process);
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'rose':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.pieData = drawRoseDataPoints(series, opts, config, context, process);
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'radar':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.radarData = drawRadarDataPoints(series, opts, config, context, process);
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'arcbar':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.arcbarData = drawArcbarDataPoints(series, opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'gauge':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.gaugeData = drawGaugeDataPoints(categories, series, opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'candle':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawCandleDataPoints = drawCandleDataPoints(series, seriesMA, opts, config, context, process),
          xAxisPoints = _drawCandleDataPoints.xAxisPoints,
          calPoints = _drawCandleDataPoints.calPoints,
          eachSpacing = _drawCandleDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          if (seriesMA) {
            drawLegend(seriesMA, opts, config, context, opts.chartData);
          } else {
            drawLegend(opts.series, opts, config, context, opts.chartData);
          }
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;}

}

// simple event implement

function Event() {
  this.events = {};
}

Event.prototype.addEventListener = function (type, listener) {
  this.events[type] = this.events[type] || [];
  this.events[type].push(listener);
};

Event.prototype.trigger = function () {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var type = args[0];
  var params = args.slice(1);
  if (!!this.events[type]) {
    this.events[type].forEach(function (listener) {
      try {
        listener.apply(null, params);
      } catch (e) {
        console.error(e);
      }
    });
  }
};

var Charts = function Charts(opts) {
  opts.pixelRatio = opts.pixelRatio ? opts.pixelRatio : 1;
  opts.fontSize = opts.fontSize ? opts.fontSize * opts.pixelRatio : 13 * opts.pixelRatio;
  opts.title = assign({}, opts.title);
  opts.subtitle = assign({}, opts.subtitle);
  opts.duration = opts.duration ? opts.duration : 1000;
  opts.yAxis = assign({}, {
    data: [],
    showTitle: false,
    disabled: false,
    disableGrid: false,
    splitNumber: 5,
    gridType: 'solid',
    dashLength: 4 * opts.pixelRatio,
    gridColor: '#cccccc',
    padding: 10,
    fontColor: '#666666' },
  opts.yAxis);
  opts.yAxis.dashLength *= opts.pixelRatio;
  opts.yAxis.padding *= opts.pixelRatio;
  opts.xAxis = assign({}, {
    rotateLabel: false,
    type: 'calibration',
    gridType: 'solid',
    dashLength: 4,
    scrollAlign: 'left',
    boundaryGap: 'center',
    axisLine: true,
    axisLineColor: '#cccccc' },
  opts.xAxis);
  opts.xAxis.dashLength *= opts.pixelRatio;
  opts.legend = assign({}, {
    show: true,
    position: 'bottom',
    float: 'center',
    backgroundColor: 'rgba(0,0,0,0)',
    borderColor: 'rgba(0,0,0,0)',
    borderWidth: 0,
    padding: 5,
    margin: 5,
    itemGap: 10,
    fontSize: opts.fontSize,
    lineHeight: opts.fontSize,
    fontColor: '#333333',
    format: {},
    hiddenColor: '#CECECE' },
  opts.legend);
  opts.legend.borderWidth = opts.legend.borderWidth * opts.pixelRatio;
  opts.legend.itemGap = opts.legend.itemGap * opts.pixelRatio;
  opts.legend.padding = opts.legend.padding * opts.pixelRatio;
  opts.legend.margin = opts.legend.margin * opts.pixelRatio;
  opts.extra = assign({}, opts.extra);
  opts.rotate = opts.rotate ? true : false;
  opts.animation = opts.animation ? true : false;
  opts.rotate = opts.rotate ? true : false;

  var config$$1 = JSON.parse(JSON.stringify(config));
  config$$1.colors = opts.colors ? opts.colors : config$$1.colors;
  config$$1.yAxisTitleWidth = opts.yAxis.disabled !== true && opts.yAxis.title ? config$$1.yAxisTitleWidth : 0;
  if (opts.type == 'pie' || opts.type == 'ring') {
    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.pie.labelWidth * opts.pixelRatio || config$$1.pieChartLinePadding * opts.pixelRatio;
  }
  if (opts.type == 'rose') {
    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.rose.labelWidth * opts.pixelRatio || config$$1.pieChartLinePadding * opts.pixelRatio;
  }
  config$$1.pieChartTextPadding = opts.dataLabel === false ? 0 : config$$1.pieChartTextPadding * opts.pixelRatio;
  config$$1.yAxisSplit = opts.yAxis.splitNumber ? opts.yAxis.splitNumber : config.yAxisSplit;

  //屏幕旋转
  config$$1.rotate = opts.rotate;
  if (opts.rotate) {
    var tempWidth = opts.width;
    var tempHeight = opts.height;
    opts.width = tempHeight;
    opts.height = tempWidth;
  }

  //适配高分屏
  opts.padding = opts.padding ? opts.padding : config$$1.padding;
  for (var i = 0; i < 4; i++) {
    opts.padding[i] *= opts.pixelRatio;
  }
  config$$1.yAxisWidth = config.yAxisWidth * opts.pixelRatio;
  config$$1.xAxisHeight = config.xAxisHeight * opts.pixelRatio;
  if (opts.enableScroll && opts.xAxis.scrollShow) {
    config$$1.xAxisHeight += 6 * opts.pixelRatio;
  }
  config$$1.xAxisLineHeight = config.xAxisLineHeight * opts.pixelRatio;
  config$$1.fontSize = opts.fontSize;
  config$$1.titleFontSize = config.titleFontSize * opts.pixelRatio;
  config$$1.subtitleFontSize = config.subtitleFontSize * opts.pixelRatio;
  config$$1.toolTipPadding = config.toolTipPadding * opts.pixelRatio;
  config$$1.toolTipLineHeight = config.toolTipLineHeight * opts.pixelRatio;
  config$$1.columePadding = config.columePadding * opts.pixelRatio;
  opts.$this = opts.$this ? opts.$this : this;

  this.context = uni.createCanvasContext(opts.canvasId, opts.$this);
  /* 兼容原生H5
                                                                     this.context = document.getElementById(opts.canvasId).getContext("2d");
                                                                     this.context.setStrokeStyle = function(e){ return this.strokeStyle=e; }
                                                                     this.context.setLineWidth = function(e){ return this.lineWidth=e; }
                                                                     this.context.setLineCap = function(e){ return this.lineCap=e; }
                                                                     this.context.setFontSize = function(e){ return this.font=e+"px sans-serif"; }
                                                                     this.context.setFillStyle = function(e){ return this.fillStyle=e; }
                                                                     this.context.draw = function(){ }
                                                                     */

  opts.chartData = {};
  this.event = new Event();
  this.scrollOption = {
    currentOffset: 0,
    startTouchX: 0,
    distance: 0,
    lastMoveTime: 0 };


  this.opts = opts;
  this.config = config$$1;

  drawCharts.call(this, opts.type, opts, config$$1, this.context);
};

Charts.prototype.updateData = function () {
  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  this.opts = assign({}, this.opts, data);
  this.opts.updateData = true;
  var scrollPosition = data.scrollPosition || 'current';
  switch (scrollPosition) {
    case 'current':
      this.opts._scrollDistance_ = this.scrollOption.currentOffset;
      break;
    case 'left':
      this.opts._scrollDistance_ = 0;
      this.scrollOption = {
        currentOffset: 0,
        startTouchX: 0,
        distance: 0,
        lastMoveTime: 0 };

      break;
    case 'right':
      var _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config),
      yAxisWidth = _calYAxisData.yAxisWidth;
      this.config.yAxisWidth = yAxisWidth;
      var offsetLeft = 0;
      var _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),
      xAxisPoints = _getXAxisPoints0.xAxisPoints,
      startX = _getXAxisPoints0.startX,
      endX = _getXAxisPoints0.endX,
      eachSpacing = _getXAxisPoints0.eachSpacing;
      var totalWidth = eachSpacing * (xAxisPoints.length - 1);
      var screenWidth = endX - startX;
      offsetLeft = screenWidth - totalWidth;
      this.scrollOption = {
        currentOffset: offsetLeft,
        startTouchX: offsetLeft,
        distance: 0,
        lastMoveTime: 0 };

      this.opts._scrollDistance_ = offsetLeft;
      break;}

  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);
};

Charts.prototype.zoom = function () {
  var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.opts.xAxis.itemCount;
  if (this.opts.enableScroll !== true) {
    console.log('请启用滚动条后使用！');
    return;
  }
  //当前屏幕中间点
  var centerPoint = Math.round(Math.abs(this.scrollOption.currentOffset) / this.opts.chartData.eachSpacing) + Math.round(
  this.opts.xAxis.itemCount / 2);
  this.opts.animation = false;
  this.opts.xAxis.itemCount = val.itemCount;
  //重新计算x轴偏移距离
  var _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config),
  yAxisWidth = _calYAxisData.yAxisWidth;
  this.config.yAxisWidth = yAxisWidth;
  var offsetLeft = 0;
  var _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),
  xAxisPoints = _getXAxisPoints0.xAxisPoints,
  startX = _getXAxisPoints0.startX,
  endX = _getXAxisPoints0.endX,
  eachSpacing = _getXAxisPoints0.eachSpacing;
  var centerLeft = eachSpacing * centerPoint;
  var screenWidth = endX - startX;
  var MaxLeft = screenWidth - eachSpacing * (xAxisPoints.length - 1);
  offsetLeft = screenWidth / 2 - centerLeft;
  if (offsetLeft > 0) {
    offsetLeft = 0;
  }
  if (offsetLeft < MaxLeft) {
    offsetLeft = MaxLeft;
  }
  this.scrollOption = {
    currentOffset: offsetLeft,
    startTouchX: offsetLeft,
    distance: 0,
    lastMoveTime: 0 };

  this.opts._scrollDistance_ = offsetLeft;
  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);
};

Charts.prototype.stopAnimation = function () {
  this.animationInstance && this.animationInstance.stop();
};

Charts.prototype.addEventListener = function (type, listener) {
  this.event.addEventListener(type, listener);
};

Charts.prototype.getCurrentDataIndex = function (e) {
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (touches) {
    var _touches$ = getTouches(touches, this.opts, e);
    if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose') {
      return findPieChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.pieData);
    } else if (this.opts.type === 'radar') {
      return findRadarChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.radarData, this.opts.categories.length);
    } else if (this.opts.type === 'funnel') {
      return findFunnelChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.funnelData);
    } else if (this.opts.type === 'map') {
      return findMapChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts);
    } else if (this.opts.type === 'word') {
      return findWordChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.wordCloudData);
    } else {
      return findCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));
    }
  }
  return -1;
};

Charts.prototype.getLegendDataIndex = function (e) {
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (touches) {
    var _touches$ = getTouches(touches, this.opts, e);
    return findLegendIndex({
      x: _touches$.x,
      y: _touches$.y },
    this.opts.chartData.legendData);
  }
  return -1;
};

Charts.prototype.touchLegend = function (e) {
  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (touches) {
    var _touches$ = getTouches(touches, this.opts, e);
    var index = this.getLegendDataIndex(e);
    if (index >= 0) {
      this.opts.series[index].show = !this.opts.series[index].show;
      this.opts.animation = option.animation ? true : false;
      this.opts._scrollDistance_ = this.scrollOption.currentOffset;
      drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);
    }
  }

};

Charts.prototype.showToolTip = function (e) {
  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (!touches) {
    console.log("touchError");
  }
  var _touches$ = getTouches(touches, this.opts, e);
  var currentOffset = this.scrollOption.currentOffset;
  var opts = assign({}, this.opts, {
    _scrollDistance_: currentOffset,
    animation: false });

  if (this.opts.type === 'line' || this.opts.type === 'area' || this.opts.type === 'column') {
    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;
    if (index > -1) {
      var seriesData = getSeriesDataItem(this.opts.series, index);
      if (seriesData.length !== 0) {
        var _getToolTipData = getToolTipData(seriesData, this.opts.chartData.calPoints, index, this.opts.categories, option),
        textList = _getToolTipData.textList,
        offset = _getToolTipData.offset;
        offset.y = _touches$.y;
        opts.tooltip = {
          textList: option.textList ? option.textList : textList,
          offset: offset,
          option: option,
          index: index };

      }
    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'mix') {
    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = getSeriesDataItem(this.opts.series, index);
      if (seriesData.length !== 0) {
        var _getMixToolTipData = getMixToolTipData(seriesData, this.opts.chartData.calPoints, index, this.opts.categories, option),
        textList = _getMixToolTipData.textList,
        offset = _getMixToolTipData.offset;
        offset.y = _touches$.y;
        opts.tooltip = {
          textList: option.textList ? option.textList : textList,
          offset: offset,
          option: option,
          index: index };

      }
    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'candle') {
    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = getSeriesDataItem(this.opts.series, index);
      if (seriesData.length !== 0) {
        var _getToolTipData = getCandleToolTipData(this.opts.series[0].data, seriesData, this.opts.chartData.calPoints,
        index, this.opts.categories, this.opts.extra.candle, option),
        textList = _getToolTipData.textList,
        offset = _getToolTipData.offset;
        offset.y = _touches$.y;
        opts.tooltip = {
          textList: option.textList ? option.textList : textList,
          offset: offset,
          option: option,
          index: index };

      }
    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose' || this.opts.type === 'funnel') {
    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = this.opts._series_[index];
      var textList = [{
        text: option.format ? option.format(seriesData) : seriesData.name + ': ' + seriesData.data,
        color: seriesData.color }];

      var offset = {
        x: _touches$.x,
        y: _touches$.y };

      opts.tooltip = {
        textList: option.textList ? option.textList : textList,
        offset: offset,
        option: option,
        index: index };

    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'map' || this.opts.type === 'word') {
    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = this.opts._series_[index];
      var textList = [{
        text: option.format ? option.format(seriesData) : seriesData.properties.name,
        color: seriesData.color }];

      var offset = {
        x: _touches$.x,
        y: _touches$.y };

      opts.tooltip = {
        textList: option.textList ? option.textList : textList,
        offset: offset,
        option: option,
        index: index };

    }
    opts.updateData = false;
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'radar') {
    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = getSeriesDataItem(this.opts.series, index);
      if (seriesData.length !== 0) {
        var textList = seriesData.map(function (item) {
          return {
            text: option.format ? option.format(item) : item.name + ': ' + item.data,
            color: item.color };

        });
        var offset = {
          x: _touches$.x,
          y: _touches$.y };

        opts.tooltip = {
          textList: option.textList ? option.textList : textList,
          offset: offset,
          option: option,
          index: index };

      }
    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
};

Charts.prototype.translate = function (distance) {
  this.scrollOption = {
    currentOffset: distance,
    startTouchX: distance,
    distance: 0,
    lastMoveTime: 0 };

  var opts = assign({}, this.opts, {
    _scrollDistance_: distance,
    animation: false });

  drawCharts.call(this, this.opts.type, opts, this.config, this.context);
};

Charts.prototype.scrollStart = function (e) {
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  var _touches$ = getTouches(touches, this.opts, e);
  if (touches && this.opts.enableScroll === true) {
    this.scrollOption.startTouchX = _touches$.x;
  }
};

Charts.prototype.scroll = function (e) {
  if (this.scrollOption.lastMoveTime === 0) {
    this.scrollOption.lastMoveTime = Date.now();
  }
  var Limit = this.opts.extra.touchMoveLimit || 20;
  var currMoveTime = Date.now();
  var duration = currMoveTime - this.scrollOption.lastMoveTime;
  if (duration < Math.floor(1000 / Limit)) return;
  this.scrollOption.lastMoveTime = currMoveTime;
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (touches && this.opts.enableScroll === true) {
    var _touches$ = getTouches(touches, this.opts, e);
    var _distance;
    _distance = _touches$.x - this.scrollOption.startTouchX;
    var currentOffset = this.scrollOption.currentOffset;
    var validDistance = calValidDistance(this, currentOffset + _distance, this.opts.chartData, this.config, this.opts);
    this.scrollOption.distance = _distance = validDistance - currentOffset;
    var opts = assign({}, this.opts, {
      _scrollDistance_: currentOffset + _distance,
      animation: false });

    drawCharts.call(this, opts.type, opts, this.config, this.context);
    return currentOffset + _distance;
  }
};

Charts.prototype.scrollEnd = function (e) {
  if (this.opts.enableScroll === true) {
    var _scrollOption = this.scrollOption,
    currentOffset = _scrollOption.currentOffset,
    distance = _scrollOption.distance;
    this.scrollOption.currentOffset = currentOffset + distance;
    this.scrollOption.distance = 0;
  }
};
if ( true && typeof module.exports === "object") {
  module.exports = Charts;
  //export default Charts;//建议使用nodejs的module导出方式，如报错请使用export方式导出
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 206 */
/*!************************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/liaoningadd.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.arrRess = void 0;var arrRess = function arrRess(vmap) {
  var features = [{
    "type": "Feature",
    "properties": {
      "adcode": 210100,
      "name": "沈阳市",
      "center": [123.429096, 41.796767],
      "centroid": [123.143796, 42.100641],
      "childrenNum": 13,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Shenyang,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [123.561912, 43.005383],
      [123.557536, 43.010156],
      [123.537601, 43.00719],
      [123.522389, 43.020349],
      [123.493771, 43.025769],
      [123.486408, 43.03545],
      [123.471891, 43.042721],
      [123.462375, 43.03897],
      [123.448483, 43.038136],
      [123.434938, 43.027761],
      [123.412085, 43.02878],
      [123.402917, 43.020581],
      [123.383051, 43.016596],
      [123.373674, 43.011778],
      [123.333178, 43.005383],
      [123.323106, 43.001027],
      [123.272886, 42.996856],
      [123.259411, 42.993287],
      [123.242115, 42.979752],
      [123.231349, 42.962968],
      [123.219332, 42.953508],
      [123.206204, 42.951652],
      [123.184116, 42.925906],
      [123.18877, 42.895832],
      [123.186755, 42.886129],
      [123.179392, 42.878793],
      [123.170015, 42.859752],
      [123.17071, 42.852134],
      [123.18231, 42.846048],
      [123.189395, 42.848185],
      [123.227598, 42.832155],
      [123.222458, 42.825742],
      [123.187241, 42.825416],
      [123.166403, 42.810961],
      [123.132368, 42.802733],
      [123.117503, 42.801105],
      [123.096179, 42.789806],
      [123.083676, 42.788783],
      [123.058461, 42.76911],
      [123.047973, 42.771529],
      [123.031094, 42.767761],
      [123.022481, 42.772273],
      [122.995669, 42.775203],
      [122.988515, 42.779017],
      [122.978999, 42.776785],
      [122.969135, 42.767063],
      [122.973928, 42.762969],
      [122.954201, 42.754455],
      [122.945935, 42.753711],
      [122.929334, 42.77204],
      [122.887311, 42.770133],
      [122.878697, 42.759433],
      [122.877864, 42.751152],
      [122.88356, 42.751989],
      [122.875294, 42.739425],
      [122.857929, 42.725461],
      [122.850844, 42.714428],
      [122.85522, 42.706978],
      [122.846537, 42.708189],
      [122.848621, 42.717082],
      [122.83973, 42.718292],
      [122.836118, 42.716476],
      [122.815766, 42.718897],
      [122.80111, 42.726299],
      [122.778118, 42.710889],
      [122.767838, 42.709074],
      [122.750959, 42.697944],
      [122.747347, 42.689188],
      [122.756238, 42.679732],
      [122.769505, 42.677962],
      [122.791802, 42.662773],
      [122.792705, 42.650983],
      [122.824935, 42.652661],
      [122.842786, 42.648839],
      [122.838688, 42.645204],
      [122.842578, 42.633364],
      [122.86293, 42.621055],
      [122.873488, 42.608604],
      [122.886477, 42.611216],
      [122.892034, 42.608884],
      [122.903078, 42.613687],
      [122.926764, 42.604407],
      [122.922874, 42.596804],
      [122.930237, 42.587707],
      [122.969899, 42.571376],
      [122.974414, 42.564329],
      [122.966912, 42.561716],
      [122.957744, 42.550327],
      [122.949408, 42.545098],
      [122.943365, 42.547899],
      [122.921832, 42.535527],
      [122.916831, 42.52969],
      [122.917804, 42.521565],
      [122.911552, 42.51951],
      [122.908357, 42.500685],
      [122.899744, 42.499424],
      [122.882101, 42.503908],
      [122.871543, 42.504049],
      [122.834382, 42.497975],
      [122.819447, 42.490126],
      [122.826463, 42.490126],
      [122.818544, 42.481434],
      [122.825004, 42.461149],
      [122.822018, 42.458017],
      [122.827297, 42.445814],
      [122.826602, 42.438846],
      [122.832853, 42.431597],
      [122.824865, 42.429352],
      [122.81778, 42.416769],
      [122.833965, 42.417986],
      [122.828269, 42.410267],
      [122.832159, 42.403342],
      [122.84619, 42.399599],
      [122.850983, 42.40526],
      [122.862027, 42.406804],
      [122.865639, 42.395715],
      [122.873627, 42.389397],
      [122.882379, 42.388367],
      [122.875294, 42.37484],
      [122.883421, 42.368333],
      [122.895298, 42.368848],
      [122.903217, 42.353256],
      [122.900994, 42.349182],
      [122.871057, 42.345669],
      [122.858345, 42.346091],
      [122.838827, 42.331898],
      [122.826324, 42.330446],
      [122.810765, 42.319624],
      [122.805555, 42.312408],
      [122.781314, 42.29863],
      [122.769505, 42.297037],
      [122.734289, 42.284287],
      [122.735053, 42.281005],
      [122.703726, 42.261124],
      [122.691779, 42.249915],
      [122.651283, 42.232651],
      [122.645101, 42.237671],
      [122.63628, 42.237061],
      [122.632598, 42.231009],
      [122.626, 42.234716],
      [122.620096, 42.230071],
      [122.609329, 42.230164],
      [122.614469, 42.212755],
      [122.552024, 42.188063],
      [122.520072, 42.174681],
      [122.455821, 42.144572],
      [122.439428, 42.150961],
      [122.432621, 42.144196],
      [122.436858, 42.140625],
      [122.423522, 42.140672],
      [122.425953, 42.129018],
      [122.429704, 42.125118],
      [122.446583, 42.124178],
      [122.438456, 42.117315],
      [122.447625, 42.110499],
      [122.435608, 42.104811],
      [122.428315, 42.092352],
      [122.445194, 42.094656],
      [122.449917, 42.087602],
      [122.436164, 42.084169],
      [122.439359, 42.074481],
      [122.453182, 42.072458],
      [122.447347, 42.063473],
      [122.459016, 42.055523],
      [122.462767, 42.041688],
      [122.477076, 42.043571],
      [122.477632, 42.038582],
      [122.469366, 42.029169],
      [122.483744, 42.02145],
      [122.497289, 41.999274],
      [122.494789, 41.988771],
      [122.501526, 41.970918],
      [122.500971, 41.956783],
      [122.507917, 41.938733],
      [122.517919, 41.936329],
      [122.515766, 41.926523],
      [122.521045, 41.916622],
      [122.517849, 41.912331],
      [122.523129, 41.900117],
      [122.509028, 41.90422],
      [122.473881, 41.906201],
      [122.443388, 41.901202],
      [122.443874, 41.890636],
      [122.453321, 41.882852],
      [122.459572, 41.870538],
      [122.457627, 41.861194],
      [122.459225, 41.843022],
      [122.487148, 41.832211],
      [122.498817, 41.82494],
      [122.513612, 41.820595],
      [122.511459, 41.81677],
      [122.529519, 41.808363],
      [122.540077, 41.800664],
      [122.552927, 41.786869],
      [122.560915, 41.789137],
      [122.55772, 41.774914],
      [122.56925, 41.772835],
      [122.596479, 41.772268],
      [122.600369, 41.766549],
      [122.579878, 41.754969],
      [122.570431, 41.740644],
      [122.575432, 41.731518],
      [122.572168, 41.728444],
      [122.572515, 41.712505],
      [122.555983, 41.708106],
      [122.549524, 41.69907],
      [122.550635, 41.678911],
      [122.532992, 41.669919],
      [122.526671, 41.676261],
      [122.517502, 41.676971],
      [122.515835, 41.658131],
      [122.526532, 41.655054],
      [122.510139, 41.62773],
      [122.502429, 41.630098],
      [122.487078, 41.605323],
      [122.484439, 41.597599],
      [122.492635, 41.590917],
      [122.485828, 41.58158],
      [122.479646, 41.583239],
      [122.487356, 41.566316],
      [122.497706, 41.57044],
      [122.500345, 41.562238],
      [122.492983, 41.551854],
      [122.4959, 41.54346],
      [122.506597, 41.537437],
      [122.520767, 41.542559],
      [122.553483, 41.550669],
      [122.566125, 41.547776],
      [122.572446, 41.540045],
      [122.582934, 41.535207],
      [122.595159, 41.534448],
      [122.59891, 41.530227],
      [122.599118, 41.514618],
      [122.604536, 41.513005],
      [122.625027, 41.520976],
      [122.634613, 41.516943],
      [122.631418, 41.506694],
      [122.636905, 41.501663],
      [122.623916, 41.488896],
      [122.636419, 41.481728],
      [122.632598, 41.474085],
      [122.625166, 41.471426],
      [122.634543, 41.448204],
      [122.634752, 41.435331],
      [122.629751, 41.429725],
      [122.643018, 41.432528],
      [122.647116, 41.424499],
      [122.631209, 41.416801],
      [122.634057, 41.405253],
      [122.64913, 41.395889],
      [122.640795, 41.363605],
      [122.642601, 41.357612],
      [122.656423, 41.358754],
      [122.658993, 41.354806],
      [122.629542, 41.330163],
      [122.620304, 41.317504],
      [122.604328, 41.318075],
      [122.60669, 41.303463],
      [122.594673, 41.303463],
      [122.588491, 41.296846],
      [122.595229, 41.293513],
      [122.576405, 41.279991],
      [122.569528, 41.268466],
      [122.554108, 41.254843],
      [122.552371, 41.249602],
      [122.560012, 41.244123],
      [122.596201, 41.245076],
      [122.612455, 41.220534],
      [122.615303, 41.207903],
      [122.622527, 41.199845],
      [122.633015, 41.203088],
      [122.637044, 41.210191],
      [122.659896, 41.212813],
      [122.669482, 41.223394],
      [122.666634, 41.229399],
      [122.666981, 41.2456],
      [122.674275, 41.251508],
      [122.676706, 41.260893],
      [122.692543, 41.268228],
      [122.698239, 41.278991],
      [122.705949, 41.284562],
      [122.698447, 41.299274],
      [122.70963, 41.308509],
      [122.724148, 41.314601],
      [122.717827, 41.322787],
      [122.731163, 41.323453],
      [122.737762, 41.33002],
      [122.747834, 41.329449],
      [122.749362, 41.351857],
      [122.765616, 41.368313],
      [122.773742, 41.360323],
      [122.780966, 41.366363],
      [122.798054, 41.366839],
      [122.80368, 41.373401],
      [122.841814, 41.378584],
      [122.85133, 41.394701],
      [122.849663, 41.415898],
      [122.863347, 41.424642],
      [122.871404, 41.414378],
      [122.881754, 41.422313],
      [122.886755, 41.417894],
      [122.914609, 41.417799],
      [122.929681, 41.42811],
      [122.912664, 41.432956],
      [122.92857, 41.448537],
      [122.91704, 41.451054],
      [122.91954, 41.454901],
      [122.933641, 41.447919],
      [122.940309, 41.456041],
      [122.935308, 41.458368],
      [122.937947, 41.466963],
      [122.933293, 41.469194],
      [122.934405, 41.47869],
      [122.959688, 41.468102],
      [122.975803, 41.47869],
      [122.976428, 41.488849],
      [122.982055, 41.496158],
      [122.971288, 41.49929],
      [122.969205, 41.492598],
      [122.957813, 41.496395],
      [122.969205, 41.509778],
      [123.002198, 41.513906],
      [123.010881, 41.505175],
      [123.020675, 41.5075],
      [123.027413, 41.514144],
      [123.041166, 41.540187],
      [123.050196, 41.551048],
      [123.071173, 41.554462],
      [123.082286, 41.560769],
      [123.078744, 41.563376],
      [123.087218, 41.5794],
      [123.087565, 41.588974],
      [123.109098, 41.606318],
      [123.11403, 41.617119],
      [123.134312, 41.60845],
      [123.123546, 41.589637],
      [123.114099, 41.585277],
      [123.11535, 41.564988],
      [123.111668, 41.55854],
      [123.131117, 41.554035],
      [123.127366, 41.546638],
      [123.134451, 41.536156],
      [123.143203, 41.538765],
      [123.156748, 41.53682],
      [123.16946, 41.548961],
      [123.182032, 41.549388],
      [123.188144, 41.54512],
      [123.193493, 41.549673],
      [123.187589, 41.555648],
      [123.201898, 41.564562],
      [123.219471, 41.565273],
      [123.219818, 41.559156],
      [123.235517, 41.551712],
      [123.236003, 41.540282],
      [123.252951, 41.538148],
      [123.279694, 41.538053],
      [123.284278, 41.524439],
      [123.2956, 41.525056],
      [123.313382, 41.519979],
      [123.324079, 41.508307],
      [123.33429, 41.506931],
      [123.335679, 41.514665],
      [123.353669, 41.510775],
      [123.362352, 41.513195],
      [123.362629, 41.504701],
      [123.382565, 41.509256],
      [123.383746, 41.50043],
      [123.397638, 41.495114],
      [123.40764, 41.500619],
      [123.417087, 41.487472],
      [123.430076, 41.481396],
      [123.429659, 41.472043],
      [123.439383, 41.469337],
      [123.449386, 41.474987],
      [123.458068, 41.466535],
      [123.477726, 41.463829],
      [123.489603, 41.478975],
      [123.498147, 41.483675],
      [123.516485, 41.480067],
      [123.527529, 41.491981],
      [123.546561, 41.481111],
      [123.560801, 41.486808],
      [123.58018, 41.498436],
      [123.591502, 41.494022],
      [123.605533, 41.502423],
      [123.603866, 41.506029],
      [123.61623, 41.508639],
      [123.615813, 41.513479],
      [123.625816, 41.516896],
      [123.629567, 41.523822],
      [123.646584, 41.518651],
      [123.664714, 41.527048],
      [123.677703, 41.528709],
      [123.683815, 41.519742],
      [123.692359, 41.526479],
      [123.702917, 41.520786],
      [123.703403, 41.515662],
      [123.71924, 41.510348],
      [123.727437, 41.517133],
      [123.745635, 41.520596],
      [123.74758, 41.527238],
      [123.73987, 41.54033],
      [123.729868, 41.543175],
      [123.735633, 41.55138],
      [123.725561, 41.556549],
      [123.721741, 41.568307],
      [123.760222, 41.584898],
      [123.776337, 41.58741],
      [123.791827, 41.598499],
      [123.782102, 41.606602],
      [123.770711, 41.60826],
      [123.767446, 41.61873],
      [123.759597, 41.619441],
      [123.749872, 41.636824],
      [123.752998, 41.642932],
      [123.764459, 41.6462],
      [123.76953, 41.657326],
      [123.779115, 41.65709],
      [123.79648, 41.680757],
      [123.790507, 41.685631],
      [123.808567, 41.697272],
      [123.811553, 41.708815],
      [123.801204, 41.718512],
      [123.801065, 41.728917],
      [123.790021, 41.7388],
      [123.781824, 41.752133],
      [123.789048, 41.766786],
      [123.772794, 41.773449],
      [123.786687, 41.785452],
      [123.780157, 41.796838],
      [123.768627, 41.799389],
      [123.755638, 41.794145],
      [123.761889, 41.788665],
      [123.7605, 41.779215],
      [123.745844, 41.783467],
      [123.716809, 41.775103],
      [123.714031, 41.778033],
      [123.691109, 41.779167],
      [123.69222, 41.78342],
      [123.669715, 41.785215],
      [123.665547, 41.795893],
      [123.669506, 41.803687],
      [123.676522, 41.803876],
      [123.685413, 41.811386],
      [123.681176, 41.825365],
      [123.673813, 41.832258],
      [123.67673, 41.837263],
      [123.706668, 41.84255],
      [123.719588, 41.849064],
      [123.739801, 41.86379],
      [123.739106, 41.880399],
      [123.720421, 41.886909],
      [123.715628, 41.891815],
      [123.728826, 41.897428],
      [123.728617, 41.907285],
      [123.733271, 41.915773],
      [123.741676, 41.919876],
      [123.731049, 41.923082],
      [123.732785, 41.930342],
      [123.723408, 41.946887],
      [123.732507, 41.954804],
      [123.727089, 41.957961],
      [123.734383, 41.967196],
      [123.763348, 41.972614],
      [123.774392, 41.969175],
      [123.790021, 41.989242],
      [123.771058, 41.995977],
      [123.769391, 42.002664],
      [123.762792, 41.999085],
      [123.763695, 42.017825],
      [123.773211, 42.023568],
      [123.788354, 42.019567],
      [123.797175, 42.013635],
      [123.810095, 42.022062],
      [123.813568, 42.030581],
      [123.808219, 42.03557],
      [123.813151, 42.050112],
      [123.805858, 42.051335],
      [123.80433, 42.058157],
      [123.794744, 42.060086],
      [123.789465, 42.052982],
      [123.789118, 42.043947],
      [123.783144, 42.037688],
      [123.779879, 42.041877],
      [123.752026, 42.052935],
      [123.75529, 42.05731],
      [123.746122, 42.065355],
      [123.735147, 42.065402],
      [123.727228, 42.076362],
      [123.705626, 42.085956],
      [123.704862, 42.09127],
      [123.678189, 42.098417],
      [123.662213, 42.09395],
      [123.647418, 42.100862],
      [123.632206, 42.100956],
      [123.631164, 42.107679],
      [123.620954, 42.115764],
      [123.608728, 42.119337],
      [123.589974, 42.129441],
      [123.574901, 42.132308],
      [123.556147, 42.144619],
      [123.541768, 42.147015],
      [123.540518, 42.155706],
      [123.542046, 42.182241],
      [123.53517, 42.181584],
      [123.521416, 42.191021],
      [123.504815, 42.192289],
      [123.487242, 42.180504],
      [123.469599, 42.181537],
      [123.458138, 42.200176],
      [123.449594, 42.204729],
      [123.465223, 42.230258],
      [123.476753, 42.233073],
      [123.468765, 42.249446],
      [123.473628, 42.261921],
      [123.48238, 42.27144],
      [123.497939, 42.275988],
      [123.51579, 42.298255],
      [123.528085, 42.321639],
      [123.52864, 42.339674],
      [123.522875, 42.339815],
      [123.516971, 42.349462],
      [123.505788, 42.353724],
      [123.499675, 42.363417],
      [123.487936, 42.363042],
      [123.482449, 42.371469],
      [123.465848, 42.381674],
      [123.476545, 42.397399],
      [123.472238, 42.397961],
      [123.479115, 42.414384],
      [123.455151, 42.43272],
      [123.454456, 42.441184],
      [123.473419, 42.4561],
      [123.479045, 42.464935],
      [123.496341, 42.463299],
      [123.5094, 42.470077],
      [123.52225, 42.487322],
      [123.534197, 42.482042],
      [123.542185, 42.490593],
      [123.554341, 42.493256],
      [123.558647, 42.499984],
      [123.566427, 42.498956],
      [123.571567, 42.506478],
      [123.583028, 42.502787],
      [123.584, 42.512644],
      [123.608937, 42.509327],
      [123.616786, 42.525207],
      [123.613313, 42.53548],
      [123.621787, 42.534173],
      [123.624149, 42.543744],
      [123.643737, 42.553081],
      [123.653947, 42.550187],
      [123.663811, 42.55182],
      [123.662908, 42.539869],
      [123.668256, 42.530624],
      [123.657629, 42.521144],
      [123.679439, 42.516334],
      [123.683885, 42.510028],
      [123.703889, 42.52997],
      [123.736814, 42.542671],
      [123.752859, 42.543044],
      [123.758555, 42.553968],
      [123.742093, 42.559196],
      [123.737092, 42.553128],
      [123.72577, 42.555415],
      [123.730771, 42.562556],
      [123.723894, 42.567456],
      [123.712433, 42.566243],
      [123.710349, 42.579589],
      [123.694721, 42.578516],
      [123.691109, 42.592839],
      [123.701528, 42.593725],
      [123.69479, 42.603287],
      [123.673813, 42.602028],
      [123.662491, 42.6149],
      [123.651586, 42.618397],
      [123.664714, 42.623666],
      [123.662908, 42.629028],
      [123.637068, 42.63989],
      [123.624079, 42.647441],
      [123.61887, 42.655084],
      [123.625607, 42.664078],
      [123.625746, 42.6754],
      [123.611298, 42.680291],
      [123.60338, 42.670555],
      [123.592614, 42.663705],
      [123.578999, 42.676937],
      [123.587821, 42.67731],
      [123.583306, 42.688443],
      [123.569344, 42.692868],
      [123.582611, 42.70628],
      [123.57122, 42.712007],
      [123.559481, 42.724763],
      [123.559342, 42.729464],
      [123.57247, 42.741426],
      [123.575387, 42.751152],
      [123.585598, 42.752501],
      [123.586848, 42.760178],
      [123.57761, 42.76804],
      [123.586084, 42.77511],
      [123.598865, 42.771622],
      [123.603519, 42.77911],
      [123.593864, 42.789248],
      [123.600602, 42.796595],
      [123.594697, 42.807939],
      [123.591988, 42.823418],
      [123.605325, 42.829274],
      [123.593655, 42.838846],
      [123.593378, 42.847442],
      [123.585668, 42.852598],
      [123.603519, 42.866347],
      [123.600949, 42.870481],
      [123.583931, 42.875357],
      [123.584348, 42.884829],
      [123.59956, 42.893511],
      [123.598587, 42.905162],
      [123.584973, 42.910546],
      [123.588793, 42.921823],
      [123.601088, 42.923354],
      [123.603519, 42.930268],
      [123.584348, 42.943906],
      [123.582125, 42.950075],
      [123.566496, 42.951652],
      [123.554896, 42.961206],
      [123.546839, 42.977341],
      [123.554132, 42.984388],
      [123.566496, 42.988142],
      [123.561912, 43.005383]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 210200,
      "name": "大连市",
      "center": [121.618622, 38.91459],
      "centroid": [122.190893, 39.593378],
      "childrenNum": 10,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Dalian,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [123.518846, 39.770327],
      [123.518846, 39.79857],
      [123.514679, 39.814342],
      [123.504468, 39.820182],
      [123.501273, 39.828358],
      [123.504399, 39.843832],
      [123.500162, 39.851907],
      [123.483074, 39.859934],
      [123.476614, 39.868299],
      [123.474253, 39.881284],
      [123.480782, 39.891446],
      [123.490506, 39.898058],
      [123.470571, 39.924887],
      [123.456749, 39.929164],
      [123.437161, 39.922701],
      [123.420143, 39.933877],
      [123.407362, 39.9348],
      [123.397846, 39.926005],
      [123.399096, 39.93446],
      [123.391247, 39.935918],
      [123.393331, 39.954378],
      [123.384996, 39.954864],
      [123.377077, 39.971523],
      [123.401666, 39.981817],
      [123.401041, 39.993178],
      [123.407918, 39.9991],
      [123.404862, 40.009245],
      [123.39215, 40.01371],
      [123.380272, 40.004779],
      [123.359504, 40.002158],
      [123.338943, 40.01963],
      [123.317341, 40.025114],
      [123.299698, 40.024483],
      [123.296572, 40.01701],
      [123.281638, 40.016961],
      [123.266704, 40.039233],
      [123.242324, 40.036759],
      [123.225723, 40.049663],
      [123.191895, 40.06494],
      [123.183838, 40.064746],
      [123.172794, 40.070469],
      [123.167862, 40.067607],
      [123.141814, 40.072699],
      [123.136327, 40.079196],
      [123.127019, 40.076287],
      [123.11792, 40.063485],
      [123.103194, 40.074736],
      [123.080342, 40.055095],
      [123.073326, 40.040349],
      [123.068672, 40.042289],
      [123.053947, 40.060139],
      [123.03165, 40.062127],
      [123.028871, 40.07042],
      [123.010256, 40.07299],
      [122.993863, 40.081863],
      [122.981707, 40.103289],
      [122.988654, 40.116859],
      [122.969552, 40.118507],
      [122.960522, 40.123546],
      [122.944963, 40.143215],
      [122.939128, 40.158956],
      [122.938711, 40.174791],
      [122.927042, 40.182247],
      [122.901967, 40.184038],
      [122.890784, 40.187378],
      [122.893979, 40.20519],
      [122.881476, 40.195607],
      [122.878558, 40.185442],
      [122.869668, 40.178906],
      [122.8539, 40.154646],
      [122.847926, 40.150432],
      [122.858276, 40.134496],
      [122.851122, 40.124612],
      [122.835215, 40.119282],
      [122.824379, 40.120687],
      [122.815558, 40.111335],
      [122.813821, 40.103435],
      [122.80111, 40.102853],
      [122.797498, 40.106634],
      [122.778535, 40.112013],
      [122.767421, 40.109881],
      [122.746861, 40.097667],
      [122.733247, 40.094758],
      [122.727482, 40.085693],
      [122.71352, 40.075996],
      [122.708936, 40.067462],
      [122.694488, 40.07105],
      [122.658646, 40.062176],
      [122.650519, 40.06591],
      [122.628709, 40.061933],
      [122.617317, 40.064019],
      [122.607315, 40.052864],
      [122.577516, 40.055726],
      [122.569806, 40.049905],
      [122.55772, 40.058975],
      [122.55126, 40.057326],
      [122.539452, 40.062127],
      [122.529866, 40.047431],
      [122.536465, 40.031276],
      [122.550982, 40.024677],
      [122.544731, 40.013225],
      [122.527435, 40.015554],
      [122.519308, 40.005605],
      [122.520142, 39.99876],
      [122.541049, 39.993275],
      [122.544106, 39.989343],
      [122.539243, 39.972785],
      [122.554108, 39.974631],
      [122.555914, 39.968075],
      [122.549524, 39.954524],
      [122.561193, 39.944565],
      [122.551538, 39.939173],
      [122.530005, 39.941796],
      [122.510695, 39.928678],
      [122.512084, 39.920611],
      [122.501318, 39.927317],
      [122.497081, 39.935918],
      [122.477423, 39.939561],
      [122.456168, 39.951707],
      [122.418312, 39.968657],
      [122.417757, 39.972154],
      [122.401434, 39.9672],
      [122.400322, 39.972154],
      [122.373371, 39.966326],
      [122.357743, 39.969629],
      [122.344059, 39.982545],
      [122.326972, 39.984633],
      [122.304466, 39.979486],
      [122.285851, 39.967589],
      [122.280919, 39.967395],
      [122.269806, 39.979098],
      [122.269597, 39.98405],
      [122.259873, 39.988906],
      [122.26029, 40.00609],
      [122.248898, 40.012982],
      [122.242577, 40.022202],
      [122.231047, 40.008905],
      [122.218683, 40.000217],
      [122.198609, 39.998469],
      [122.196664, 40.006138],
      [122.185342, 40.009924],
      [122.175061, 40.027103],
      [122.157557, 40.035643],
      [122.139914, 40.030888],
      [122.12498, 40.042435],
      [122.096015, 40.042386],
      [122.090111, 40.038942],
      [122.081915, 40.055435],
      [122.07344, 40.056453],
      [122.069203, 40.067753],
      [122.058576, 40.064601],
      [122.049824, 40.068577],
      [122.044267, 40.062515],
      [122.020928, 40.058393],
      [122.008356, 40.051457],
      [121.993422, 40.052379],
      [121.982794, 40.061836],
      [121.980294, 40.078081],
      [121.986545, 40.081912],
      [121.98724, 40.09088],
      [121.970778, 40.116423],
      [121.953274, 40.128876],
      [121.929518, 40.106488],
      [121.921669, 40.095631],
      [121.910416, 40.072796],
      [121.878395, 40.051021],
      [121.864711, 40.052088],
      [121.856793, 40.041561],
      [121.84304, 40.041998],
      [121.823313, 40.036613],
      [121.824841, 40.025502],
      [121.809768, 40.015942],
      [121.796223, 39.999052],
      [121.790666, 39.967978],
      [121.783165, 39.960935],
      [121.779066, 39.942865],
      [121.76448, 39.933488],
      [121.751977, 39.935772],
      [121.723637, 39.935626],
      [121.699812, 39.937327],
      [121.688212, 39.931302],
      [121.662095, 39.905301],
      [121.64723, 39.906516],
      [121.636255, 39.904183],
      [121.632574, 39.889987],
      [121.626809, 39.882791],
      [121.589508, 39.868202],
      [121.572143, 39.865235],
      [121.552486, 39.872141],
      [121.537969, 39.872822],
      [121.536024, 39.861052],
      [121.530189, 39.851518],
      [121.519423, 39.844805],
      [121.514421, 39.836533],
      [121.497612, 39.820912],
      [121.475176, 39.814585],
      [121.472537, 39.806894],
      [121.475176, 39.791754],
      [121.488929, 39.777243],
      [121.487193, 39.760342],
      [121.459686, 39.747919],
      [121.461423, 39.740026],
      [121.480177, 39.728428],
      [121.502752, 39.703326],
      [121.495042, 39.688504],
      [121.498029, 39.677629],
      [121.492125, 39.665923],
      [121.482539, 39.659338],
      [121.451907, 39.658167],
      [121.446142, 39.655045],
      [121.445517, 39.644799],
      [121.454199, 39.641774],
      [121.456839, 39.633771],
      [121.45024, 39.625084],
      [121.421692, 39.621179],
      [121.40384, 39.612588],
      [121.376125, 39.608438],
      [121.355496, 39.609366],
      [121.325766, 39.601457],
      [121.297357, 39.605753],
      [121.278672, 39.599309],
      [121.263669, 39.589689],
      [121.234634, 39.565855],
      [121.226577, 39.555059],
      [121.224007, 39.535416],
      [121.225813, 39.515767],
      [121.233801, 39.50775],
      [121.24936, 39.499731],
      [121.257417, 39.485061],
      [121.268253, 39.482616],
      [121.273046, 39.496064],
      [121.286799, 39.507163],
      [121.294579, 39.494548],
      [121.303747, 39.488142],
      [121.301664, 39.476306],
      [121.245887, 39.456837],
      [121.257903, 39.435698],
      [121.270059, 39.434229],
      [121.265683, 39.426643],
      [121.252138, 39.427377],
      [121.247415, 39.419594],
      [121.258042, 39.408726],
      [121.244914, 39.395114],
      [121.247484, 39.388062],
      [121.256653, 39.384193],
      [121.25957, 39.375622],
      [121.273671, 39.375132],
      [121.308054, 39.391246],
      [121.318543, 39.388601],
      [121.319723, 39.374544],
      [121.324308, 39.371605],
      [121.349591, 39.377826],
      [121.383349, 39.37087],
      [121.395505, 39.363571],
      [121.406063, 39.361954],
      [121.421414, 39.366217],
      [121.433153, 39.3573],
      [121.436348, 39.344266],
      [121.436, 39.329955],
      [121.461701, 39.324171],
      [121.466702, 39.319857],
      [121.465243, 39.301227],
      [121.474898, 39.296225],
      [121.484692, 39.282836],
      [121.498029, 39.281169],
      [121.508378, 39.292155],
      [121.515533, 39.286613],
      [121.524424, 39.293577],
      [121.555612, 39.31167],
      [121.562419, 39.322897],
      [121.571588, 39.322161],
      [121.621321, 39.326181],
      [121.636464, 39.337013],
      [121.672583, 39.348039],
      [121.687031, 39.347206],
      [121.69231, 39.353233],
      [121.704535, 39.358035],
      [121.715857, 39.366657],
      [121.723706, 39.367441],
      [121.722456, 39.356467],
      [121.711134, 39.34309],
      [121.718636, 39.332602],
      [121.716343, 39.3177],
      [121.702243, 39.326622],
      [121.669527, 39.312504],
      [121.662859, 39.298088],
      [121.669388, 39.290732],
      [121.685086, 39.291615],
      [121.68592, 39.282346],
      [121.667999, 39.276264],
      [121.655218, 39.283719],
      [121.643618, 39.279305],
      [121.626045, 39.285926],
      [121.620349, 39.27798],
      [121.598747, 39.279158],
      [121.589231, 39.267434],
      [121.59451, 39.249525],
      [121.60868, 39.257032],
      [121.621877, 39.244127],
      [121.639451, 39.244323],
      [121.635491, 39.236275],
      [121.624239, 39.238925],
      [121.630976, 39.226311],
      [121.602636, 39.230728],
      [121.591175, 39.228716],
      [121.590828, 39.217327],
      [121.601942, 39.210797],
      [121.588328, 39.20137],
      [121.587008, 39.193562],
      [121.604234, 39.1663],
      [121.639451, 39.166055],
      [121.650078, 39.15726],
      [121.652162, 39.147678],
      [121.663206, 39.145909],
      [121.664317, 39.136522],
      [121.672444, 39.127674],
      [121.68335, 39.12207],
      [121.682308, 39.118039],
      [121.656746, 39.095568],
      [121.636811, 39.087797],
      [121.636394, 39.080124],
      [121.614097, 39.077419],
      [121.606665, 39.073041],
      [121.606179, 39.080567],
      [121.642854, 39.110664],
      [121.64216, 39.119858],
      [121.595065, 39.154607],
      [121.590689, 39.155],
      [121.562766, 39.131361],
      [121.562419, 39.127281],
      [121.599233, 39.098666],
      [121.599094, 39.09247],
      [121.585758, 39.077862],
      [121.566517, 39.073582],
      [121.559154, 39.064333],
      [121.533662, 39.052278],
      [121.507823, 39.034117],
      [121.471286, 39.025503],
      [121.460103, 39.032444],
      [121.431138, 39.027472],
      [121.417177, 39.029146],
      [121.410231, 39.039531],
      [121.39099, 39.050506],
      [121.383141, 39.062857],
      [121.373764, 39.062266],
      [121.366331, 39.048882],
      [121.352023, 39.045929],
      [121.342437, 39.040024],
      [121.344799, 39.031459],
      [121.331879, 39.025749],
      [121.326531, 39.016395],
      [121.317778, 39.015362],
      [121.321043, 39.002067],
      [121.340492, 38.999359],
      [121.340909, 38.980593],
      [121.325905, 38.972515],
      [121.312916, 38.970298],
      [121.301941, 38.974781],
      [121.280131, 38.973746],
      [121.263252, 38.960641],
      [121.238802, 38.956995],
      [121.222895, 38.940979],
      [121.20428, 38.941028],
      [121.196848, 38.953299],
      [121.180177, 38.96],
      [121.127734, 38.959015],
      [121.117454, 38.951771],
      [121.112245, 38.942654],
      [121.092587, 38.928557],
      [121.086752, 38.907259],
      [121.093907, 38.894338],
      [121.125025, 38.889752],
      [121.127943, 38.87673],
      [121.115231, 38.868738],
      [121.109605, 38.851221],
      [121.113634, 38.822297],
      [121.128637, 38.799238],
      [121.125859, 38.790496],
      [121.111689, 38.783384],
      [121.112245, 38.776073],
      [121.126762, 38.756359],
      [121.133638, 38.725222],
      [121.137875, 38.722849],
      [121.182955, 38.719833],
      [121.19914, 38.721514],
      [121.214213, 38.733526],
      [121.22102, 38.744548],
      [121.222965, 38.75463],
      [121.23769, 38.764117],
      [121.259848, 38.786446],
      [121.305553, 38.789558],
      [121.326253, 38.801362],
      [121.330212, 38.814249],
      [121.340284, 38.819088],
      [121.359455, 38.822346],
      [121.398908, 38.81262],
      [121.428777, 38.811287],
      [121.445517, 38.817064],
      [121.468091, 38.816126],
      [121.489693, 38.823136],
      [121.496014, 38.813756],
      [121.509698, 38.817804],
      [121.523868, 38.83217],
      [121.526577, 38.840166],
      [121.542692, 38.847125],
      [121.549152, 38.864248],
      [121.559918, 38.866419],
      [121.565475, 38.875102],
      [121.594926, 38.873523],
      [121.608471, 38.869922],
      [121.617432, 38.862768],
      [121.660775, 38.860991],
      [121.677168, 38.862472],
      [121.687726, 38.873178],
      [121.694811, 38.864198],
      [121.70905, 38.87298],
      [121.71169, 38.887631],
      [121.723428, 38.904004],
      [121.7194, 38.920078],
      [121.687309, 38.929001],
      [121.678001, 38.93393],
      [121.677029, 38.941077],
      [121.650842, 38.946498],
      [121.627017, 38.93743],
      [121.621391, 38.938859],
      [121.618335, 38.94916],
      [121.634102, 38.952461],
      [121.636464, 38.958719],
      [121.650009, 38.958818],
      [121.662581, 38.966209],
      [121.676681, 38.988228],
      [121.675153, 38.997093],
      [121.658205, 39.001624],
      [121.671125, 39.009896],
      [121.68196, 39.005711],
      [121.698353, 39.004874],
      [121.711134, 39.000442],
      [121.738224, 38.999112],
      [121.760798, 39.006597],
      [121.764132, 39.013392],
      [121.756908, 39.025651],
      [121.762952, 39.028407],
      [121.79018, 39.022402],
      [121.792959, 39.01093],
      [121.805184, 38.98744],
      [121.804767, 38.970987],
      [121.833176, 38.950441],
      [121.863183, 38.942506],
      [121.870615, 38.944773],
      [121.892426, 38.958818],
      [121.911667, 38.963794],
      [121.920905, 38.969805],
      [121.903887, 38.97547],
      [121.902081, 38.988524],
      [121.905901, 38.997339],
      [121.900275, 39.002559],
      [121.883257, 39.009798],
      [121.855612, 39.026094],
      [121.852834, 39.035742],
      [121.888467, 39.027275],
      [121.903957, 39.028457],
      [121.91507, 39.014081],
      [121.928129, 39.017971],
      [121.92924, 39.024863],
      [121.917918, 39.045339],
      [121.907013, 39.04716],
      [121.907082, 39.055722],
      [121.923336, 39.053606],
      [121.963415, 39.030032],
      [121.973487, 39.031902],
      [121.989463, 39.063595],
      [121.996548, 39.069253],
      [122.020511, 39.072844],
      [122.061841, 39.060298],
      [122.072815, 39.064972],
      [122.071426, 39.074123],
      [122.053644, 39.091683],
      [122.048435, 39.101273],
      [122.05031, 39.108304],
      [122.057812, 39.110664],
      [122.08129, 39.10973],
      [122.088305, 39.11209],
      [122.107685, 39.131115],
      [122.127411, 39.144877],
      [122.147069, 39.148857],
      [122.164573, 39.147187],
      [122.170408, 39.150479],
      [122.167351, 39.158881],
      [122.123938, 39.17254],
      [122.119493, 39.186391],
      [122.124147, 39.200191],
      [122.11734, 39.214038],
      [122.144707, 39.218898],
      [122.151723, 39.23063],
      [122.160336, 39.237845],
      [122.242924, 39.267777],
      [122.251746, 39.274988],
      [122.271403, 39.317161],
      [122.292311, 39.336817],
      [122.306828, 39.331033],
      [122.308912, 39.346177],
      [122.324332, 39.345638],
      [122.343503, 39.351518],
      [122.363647, 39.365825],
      [122.371496, 39.380618],
      [122.39935, 39.391784],
      [122.413103, 39.411762],
      [122.420605, 39.413426],
      [122.451515, 39.411811],
      [122.455682, 39.403194],
      [122.498887, 39.401921],
      [122.511876, 39.413426],
      [122.532922, 39.420133],
      [122.555706, 39.43834],
      [122.581406, 39.464175],
      [122.597382, 39.471415],
      [122.604259, 39.478116],
      [122.626764, 39.483594],
      [122.636905, 39.488924],
      [122.644823, 39.499584],
      [122.649408, 39.516696],
      [122.661633, 39.522953],
      [122.682888, 39.514789],
      [122.725467, 39.531799],
      [122.730885, 39.531066],
      [122.808889, 39.559847],
      [122.810834, 39.563999],
      [122.799234, 39.575673],
      [122.810904, 39.579971],
      [122.822018, 39.565416],
      [122.838896, 39.57284],
      [122.847371, 39.581778],
      [122.842786, 39.591838],
      [122.851955, 39.601603],
      [122.860915, 39.604777],
      [122.896966, 39.605851],
      [122.904676, 39.602482],
      [122.942184, 39.60463],
      [122.948922, 39.596525],
      [122.959411, 39.598723],
      [122.972747, 39.595012],
      [122.978721, 39.602873],
      [122.979068, 39.616395],
      [123.003726, 39.635967],
      [123.019425, 39.639383],
      [123.021369, 39.643286],
      [123.010464, 39.650703],
      [123.010742, 39.655191],
      [123.02651, 39.659679],
      [123.032553, 39.644896],
      [123.046375, 39.644164],
      [123.044917, 39.651337],
      [123.035053, 39.660996],
      [123.049015, 39.666606],
      [123.052418, 39.661045],
      [123.06256, 39.666264],
      [123.077494, 39.668557],
      [123.086454, 39.659484],
      [123.08958, 39.663386],
      [123.101388, 39.661582],
      [123.099096, 39.674703],
      [123.106528, 39.675824],
      [123.131951, 39.65685],
      [123.133201, 39.645823],
      [123.14876, 39.649824],
      [123.15529, 39.663386],
      [123.166681, 39.674068],
      [123.181754, 39.673727],
      [123.188006, 39.670167],
      [123.207802, 39.670215],
      [123.21315, 39.665972],
      [123.225862, 39.676751],
      [123.224125, 39.685724],
      [123.214887, 39.688357],
      [123.215581, 39.696744],
      [123.224611, 39.698792],
      [123.249548, 39.694452],
      [123.25309, 39.689918],
      [123.272678, 39.697524],
      [123.284, 39.69494],
      [123.287056, 39.704008],
      [123.270386, 39.71483],
      [123.276082, 39.729159],
      [123.263787, 39.738321],
      [123.244269, 39.744314],
      [123.246839, 39.749284],
      [123.257674, 39.747724],
      [123.263926, 39.740855],
      [123.274415, 39.737687],
      [123.282125, 39.741927],
      [123.274692, 39.753814],
      [123.289696, 39.758588],
      [123.29949, 39.753278],
      [123.324635, 39.753376],
      [123.34061, 39.756104],
      [123.344848, 39.75055],
      [123.369576, 39.746848],
      [123.38826, 39.747481],
      [123.386038, 39.733156],
      [123.392567, 39.72375],
      [123.419518, 39.730914],
      [123.440912, 39.734033],
      [123.447927, 39.732327],
      [123.458068, 39.746117],
      [123.473766, 39.74524],
      [123.479671, 39.759222],
      [123.48488, 39.762875],
      [123.493146, 39.758345],
      [123.502176, 39.762485],
      [123.503009, 39.77023],
      [123.518846, 39.770327]]],


      [
      [
      [122.567028, 39.273909],
      [122.578836, 39.267188],
      [122.574738, 39.263607],
      [122.581545, 39.255021],
      [122.591756, 39.262724],
      [122.588977, 39.270671],
      [122.609954, 39.270671],
      [122.62211, 39.265815],
      [122.648366, 39.266011],
      [122.66462, 39.256149],
      [122.678026, 39.265422],
      [122.688584, 39.268954],
      [122.67226, 39.270181],
      [122.650241, 39.278961],
      [122.641003, 39.288133],
      [122.631765, 39.288231],
      [122.628014, 39.281708],
      [122.595437, 39.278226],
      [122.575224, 39.284259],
      [122.560082, 39.299952],
      [122.555011, 39.287496],
      [122.549246, 39.289703],
      [122.546467, 39.304561],
      [122.540841, 39.308189],
      [122.524518, 39.298432],
      [122.519169, 39.305345],
      [122.51521, 39.299952],
      [122.497567, 39.30005],
      [122.50882, 39.290536],
      [122.534451, 39.285338],
      [122.554316, 39.274743],
      [122.567028, 39.273909]]],


      [
      [
      [122.383999, 39.198374],
      [122.395252, 39.21335],
      [122.401225, 39.211288],
      [122.408588, 39.218309],
      [122.379067, 39.211141],
      [122.377747, 39.205887],
      [122.362605, 39.202941],
      [122.343781, 39.203727],
      [122.347393, 39.194937],
      [122.335863, 39.186342],
      [122.316483, 39.185016],
      [122.322109, 39.177157],
      [122.320026, 39.160601],
      [122.328986, 39.157604],
      [122.337182, 39.146155],
      [122.348505, 39.146351],
      [122.363647, 39.155147],
      [122.366981, 39.165613],
      [122.362674, 39.172147],
      [122.379901, 39.174701],
      [122.383791, 39.16802],
      [122.396155, 39.161928],
      [122.403101, 39.164974],
      [122.393098, 39.173031],
      [122.390459, 39.186882],
      [122.383374, 39.191008],
      [122.383999, 39.198374]]],


      [
      [
      [122.640517, 39.225918],
      [122.651353, 39.232593],
      [122.669135, 39.235293],
      [122.67747, 39.232103],
      [122.685736, 39.234851],
      [122.705463, 39.232054],
      [122.698655, 39.215854],
      [122.691987, 39.210994],
      [122.695947, 39.206084],
      [122.714979, 39.217082],
      [122.723522, 39.214283],
      [122.728246, 39.225967],
      [122.739151, 39.224543],
      [122.753877, 39.23387],
      [122.743388, 39.239563],
      [122.741443, 39.247857],
      [122.700531, 39.245795],
      [122.690181, 39.24182],
      [122.675178, 39.240643],
      [122.654409, 39.243195],
      [122.635724, 39.241771],
      [122.628292, 39.232593],
      [122.640517, 39.225918]]],


      [
      [
      [122.762559, 39.019349],
      [122.758878, 39.025405],
      [122.751446, 39.024026],
      [122.749501, 39.035053],
      [122.740957, 39.038301],
      [122.73026, 39.035003],
      [122.72387, 39.050063],
      [122.715673, 39.042632],
      [122.704768, 39.044256],
      [122.715951, 39.035594],
      [122.720397, 39.020482],
      [122.732761, 39.013589],
      [122.737206, 39.015214],
      [122.758322, 39.009699],
      [122.762559, 39.019349]]],


      [
      [
      [122.42512, 39.174308],
      [122.411992, 39.181922],
      [122.402684, 39.179122],
      [122.425328, 39.172097],
      [122.42512, 39.174308]]],


      [
      [
      [121.826369, 38.873868],
      [121.830815, 38.864001],
      [121.84165, 38.873227],
      [121.834079, 38.883932],
      [121.840331, 38.894092],
      [121.829564, 38.896213],
      [121.825952, 38.887828],
      [121.832343, 38.882846],
      [121.823521, 38.881317],
      [121.826369, 38.873868]]],


      [
      [
      [122.418035, 39.225574],
      [122.432552, 39.224347],
      [122.4495, 39.227341],
      [122.445333, 39.234066],
      [122.434983, 39.237011],
      [122.418035, 39.225574]]],


      [
      [
      [122.423453, 39.270524],
      [122.44561, 39.254824],
      [122.456307, 39.259142],
      [122.436858, 39.268513],
      [122.423453, 39.270524]]],


      [
      [
      [123.022689, 39.546411],
      [123.004699, 39.554521],
      [122.997267, 39.551297],
      [122.984347, 39.553691],
      [122.978999, 39.561801],
      [122.961981, 39.552323],
      [122.949269, 39.533412],
      [122.944338, 39.520606],
      [122.952951, 39.521877],
      [122.970108, 39.51826],
      [122.973094, 39.499878],
      [122.994836, 39.495624],
      [123.023731, 39.516158],
      [123.036373, 39.53307],
      [123.022689, 39.546411]]],


      [
      [
      [122.308148, 39.20024],
      [122.312802, 39.205936],
      [122.30016, 39.201861],
      [122.308148, 39.20024]]],


      [
      [
      [122.296062, 39.277097],
      [122.284253, 39.280433],
      [122.28474, 39.274841],
      [122.294881, 39.266894],
      [122.303633, 39.27489],
      [122.296062, 39.277097]]],


      [
      [
      [123.06506, 39.486479],
      [123.068533, 39.508678],
      [123.058045, 39.509607],
      [123.059364, 39.493081],
      [123.06506, 39.486479]]],


      [
      [
      [122.597104, 39.206182],
      [122.612177, 39.215412],
      [122.609815, 39.225378],
      [122.599605, 39.224789],
      [122.595506, 39.213792],
      [122.587796, 39.212172],
      [122.597104, 39.206182]]],


      [
      [
      [122.51264, 39.222973],
      [122.537021, 39.224445],
      [122.548482, 39.229992],
      [122.545703, 39.237698],
      [122.534173, 39.234753],
      [122.518683, 39.239268],
      [122.501387, 39.241182],
      [122.491871, 39.231759],
      [122.502151, 39.224249],
      [122.51264, 39.222973]]],


      [
      [
      [122.825629, 39.058675],
      [122.825768, 39.051933],
      [122.818614, 39.053557],
      [122.815419, 39.04524],
      [122.823615, 39.041353],
      [122.840425, 39.047406],
      [122.836674, 39.055279],
      [122.825629, 39.058675]]],


      [
      [
      [122.809167, 39.081649],
      [122.80243, 39.081354],
      [122.805764, 39.072942],
      [122.817364, 39.068515],
      [122.819378, 39.075599],
      [122.809167, 39.081649]]],


      [
      [
      [121.831995, 38.91781],
      [121.83658, 38.912584],
      [121.841234, 38.918106],
      [121.831995, 38.91781]]],


      [
      [
      [122.872585, 39.055279],
      [122.877864, 39.066793],
      [122.865361, 39.068957],
      [122.862305, 39.06571],
      [122.850566, 39.071319],
      [122.862791, 39.051343],
      [122.870848, 39.049325],
      [122.872585, 39.055279]]],


      [
      [
      [121.476635, 39.186784],
      [121.478163, 39.19474],
      [121.466771, 39.198964],
      [121.462048, 39.205986],
      [121.445239, 39.204218],
      [121.459548, 39.201321],
      [121.476635, 39.186784]]],


      [
      [
      [123.086524, 39.426937],
      [123.08694, 39.439515],
      [123.10368, 39.44157],
      [123.088052, 39.451259],
      [123.07541, 39.451455],
      [123.053808, 39.457668],
      [123.055336, 39.444506],
      [123.068186, 39.432223],
      [123.075757, 39.434915],
      [123.077355, 39.42865],
      [123.086524, 39.426937]]],


      [
      [
      [121.493097, 39.193807],
      [121.50303, 39.202597],
      [121.50046, 39.208244],
      [121.487401, 39.204071],
      [121.493097, 39.193807]]],


      [
      [
      [122.778118, 39.23171],
      [122.770408, 39.228863],
      [122.781661, 39.218947],
      [122.798609, 39.225231],
      [122.80493, 39.223365],
      [122.809167, 39.230679],
      [122.791524, 39.229207],
      [122.778118, 39.23171]]],


      [
      [
      [122.78173, 39.079682],
      [122.789996, 39.070138],
      [122.799512, 39.072303],
      [122.790899, 39.079337],
      [122.78173, 39.079682]]],


      [
      [
      [123.16043, 39.025503],
      [123.170085, 39.027374],
      [123.18356, 39.040368],
      [123.197244, 39.047307],
      [123.205648, 39.056952],
      [123.206413, 39.067678],
      [123.200856, 39.078108],
      [123.186338, 39.083715],
      [123.187728, 39.097043],
      [123.173974, 39.103092],
      [123.171474, 39.09847],
      [123.176197, 39.087797],
      [123.170224, 39.086273],
      [123.145635, 39.091781],
      [123.140494, 39.080075],
      [123.149663, 39.064726],
      [123.142995, 39.048538],
      [123.144037, 39.038646],
      [123.154248, 39.027275],
      [123.16043, 39.025503]]],


      [
      [
      [123.004629, 39.248887],
      [123.01616, 39.257081],
      [123.012687, 39.262577],
      [123.001156, 39.263558],
      [122.988098, 39.257965],
      [122.992057, 39.251684],
      [123.004629, 39.248887]]],


      [
      [
      [121.163437, 39.084699],
      [121.178371, 39.088535],
      [121.170105, 39.096896],
      [121.159339, 39.092027],
      [121.163437, 39.084699]]],


      [
      [
      [122.343364, 39.346226],
      [122.32329, 39.343727],
      [122.319956, 39.328289],
      [122.331765, 39.325446],
      [122.340864, 39.331377],
      [122.34906, 39.330445],
      [122.354617, 39.338189],
      [122.349338, 39.348186],
      [122.343364, 39.346226]]],


      [
      [
      [120.976449, 38.960444],
      [120.978533, 38.951131],
      [120.987076, 38.946597],
      [120.991522, 38.950589],
      [120.986173, 38.958424],
      [120.976449, 38.960444]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 210300,
      "name": "鞍山市",
      "center": [122.995632, 41.110626],
      "centroid": [123.016394, 40.718251],
      "childrenNum": 7,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Anshan,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [123.533711, 40.826996],
      [123.509608, 40.816159],
      [123.487659, 40.811411],
      [123.461611, 40.809541],
      [123.442231, 40.803114],
      [123.428964, 40.803306],
      [123.411044, 40.807095],
      [123.402639, 40.802538],
      [123.394234, 40.786515],
      [123.37541, 40.775384],
      [123.357003, 40.775959],
      [123.340055, 40.771113],
      [123.315049, 40.773464],
      [123.297614, 40.76593],
      [123.287959, 40.754506],
      [123.277054, 40.749082],
      [123.258369, 40.744569],
      [123.244685, 40.731462],
      [123.230932, 40.733959],
      [123.214262, 40.732182],
      [123.1771, 40.712684],
      [123.150288, 40.725219],
      [123.136188, 40.714461],
      [123.130075, 40.72666],
      [123.100971, 40.741305],
      [123.085412, 40.755946],
      [123.073812, 40.771641],
      [123.071798, 40.780422],
      [123.074854, 40.792081],
      [123.091386, 40.802394],
      [123.107084, 40.820091],
      [123.105834, 40.824455],
      [123.084926, 40.835866],
      [123.072979, 40.839414],
      [123.054294, 40.835099],
      [123.050265, 40.845502],
      [123.055752, 40.857772],
      [123.047973, 40.871765],
      [123.055266, 40.884175],
      [123.075063, 40.898354],
      [123.073673, 40.906879],
      [123.060406, 40.923447],
      [123.089788, 40.928378],
      [123.096387, 40.934171],
      [123.097151, 40.941973],
      [123.083884, 40.961595],
      [123.087913, 40.975519],
      [123.103125, 40.984177],
      [123.126741, 40.989343],
      [123.151052, 40.983938],
      [123.161541, 40.988434],
      [123.178212, 40.989917],
      [123.192451, 40.987621],
      [123.190923, 40.996852],
      [123.201898, 41.00173],
      [123.212247, 41.017701],
      [123.199675, 41.031278],
      [123.205162, 41.039547],
      [123.214331, 41.039833],
      [123.235517, 41.048962],
      [123.226626, 41.058996],
      [123.231835, 41.066067],
      [123.214539, 41.077867],
      [123.208357, 41.078631],
      [123.213636, 41.091145],
      [123.2119, 41.098117],
      [123.203148, 41.097687],
      [123.198494, 41.103322],
      [123.183977, 41.106043],
      [123.171891, 41.098642],
      [123.162583, 41.099024],
      [123.154595, 41.105852],
      [123.145287, 41.101841],
      [123.146746, 41.10824],
      [123.142509, 41.12576],
      [123.146815, 41.133826],
      [123.140147, 41.137214],
      [123.149385, 41.154059],
      [123.13716, 41.158018],
      [123.129381, 41.174094],
      [123.119309, 41.177242],
      [123.119031, 41.184253],
      [123.109862, 41.184634],
      [123.099304, 41.178101],
      [123.075618, 41.184634],
      [123.063254, 41.183156],
      [123.057142, 41.191501],
      [123.062282, 41.199083],
      [123.038248, 41.208427],
      [123.022411, 41.206854],
      [123.005949, 41.188497],
      [122.991363, 41.18659],
      [122.987612, 41.200465],
      [122.974484, 41.202706],
      [122.962467, 41.191358],
      [122.946144, 41.196603],
      [122.909607, 41.194219],
      [122.89898, 41.181296],
      [122.895924, 41.171519],
      [122.885505, 41.166844],
      [122.875572, 41.170612],
      [122.86675, 41.163171],
      [122.875988, 41.157732],
      [122.865291, 41.144897],
      [122.858137, 41.144945],
      [122.84876, 41.129769],
      [122.856748, 41.114971],
      [122.841605, 41.106091],
      [122.831047, 41.091575],
      [122.832437, 41.082452],
      [122.824518, 41.081831],
      [122.801388, 41.093533],
      [122.800068, 41.100266],
      [122.791594, 41.096111],
      [122.784995, 41.101316],
      [122.777215, 41.099024],
      [122.760962, 41.101221],
      [122.762837, 41.104372],
      [122.704282, 41.114828],
      [122.689556, 41.122609],
      [122.690251, 41.128289],
      [122.678581, 41.140746],
      [122.639683, 41.155204],
      [122.618706, 41.169706],
      [122.598077, 41.178911],
      [122.601897, 41.185636],
      [122.59509, 41.19584],
      [122.613149, 41.202134],
      [122.622527, 41.199845],
      [122.615303, 41.207903],
      [122.612455, 41.220534],
      [122.596201, 41.245076],
      [122.560012, 41.244123],
      [122.552371, 41.249602],
      [122.554108, 41.254843],
      [122.569528, 41.268466],
      [122.576405, 41.279991],
      [122.595229, 41.293513],
      [122.588491, 41.296846],
      [122.594673, 41.303463],
      [122.60669, 41.303463],
      [122.604328, 41.318075],
      [122.620304, 41.317504],
      [122.629542, 41.330163],
      [122.658993, 41.354806],
      [122.656423, 41.358754],
      [122.642601, 41.357612],
      [122.640795, 41.363605],
      [122.64913, 41.395889],
      [122.634057, 41.405253],
      [122.631209, 41.416801],
      [122.647116, 41.424499],
      [122.643018, 41.432528],
      [122.629751, 41.429725],
      [122.634752, 41.435331],
      [122.634543, 41.448204],
      [122.625166, 41.471426],
      [122.632598, 41.474085],
      [122.636419, 41.481728],
      [122.623916, 41.488896],
      [122.636905, 41.501663],
      [122.631418, 41.506694],
      [122.634613, 41.516943],
      [122.625027, 41.520976],
      [122.604536, 41.513005],
      [122.599118, 41.514618],
      [122.59891, 41.530227],
      [122.595159, 41.534448],
      [122.582934, 41.535207],
      [122.572446, 41.540045],
      [122.566125, 41.547776],
      [122.553483, 41.550669],
      [122.520767, 41.542559],
      [122.506597, 41.537437],
      [122.4959, 41.54346],
      [122.492983, 41.551854],
      [122.500345, 41.562238],
      [122.497706, 41.57044],
      [122.487356, 41.566316],
      [122.470547, 41.556691],
      [122.452834, 41.549341],
      [122.409213, 41.548677],
      [122.368092, 41.545404],
      [122.357118, 41.541326],
      [122.330097, 41.525483],
      [122.298284, 41.514571],
      [122.283837, 41.515899],
      [122.215557, 41.485336],
      [122.193746, 41.459602],
      [122.199303, 41.45794],
      [122.192288, 41.448964],
      [122.200345, 41.441792],
      [122.198956, 41.429203],
      [122.232436, 41.387095],
      [122.245286, 41.373877],
      [122.280294, 41.353997],
      [122.277516, 41.348908],
      [122.279461, 41.334968],
      [122.271681, 41.328355],
      [122.274737, 41.319741],
      [122.26668, 41.307414],
      [122.264388, 41.291133],
      [122.254455, 41.277896],
      [122.249801, 41.260845],
      [122.250079, 41.242551],
      [122.244591, 41.236309],
      [122.231047, 41.2304],
      [122.205138, 41.223299],
      [122.215001, 41.216578],
      [122.226948, 41.201943],
      [122.254316, 41.194076],
      [122.266194, 41.194791],
      [122.274737, 41.184539],
      [122.304814, 41.190881],
      [122.338572, 41.189975],
      [122.352533, 41.198034],
      [122.343364, 41.203707],
      [122.36191, 41.206568],
      [122.369759, 41.217579],
      [122.386499, 41.2243],
      [122.388861, 41.231639],
      [122.408866, 41.251651],
      [122.423661, 41.243266],
      [122.424633, 41.253318],
      [122.457697, 41.248078],
      [122.46374, 41.256796],
      [122.480688, 41.254938],
      [122.488745, 41.250984],
      [122.463879, 41.233307],
      [122.447208, 41.21553],
      [122.435469, 41.213003],
      [122.415326, 41.212622],
      [122.411783, 41.204041],
      [122.400461, 41.196889],
      [122.384624, 41.195602],
      [122.368926, 41.183585],
      [122.366356, 41.177147],
      [122.37233, 41.162407],
      [122.386638, 41.160165],
      [122.384416, 41.135496],
      [122.396502, 41.120461],
      [122.396502, 41.10165],
      [122.412061, 41.090954],
      [122.415881, 41.084602],
      [122.414978, 41.057085],
      [122.40956, 41.038639],
      [122.415256, 41.022482],
      [122.424008, 41.012776],
      [122.41088, 40.993074],
      [122.404698, 40.991496],
      [122.396502, 41.000869],
      [122.390111, 40.997426],
      [122.390111, 40.988052],
      [122.380665, 40.989869],
      [122.368023, 41.0002],
      [122.359966, 41.001874],
      [122.3426, 40.988817],
      [122.346629, 40.980494],
      [122.36066, 40.9881],
      [122.364411, 40.985851],
      [122.358715, 40.975327],
      [122.338988, 40.968151],
      [122.328361, 40.971117],
      [122.328917, 40.96327],
      [122.350172, 40.955422],
      [122.351213, 40.951498],
      [122.338294, 40.940872],
      [122.343364, 40.927277],
      [122.331278, 40.923974],
      [122.318845, 40.927325],
      [122.327597, 40.918276],
      [122.321345, 40.909273],
      [122.335238, 40.905777],
      [122.352672, 40.916025],
      [122.363647, 40.909082],
      [122.377609, 40.909225],
      [122.377609, 40.919425],
      [122.384138, 40.924835],
      [122.394557, 40.922298],
      [122.411505, 40.927852],
      [122.433316, 40.930676],
      [122.438595, 40.940059],
      [122.449848, 40.940298],
      [122.465059, 40.935894],
      [122.488607, 40.935751],
      [122.506111, 40.929288],
      [122.503124, 40.915355],
      [122.492566, 40.90003],
      [122.493052, 40.882881],
      [122.502429, 40.879527],
      [122.502568, 40.872963],
      [122.487634, 40.8606],
      [122.484231, 40.85159],
      [122.502568, 40.847324],
      [122.51653, 40.84809],
      [122.515002, 40.839414],
      [122.523406, 40.834188],
      [122.521531, 40.826805],
      [122.542022, 40.818701],
      [122.537993, 40.800715],
      [122.541952, 40.798557],
      [122.515974, 40.766554],
      [122.556817, 40.761082],
      [122.567583, 40.758058],
      [122.581892, 40.748506],
      [122.600785, 40.751722],
      [122.639614, 40.748698],
      [122.649825, 40.739768],
      [122.651144, 40.710571],
      [122.636558, 40.696832],
      [122.622804, 40.688136],
      [122.623082, 40.671749],
      [122.636558, 40.663819],
      [122.638642, 40.659012],
      [122.647463, 40.666606],
      [122.670941, 40.67098],
      [122.669482, 40.662569],
      [122.659758, 40.658435],
      [122.653784, 40.648099],
      [122.653228, 40.638675],
      [122.645101, 40.636704],
      [122.654617, 40.628673],
      [122.650867, 40.616937],
      [122.643573, 40.611069],
      [122.625861, 40.608423],
      [122.650589, 40.593893],
      [122.651283, 40.584702],
      [122.659549, 40.583596],
      [122.662883, 40.594615],
      [122.678929, 40.592594],
      [122.691987, 40.599956],
      [122.703657, 40.598945],
      [122.720883, 40.586387],
      [122.730677, 40.582922],
      [122.743458, 40.585136],
      [122.771103, 40.577532],
      [122.797637, 40.578879],
      [122.807431, 40.570312],
      [122.811529, 40.558181],
      [122.8166, 40.5577],
      [122.829311, 40.538006],
      [122.854872, 40.532853],
      [122.86286, 40.5277],
      [122.879461, 40.52876],
      [122.897382, 40.538632],
      [122.914678, 40.537573],
      [122.936002, 40.528856],
      [122.949825, 40.515658],
      [122.969413, 40.508961],
      [122.984347, 40.486989],
      [122.999212, 40.477012],
      [122.9865, 40.463563],
      [122.99296, 40.435161],
      [122.990182, 40.427684],
      [122.971288, 40.417795],
      [122.946213, 40.416396],
      [122.936558, 40.409304],
      [122.931974, 40.396806],
      [122.934822, 40.374024],
      [122.92982, 40.358333],
      [122.932113, 40.344715],
      [122.915859, 40.331529],
      [122.891339, 40.319548],
      [122.881337, 40.306937],
      [122.88217, 40.289829],
      [122.873002, 40.26851],
      [122.874669, 40.258597],
      [122.881823, 40.249457],
      [122.884879, 40.236204],
      [122.891131, 40.234705],
      [122.896757, 40.218739],
      [122.893979, 40.20519],
      [122.890784, 40.187378],
      [122.901967, 40.184038],
      [122.927042, 40.182247],
      [122.938711, 40.174791],
      [122.939128, 40.158956],
      [122.944963, 40.143215],
      [122.960522, 40.123546],
      [122.969552, 40.118507],
      [122.988654, 40.116859],
      [122.981707, 40.103289],
      [122.993863, 40.081863],
      [123.010256, 40.07299],
      [123.028871, 40.07042],
      [123.03165, 40.062127],
      [123.053947, 40.060139],
      [123.068672, 40.042289],
      [123.073326, 40.040349],
      [123.080342, 40.055095],
      [123.103194, 40.074736],
      [123.11792, 40.063485],
      [123.127019, 40.076287],
      [123.136327, 40.079196],
      [123.141814, 40.072699],
      [123.167862, 40.067607],
      [123.172794, 40.070469],
      [123.183838, 40.064746],
      [123.191895, 40.06494],
      [123.225723, 40.049663],
      [123.242324, 40.036759],
      [123.266704, 40.039233],
      [123.281638, 40.016961],
      [123.296572, 40.01701],
      [123.299698, 40.024483],
      [123.317341, 40.025114],
      [123.338943, 40.01963],
      [123.359504, 40.002158],
      [123.380272, 40.004779],
      [123.39215, 40.01371],
      [123.404862, 40.009245],
      [123.40632, 40.013564],
      [123.422991, 40.030548],
      [123.448483, 40.037147],
      [123.457721, 40.033023],
      [123.47717, 40.031276],
      [123.472863, 40.037438],
      [123.464111, 40.038263],
      [123.458138, 40.058102],
      [123.46814, 40.041125],
      [123.471127, 40.046898],
      [123.482935, 40.050972],
      [123.476267, 40.071875],
      [123.513776, 40.090493],
      [123.513498, 40.093789],
      [123.528849, 40.103338],
      [123.546283, 40.102514],
      [123.553577, 40.09946],
      [123.563232, 40.102514],
      [123.567955, 40.114581],
      [123.575179, 40.115745],
      [123.59046, 40.130281],
      [123.606714, 40.159392],
      [123.606297, 40.168545],
      [123.599768, 40.170336],
      [123.583306, 40.166123],
      [123.571914, 40.172854],
      [123.560523, 40.187136],
      [123.576915, 40.205383],
      [123.583653, 40.221642],
      [123.589905, 40.225948],
      [123.596156, 40.243024],
      [123.611576, 40.241332],
      [123.624149, 40.249506],
      [123.635818, 40.264787],
      [123.647696, 40.260387],
      [123.673396, 40.276826],
      [123.680342, 40.290312],
      [123.711322, 40.300172],
      [123.705487, 40.314137],
      [123.708057, 40.326215],
      [123.715976, 40.333075],
      [123.71799, 40.341721],
      [123.73855, 40.363548],
      [123.75147, 40.383292],
      [123.761681, 40.402886],
      [123.747511, 40.41765],
      [123.769252, 40.443504],
      [123.766196, 40.456957],
      [123.756818, 40.471035],
      [123.76953, 40.492386],
      [123.767307, 40.499952],
      [123.738203, 40.507805],
      [123.740843, 40.511129],
      [123.737925, 40.524955],
      [123.74112, 40.532083],
      [123.735216, 40.538632],
      [123.74119, 40.549226],
      [123.738134, 40.575703],
      [123.721324, 40.586627],
      [123.717434, 40.592498],
      [123.731396, 40.603035],
      [123.748761, 40.610732],
      [123.731118, 40.648964],
      [123.725422, 40.654205],
      [123.710488, 40.657041],
      [123.694999, 40.66603],
      [123.663811, 40.675738],
      [123.636304, 40.690875],
      [123.623176, 40.693613],
      [123.592544, 40.686118],
      [123.582889, 40.686454],
      [123.577263, 40.692316],
      [123.581014, 40.704615],
      [123.570386, 40.712156],
      [123.558925, 40.713021],
      [123.560175, 40.719937],
      [123.551423, 40.722962],
      [123.556008, 40.728485],
      [123.557328, 40.747642],
      [123.567747, 40.763482],
      [123.581083, 40.768761],
      [123.585529, 40.777543],
      [123.581222, 40.786899],
      [123.55698, 40.806088],
      [123.544894, 40.821242],
      [123.533711, 40.826996]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 210400,
      "name": "抚顺市",
      "center": [123.921109, 41.875956],
      "centroid": [124.662356, 41.837685],
      "childrenNum": 7,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Fushun,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [123.74758, 41.527238],
      [123.771683, 41.539476],
      [123.783769, 41.541563],
      [123.787242, 41.523538],
      [123.781685, 41.512673],
      [123.791966, 41.506599],
      [123.807247, 41.507406],
      [123.825307, 41.513384],
      [123.849132, 41.518746],
      [123.859551, 41.52387],
      [123.86219, 41.532029],
      [123.860315, 41.550906],
      [123.867747, 41.562381],
      [123.887891, 41.566885],
      [123.921926, 41.568449],
      [123.933874, 41.548961],
      [123.946793, 41.550147],
      [123.959505, 41.55726],
      [123.975064, 41.560674],
      [123.986664, 41.559346],
      [124.025701, 41.546116],
      [124.052929, 41.530464],
      [124.061751, 41.529942],
      [124.09794, 41.535539],
      [124.105441, 41.528377],
      [124.115513, 41.505934],
      [124.128016, 41.509826],
      [124.140727, 41.517797],
      [124.14677, 41.516896],
      [124.169067, 41.521071],
      [124.178236, 41.535397],
      [124.201992, 41.534211],
      [124.209146, 41.536203],
      [124.230193, 41.549151],
      [124.237764, 41.548866],
      [124.257352, 41.540519],
      [124.282983, 41.542986],
      [124.300348, 41.537958],
      [124.309378, 41.515804],
      [124.317991, 41.507073],
      [124.31035, 41.504511],
      [124.310211, 41.495351],
      [124.332508, 41.488754],
      [124.331049, 41.479117],
      [124.341538, 41.473942],
      [124.371198, 41.473705],
      [124.384465, 41.461739],
      [124.378769, 41.455281],
      [124.357653, 41.441602],
      [124.345775, 41.42944],
      [124.345497, 41.408057],
      [124.348553, 41.39993],
      [124.36057, 41.383814],
      [124.368975, 41.3773],
      [124.388563, 41.369407],
      [124.389396, 41.354711],
      [124.393842, 41.344198],
      [124.413569, 41.338346],
      [124.420862, 41.325832],
      [124.424127, 41.311698],
      [124.438783, 41.304177],
      [124.462816, 41.303654],
      [124.466706, 41.307366],
      [124.458718, 41.319027],
      [124.464275, 41.32864],
      [124.476222, 41.333826],
      [124.488169, 41.335159],
      [124.500394, 41.331876],
      [124.517065, 41.318932],
      [124.542696, 41.311841],
      [124.567007, 41.286895],
      [124.601946, 41.26537],
      [124.632995, 41.264322],
      [124.64001, 41.259892],
      [124.640705, 41.244695],
      [124.654041, 41.239788],
      [124.671059, 41.254986],
      [124.677311, 41.264798],
      [124.711971, 41.262274],
      [124.733226, 41.269418],
      [124.763233, 41.2748],
      [124.7765, 41.281324],
      [124.784766, 41.289466],
      [124.803104, 41.298084],
      [124.834778, 41.310413],
      [124.839918, 41.321883],
      [124.864368, 41.324405],
      [124.872564, 41.327403],
      [124.867841, 41.333731],
      [124.87187, 41.347956],
      [124.86416, 41.361132],
      [124.868675, 41.368741],
      [124.856519, 41.373401],
      [124.86027, 41.384195],
      [124.856797, 41.396602],
      [124.862354, 41.399787],
      [124.853602, 41.419937],
      [124.863257, 41.425877],
      [124.860964, 41.434001],
      [124.864437, 41.443407],
      [124.881594, 41.444832],
      [124.888332, 41.457703],
      [124.880413, 41.470619],
      [124.89889, 41.47399],
      [124.905836, 41.484102],
      [124.916463, 41.492503],
      [124.920423, 41.500335],
      [124.940149, 41.504701],
      [124.957028, 41.520074],
      [124.959668, 41.510775],
      [124.969948, 41.501806],
      [124.989189, 41.496395],
      [124.998496, 41.497155],
      [125.057399, 41.47399],
      [125.067193, 41.474465],
      [125.068235, 41.493975],
      [125.09206, 41.493358],
      [125.105049, 41.495494],
      [125.123664, 41.50247],
      [125.132764, 41.501331],
      [125.154644, 41.488326],
      [125.172009, 41.485668],
      [125.17576, 41.492409],
      [125.201947, 41.500809],
      [125.20917, 41.482868],
      [125.22216, 41.480019],
      [125.249735, 41.486997],
      [125.252028, 41.498294],
      [125.258765, 41.50508],
      [125.278562, 41.494592],
      [125.295927, 41.493026],
      [125.3226, 41.496823],
      [125.328434, 41.511297],
      [125.338437, 41.516563],
      [125.353857, 41.531745],
      [125.367332, 41.538907],
      [125.373723, 41.552613],
      [125.381641, 41.562381],
      [125.399979, 41.547491],
      [125.417136, 41.544077],
      [125.426235, 41.550526],
      [125.451588, 41.550574],
      [125.462493, 41.568354],
      [125.464021, 41.579874],
      [125.452908, 41.591343],
      [125.450268, 41.611482],
      [125.455756, 41.623278],
      [125.468189, 41.632798],
      [125.47062, 41.639807],
      [125.45909, 41.643359],
      [125.452699, 41.658747],
      [125.450616, 41.6738],
      [125.431861, 41.674841],
      [125.411857, 41.691452],
      [125.376084, 41.686199],
      [125.363026, 41.677444],
      [125.348231, 41.677775],
      [125.34448, 41.672806],
      [125.330865, 41.674415],
      [125.325031, 41.670203],
      [125.316973, 41.677539],
      [125.326073, 41.697224],
      [125.324892, 41.700678],
      [125.334547, 41.717424],
      [125.331352, 41.729437],
      [125.338506, 41.741684],
      [125.332602, 41.7527],
      [125.345174, 41.760688],
      [125.335103, 41.770141],
      [125.320238, 41.772126],
      [125.317807, 41.792586],
      [125.305929, 41.801325],
      [125.294676, 41.823287],
      [125.291273, 41.847271],
      [125.298914, 41.857324],
      [125.300928, 41.868698],
      [125.296482, 41.875728],
      [125.296413, 41.887381],
      [125.303845, 41.895683],
      [125.303915, 41.911341],
      [125.307596, 41.924496],
      [125.324614, 41.929211],
      [125.351704, 41.928268],
      [125.349273, 41.937224],
      [125.317251, 41.945237],
      [125.309263, 41.95537],
      [125.291968, 41.958809],
      [125.298288, 41.974122],
      [125.317529, 41.977137],
      [125.32121, 41.981989],
      [125.337047, 41.988018],
      [125.341701, 42.000215],
      [125.351495, 41.997437],
      [125.369902, 42.002947],
      [125.363442, 42.016648],
      [125.379905, 42.032652],
      [125.401646, 42.050065],
      [125.408522, 42.062156],
      [125.417691, 42.065778],
      [125.423665, 42.078055],
      [125.421928, 42.089483],
      [125.416163, 42.09127],
      [125.412065, 42.100674],
      [125.434987, 42.102508],
      [125.445337, 42.098464],
      [125.454783, 42.102931],
      [125.456103, 42.113508],
      [125.465202, 42.111957],
      [125.4668, 42.117926],
      [125.476941, 42.120747],
      [125.477705, 42.126433],
      [125.48993, 42.136255],
      [125.462007, 42.159417],
      [125.457978, 42.160356],
      [125.444711, 42.152182],
      [125.431514, 42.151995],
      [125.406578, 42.158665],
      [125.397478, 42.166697],
      [125.388657, 42.169045],
      [125.384281, 42.177264],
      [125.36886, 42.182805],
      [125.353579, 42.177968],
      [125.356913, 42.167167],
      [125.351912, 42.154625],
      [125.359692, 42.15176],
      [125.357677, 42.146122],
      [125.346286, 42.143303],
      [125.335936, 42.145699],
      [125.330657, 42.141847],
      [125.31871, 42.142034],
      [125.30579, 42.146545],
      [125.307874, 42.159088],
      [125.314264, 42.164396],
      [125.310375, 42.170783],
      [125.312042, 42.185246],
      [125.317529, 42.195199],
      [125.313153, 42.197641],
      [125.298497, 42.175526],
      [125.284327, 42.170924],
      [125.280507, 42.174775],
      [125.291412, 42.183274],
      [125.293009, 42.19412],
      [125.307527, 42.202335],
      [125.306763, 42.209892],
      [125.296621, 42.208484],
      [125.312667, 42.220076],
      [125.299886, 42.222563],
      [125.277659, 42.231947],
      [125.28398, 42.235279],
      [125.28905, 42.247429],
      [125.275922, 42.266751],
      [125.285021, 42.272988],
      [125.299261, 42.28949],
      [125.278701, 42.296662],
      [125.27495, 42.303692],
      [125.264947, 42.306879],
      [125.263489, 42.312971],
      [125.253834, 42.307675],
      [125.242025, 42.312689],
      [125.214172, 42.300646],
      [125.173815, 42.310721],
      [125.173815, 42.319624],
      [125.181942, 42.328338],
      [125.176455, 42.337894],
      [125.176385, 42.347402],
      [125.167564, 42.351991],
      [125.185971, 42.361076],
      [125.193264, 42.360045],
      [125.202988, 42.366226],
      [125.199238, 42.377461],
      [125.185693, 42.38261],
      [125.185901, 42.391409],
      [125.192917, 42.396604],
      [125.197501, 42.407506],
      [125.186665, 42.414758],
      [125.186457, 42.427528],
      [125.1809, 42.432813],
      [125.170134, 42.43445],
      [125.140057, 42.446375],
      [125.149295, 42.451939],
      [125.149851, 42.459045],
      [125.136098, 42.471526],
      [125.107966, 42.478864],
      [125.099006, 42.478023],
      [125.078446, 42.464842],
      [125.079904, 42.457315],
      [125.063164, 42.450536],
      [125.057746, 42.445533],
      [125.036214, 42.438098],
      [125.03663, 42.420231],
      [125.041562, 42.414618],
      [125.036491, 42.405541],
      [125.024336, 42.401891],
      [125.004748, 42.401845],
      [124.997732, 42.392579],
      [125.005859, 42.378444],
      [124.990717, 42.37292],
      [124.985299, 42.379146],
      [124.974255, 42.368145],
      [124.956959, 42.371329],
      [124.960988, 42.384436],
      [124.952236, 42.389116],
      [124.944734, 42.400768],
      [124.931259, 42.40278],
      [124.925077, 42.396884],
      [124.895278, 42.398242],
      [124.886248, 42.41022],
      [124.864021, 42.407787],
      [124.853185, 42.412278],
      [124.821719, 42.418266],
      [124.820399, 42.411296],
      [124.800395, 42.415881],
      [124.786016, 42.409237],
      [124.775597, 42.400347],
      [124.772055, 42.391362],
      [124.777612, 42.380551],
      [124.7856, 42.382376],
      [124.787822, 42.365523],
      [124.797061, 42.359718],
      [124.787058, 42.33958],
      [124.774625, 42.336957],
      [124.763511, 42.343093],
      [124.751494, 42.338316],
      [124.732462, 42.335693],
      [124.725586, 42.324497],
      [124.712944, 42.325106],
      [124.695995, 42.317141],
      [124.679394, 42.319577],
      [124.661126, 42.315641],
      [124.647859, 42.316344],
      [124.625701, 42.327261],
      [124.62584, 42.334475],
      [124.634523, 42.345903],
      [124.628202, 42.348432],
      [124.605141, 42.345294],
      [124.59361, 42.351008],
      [124.574648, 42.351476],
      [124.569508, 42.341641],
      [124.577843, 42.321076],
      [124.564784, 42.303739],
      [124.561033, 42.282318],
      [124.553323, 42.270034],
      [124.536722, 42.257888],
      [124.516023, 42.236733],
      [124.52797, 42.202476],
      [124.536514, 42.192899],
      [124.543946, 42.176982],
      [124.561172, 42.16402],
      [124.560061, 42.155048],
      [124.543043, 42.137477],
      [124.541446, 42.131039],
      [124.550128, 42.11896],
      [124.520121, 42.087884],
      [124.497408, 42.079654],
      [124.447604, 42.067801],
      [124.423501, 42.052182],
      [124.414124, 42.050112],
      [124.408637, 42.044041],
      [124.383978, 42.033923],
      [124.366752, 42.032888],
      [124.369044, 42.022391],
      [124.35154, 42.012222],
      [124.341955, 42.009397],
      [124.33737, 42.016601],
      [124.313267, 42.015235],
      [124.294721, 42.006054],
      [124.279926, 42.00742],
      [124.283816, 42.013117],
      [124.281177, 42.020885],
      [124.285275, 42.027428],
      [124.275689, 42.036935],
      [124.275828, 42.043147],
      [124.268604, 42.046018],
      [124.264645, 42.064602],
      [124.25374, 42.067284],
      [124.234291, 42.058157],
      [124.207618, 42.055334],
      [124.191572, 42.058957],
      [124.174416, 42.055711],
      [124.164622, 42.056793],
      [124.140797, 42.068083],
      [124.095231, 42.073446],
      [124.07988, 42.065543],
      [124.067446, 42.064367],
      [124.03994, 42.045124],
      [124.034175, 42.018907],
      [124.024381, 42.011657],
      [124.004307, 42.01161],
      [123.985969, 42.005819],
      [123.954781, 42.005631],
      [123.943529, 42.008738],
      [123.950336, 42.018625],
      [123.940194, 42.023803],
      [123.92658, 42.018766],
      [123.905742, 42.031146],
      [123.880667, 42.033123],
      [123.875457, 42.028746],
      [123.842811, 42.022909],
      [123.813915, 42.007655],
      [123.80169, 41.994093],
      [123.790021, 41.989242],
      [123.774392, 41.969175],
      [123.763348, 41.972614],
      [123.734383, 41.967196],
      [123.727089, 41.957961],
      [123.732507, 41.954804],
      [123.723408, 41.946887],
      [123.732785, 41.930342],
      [123.731049, 41.923082],
      [123.741676, 41.919876],
      [123.733271, 41.915773],
      [123.728617, 41.907285],
      [123.728826, 41.897428],
      [123.715628, 41.891815],
      [123.720421, 41.886909],
      [123.739106, 41.880399],
      [123.739801, 41.86379],
      [123.719588, 41.849064],
      [123.706668, 41.84255],
      [123.67673, 41.837263],
      [123.673813, 41.832258],
      [123.681176, 41.825365],
      [123.685413, 41.811386],
      [123.676522, 41.803876],
      [123.669506, 41.803687],
      [123.665547, 41.795893],
      [123.669715, 41.785215],
      [123.69222, 41.78342],
      [123.691109, 41.779167],
      [123.714031, 41.778033],
      [123.716809, 41.775103],
      [123.745844, 41.783467],
      [123.7605, 41.779215],
      [123.761889, 41.788665],
      [123.755638, 41.794145],
      [123.768627, 41.799389],
      [123.780157, 41.796838],
      [123.786687, 41.785452],
      [123.772794, 41.773449],
      [123.789048, 41.766786],
      [123.781824, 41.752133],
      [123.790021, 41.7388],
      [123.801065, 41.728917],
      [123.801204, 41.718512],
      [123.811553, 41.708815],
      [123.808567, 41.697272],
      [123.790507, 41.685631],
      [123.79648, 41.680757],
      [123.779115, 41.65709],
      [123.76953, 41.657326],
      [123.764459, 41.6462],
      [123.752998, 41.642932],
      [123.749872, 41.636824],
      [123.759597, 41.619441],
      [123.767446, 41.61873],
      [123.770711, 41.60826],
      [123.782102, 41.606602],
      [123.791827, 41.598499],
      [123.776337, 41.58741],
      [123.760222, 41.584898],
      [123.721741, 41.568307],
      [123.725561, 41.556549],
      [123.735633, 41.55138],
      [123.729868, 41.543175],
      [123.73987, 41.54033],
      [123.74758, 41.527238]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 210500,
      "name": "本溪市",
      "center": [123.770519, 41.297909],
      "centroid": [124.574237, 41.231499],
      "childrenNum": 6,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Benxi,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [123.591502, 41.494022],
      [123.601366, 41.48676],
      [123.607617, 41.467675],
      [123.644362, 41.458178],
      [123.652697, 41.449439],
      [123.652836, 41.438609],
      [123.631164, 41.416801],
      [123.633943, 41.406869],
      [123.642556, 41.392562],
      [123.652628, 41.386952],
      [123.650058, 41.378537],
      [123.655475, 41.37245],
      [123.652628, 41.353236],
      [123.658254, 41.345958],
      [123.654642, 41.327688],
      [123.661796, 41.324928],
      [123.663324, 41.316077],
      [123.65617, 41.298655],
      [123.657768, 41.286895],
      [123.664019, 41.283705],
      [123.665547, 41.269133],
      [123.670201, 41.260702],
      [123.636374, 41.246887],
      [123.619495, 41.246601],
      [123.616022, 41.254795],
      [123.600463, 41.24217],
      [123.59692, 41.23426],
      [123.608798, 41.22001],
      [123.598934, 41.206663],
      [123.619286, 41.202849],
      [123.624913, 41.189308],
      [123.63422, 41.181248],
      [123.639013, 41.169324],
      [123.638458, 41.159259],
      [123.649085, 41.157446],
      [123.664644, 41.139123],
      [123.655267, 41.129148],
      [123.651308, 41.112775],
      [123.660477, 41.095873],
      [123.660685, 41.086846],
      [123.671104, 41.071657],
      [123.679648, 41.069889],
      [123.68972, 41.059665],
      [123.685344, 41.0503],
      [123.670757, 41.043227],
      [123.65999, 41.041602],
      [123.660824, 41.017797],
      [123.650127, 41.016314],
      [123.647349, 41.006943],
      [123.652072, 40.975423],
      [123.656587, 40.973796],
      [123.648043, 40.964658],
      [123.657976, 40.952647],
      [123.646515, 40.930724],
      [123.632415, 40.923926],
      [123.623662, 40.912242],
      [123.625191, 40.906879],
      [123.619425, 40.896629],
      [123.608659, 40.89227],
      [123.604908, 40.874017],
      [123.582264, 40.857485],
      [123.597684, 40.856958],
      [123.623593, 40.851637],
      [123.638805, 40.845071],
      [123.663741, 40.826757],
      [123.671868, 40.825798],
      [123.686594, 40.833853],
      [123.695346, 40.815344],
      [123.71417, 40.820475],
      [123.722505, 40.830113],
      [123.732646, 40.830928],
      [123.737578, 40.846892],
      [123.743135, 40.852213],
      [123.767724, 40.849193],
      [123.772864, 40.855664],
      [123.791688, 40.850871],
      [123.80169, 40.857293],
      [123.814054, 40.855088],
      [123.824543, 40.862613],
      [123.835309, 40.854226],
      [123.852257, 40.852261],
      [123.872818, 40.839797],
      [123.879208, 40.842338],
      [123.895323, 40.840181],
      [123.897962, 40.831503],
      [123.915953, 40.835003],
      [123.931442, 40.826613],
      [123.938666, 40.829058],
      [123.955545, 40.846125],
      [123.974577, 40.85274],
      [123.97298, 40.857293],
      [123.980621, 40.867692],
      [123.996597, 40.861846],
      [124.016393, 40.859881],
      [124.031257, 40.865632],
      [124.043413, 40.865632],
      [124.084395, 40.861175],
      [124.093841, 40.857629],
      [124.094189, 40.848857],
      [124.10308, 40.846461],
      [124.11593, 40.853794],
      [124.134406, 40.853555],
      [124.143506, 40.863044],
      [124.141283, 40.879911],
      [124.14934, 40.887432],
      [124.149132, 40.89318],
      [124.13142, 40.909513],
      [124.132184, 40.925075],
      [124.136212, 40.935272],
      [124.147534, 40.951594],
      [124.147951, 40.957336],
      [124.129544, 40.967002],
      [124.127321, 40.98456],
      [124.118014, 40.994126],
      [124.107039, 41.016171],
      [124.093564, 41.03601],
      [124.123223, 41.039881],
      [124.120167, 41.04662],
      [124.13517, 41.049726],
      [124.146006, 41.055078],
      [124.151007, 41.053023],
      [124.174485, 41.033046],
      [124.184696, 41.027119],
      [124.200255, 41.033381],
      [124.208938, 41.045999],
      [124.216023, 41.041841],
      [124.232068, 41.042223],
      [124.237833, 41.052354],
      [124.235888, 41.064634],
      [124.241723, 41.073042],
      [124.237347, 41.080781],
      [124.250961, 41.089855],
      [124.256588, 41.098499],
      [124.268535, 41.100982],
      [124.285483, 41.100122],
      [124.295555, 41.096064],
      [124.2975, 41.089091],
      [124.291874, 41.064921],
      [124.297222, 41.053931],
      [124.31167, 41.056607],
      [124.338621, 41.072135],
      [124.35675, 41.065685],
      [124.365502, 41.056177],
      [124.375365, 41.053023],
      [124.405511, 41.071609],
      [124.420515, 41.077198],
      [124.466359, 41.061481],
      [124.475458, 41.061767],
      [124.503867, 41.0503],
      [124.510466, 41.049439],
      [124.518037, 41.062341],
      [124.53957, 41.074666],
      [124.541446, 41.089091],
      [124.56798, 41.100457],
      [124.585136, 41.102032],
      [124.591388, 41.097878],
      [124.613893, 41.091145],
      [124.633967, 41.09635],
      [124.638204, 41.103226],
      [124.650846, 41.091622],
      [124.671267, 41.095729],
      [124.672448, 41.113444],
      [124.681131, 41.126857],
      [124.702386, 41.1249],
      [124.719543, 41.133587],
      [124.71857, 41.139409],
      [124.736005, 41.154822],
      [124.74955, 41.151721],
      [124.764623, 41.13793],
      [124.79463, 41.133158],
      [124.814009, 41.143561],
      [124.836931, 41.137882],
      [124.855824, 41.138646],
      [124.892361, 41.122514],
      [124.912018, 41.118265],
      [124.921326, 41.119363],
      [124.948624, 41.115114],
      [124.960293, 41.116976],
      [124.97995, 41.111056],
      [124.997385, 41.098451],
      [125.005998, 41.098594],
      [125.016487, 41.110579],
      [125.022877, 41.109624],
      [125.051425, 41.116929],
      [125.083516, 41.097592],
      [125.103521, 41.089999],
      [125.13707, 41.098308],
      [125.146517, 41.102701],
      [125.169022, 41.106903],
      [125.197084, 41.101603],
      [125.217784, 41.113205],
      [125.230912, 41.113491],
      [125.264531, 41.096875],
      [125.27488, 41.1006],
      [125.299886, 41.08699],
      [125.307179, 41.079061],
      [125.309263, 41.064921],
      [125.317251, 41.056321],
      [125.312181, 41.045186],
      [125.326142, 41.046333],
      [125.333922, 41.036966],
      [125.350245, 41.038352],
      [125.356288, 41.031039],
      [125.346911, 41.024585],
      [125.341562, 41.010242],
      [125.34705, 41.008951],
      [125.35469, 40.998478],
      [125.390254, 40.999674],
      [125.387545, 41.015119],
      [125.395881, 41.016793],
      [125.408106, 41.012776],
      [125.432556, 41.011342],
      [125.433667, 41.026019],
      [125.443669, 41.031517],
      [125.457006, 41.025446],
      [125.46159, 41.016984],
      [125.460618, 41.007086],
      [125.467078, 40.993457],
      [125.456659, 40.980733],
      [125.45652, 40.969108],
      [125.46555, 40.962361],
      [125.495973, 40.953364],
      [125.503753, 40.957289],
      [125.502016, 40.967385],
      [125.489513, 40.975327],
      [125.490764, 40.982407],
      [125.502364, 40.987908],
      [125.523063, 40.988721],
      [125.529592, 40.986043],
      [125.531954, 40.976858],
      [125.524522, 40.957528],
      [125.502433, 40.944414],
      [125.501113, 40.938479],
      [125.520979, 40.91229],
      [125.530912, 40.908076],
      [125.547999, 40.912242],
      [125.555501, 40.926894],
      [125.572172, 40.931969],
      [125.585925, 40.918898],
      [125.591829, 40.924596],
      [125.589398, 40.931107],
      [125.614473, 40.942069],
      [125.635659, 40.941973],
      [125.64448, 40.950254],
      [125.647814, 40.967433],
      [125.662748, 40.977432],
      [125.674001, 40.974418],
      [125.683934, 40.986282],
      [125.679141, 40.998048],
      [125.682822, 41.017079],
      [125.689074, 41.026019],
      [125.706508, 41.033763],
      [125.715816, 41.046954],
      [125.726374, 41.055222],
      [125.732487, 41.076195],
      [125.739363, 41.089378],
      [125.731306, 41.094488],
      [125.712274, 41.095634],
      [125.713802, 41.105232],
      [125.724777, 41.118361],
      [125.734848, 41.125807],
      [125.747838, 41.124805],
      [125.758048, 41.130342],
      [125.765619, 41.148428],
      [125.791111, 41.166319],
      [125.783193, 41.172043],
      [125.775066, 41.17066],
      [125.738252, 41.178625],
      [125.735404, 41.194315],
      [125.748879, 41.220106],
      [125.758048, 41.23183],
      [125.749574, 41.245505],
      [125.71922, 41.243742],
      [125.71276, 41.248411],
      [125.694909, 41.244552],
      [125.691574, 41.258035],
      [125.68317, 41.274848],
      [125.67546, 41.27761],
      [125.664832, 41.268514],
      [125.647745, 41.264179],
      [125.638645, 41.283943],
      [125.642257, 41.295799],
      [125.620099, 41.318313],
      [125.631352, 41.322168],
      [125.639271, 41.3314],
      [125.637187, 41.344436],
      [125.621072, 41.361179],
      [125.610375, 41.365079],
      [125.589606, 41.35942],
      [125.579187, 41.36741],
      [125.586411, 41.380201],
      [125.581549, 41.395556],
      [125.557863, 41.397838],
      [125.548277, 41.402164],
      [125.552723, 41.409435],
      [125.54668, 41.41932],
      [125.540081, 41.41989],
      [125.534316, 41.428823],
      [125.54022, 41.436471],
      [125.535496, 41.447112],
      [125.540845, 41.459033],
      [125.539178, 41.469764],
      [125.532162, 41.47926],
      [125.516464, 41.478642],
      [125.517645, 41.489466],
      [125.505837, 41.503324],
      [125.493473, 41.509256],
      [125.495487, 41.522257],
      [125.504517, 41.524819],
      [125.507365, 41.533642],
      [125.492848, 41.536583],
      [125.477219, 41.548297],
      [125.476802, 41.560057],
      [125.462493, 41.568354],
      [125.451588, 41.550574],
      [125.426235, 41.550526],
      [125.417136, 41.544077],
      [125.399979, 41.547491],
      [125.381641, 41.562381],
      [125.373723, 41.552613],
      [125.367332, 41.538907],
      [125.353857, 41.531745],
      [125.338437, 41.516563],
      [125.328434, 41.511297],
      [125.3226, 41.496823],
      [125.295927, 41.493026],
      [125.278562, 41.494592],
      [125.258765, 41.50508],
      [125.252028, 41.498294],
      [125.249735, 41.486997],
      [125.22216, 41.480019],
      [125.20917, 41.482868],
      [125.201947, 41.500809],
      [125.17576, 41.492409],
      [125.172009, 41.485668],
      [125.154644, 41.488326],
      [125.132764, 41.501331],
      [125.123664, 41.50247],
      [125.105049, 41.495494],
      [125.09206, 41.493358],
      [125.068235, 41.493975],
      [125.067193, 41.474465],
      [125.057399, 41.47399],
      [124.998496, 41.497155],
      [124.989189, 41.496395],
      [124.969948, 41.501806],
      [124.959668, 41.510775],
      [124.957028, 41.520074],
      [124.940149, 41.504701],
      [124.920423, 41.500335],
      [124.916463, 41.492503],
      [124.905836, 41.484102],
      [124.89889, 41.47399],
      [124.880413, 41.470619],
      [124.888332, 41.457703],
      [124.881594, 41.444832],
      [124.864437, 41.443407],
      [124.860964, 41.434001],
      [124.863257, 41.425877],
      [124.853602, 41.419937],
      [124.862354, 41.399787],
      [124.856797, 41.396602],
      [124.86027, 41.384195],
      [124.856519, 41.373401],
      [124.868675, 41.368741],
      [124.86416, 41.361132],
      [124.87187, 41.347956],
      [124.867841, 41.333731],
      [124.872564, 41.327403],
      [124.864368, 41.324405],
      [124.839918, 41.321883],
      [124.834778, 41.310413],
      [124.803104, 41.298084],
      [124.784766, 41.289466],
      [124.7765, 41.281324],
      [124.763233, 41.2748],
      [124.733226, 41.269418],
      [124.711971, 41.262274],
      [124.677311, 41.264798],
      [124.671059, 41.254986],
      [124.654041, 41.239788],
      [124.640705, 41.244695],
      [124.64001, 41.259892],
      [124.632995, 41.264322],
      [124.601946, 41.26537],
      [124.567007, 41.286895],
      [124.542696, 41.311841],
      [124.517065, 41.318932],
      [124.500394, 41.331876],
      [124.488169, 41.335159],
      [124.476222, 41.333826],
      [124.464275, 41.32864],
      [124.458718, 41.319027],
      [124.466706, 41.307366],
      [124.462816, 41.303654],
      [124.438783, 41.304177],
      [124.424127, 41.311698],
      [124.420862, 41.325832],
      [124.413569, 41.338346],
      [124.393842, 41.344198],
      [124.389396, 41.354711],
      [124.388563, 41.369407],
      [124.368975, 41.3773],
      [124.36057, 41.383814],
      [124.348553, 41.39993],
      [124.345497, 41.408057],
      [124.345775, 41.42944],
      [124.357653, 41.441602],
      [124.378769, 41.455281],
      [124.384465, 41.461739],
      [124.371198, 41.473705],
      [124.341538, 41.473942],
      [124.331049, 41.479117],
      [124.332508, 41.488754],
      [124.310211, 41.495351],
      [124.31035, 41.504511],
      [124.317991, 41.507073],
      [124.309378, 41.515804],
      [124.300348, 41.537958],
      [124.282983, 41.542986],
      [124.257352, 41.540519],
      [124.237764, 41.548866],
      [124.230193, 41.549151],
      [124.209146, 41.536203],
      [124.201992, 41.534211],
      [124.178236, 41.535397],
      [124.169067, 41.521071],
      [124.14677, 41.516896],
      [124.140727, 41.517797],
      [124.128016, 41.509826],
      [124.115513, 41.505934],
      [124.105441, 41.528377],
      [124.09794, 41.535539],
      [124.061751, 41.529942],
      [124.052929, 41.530464],
      [124.025701, 41.546116],
      [123.986664, 41.559346],
      [123.975064, 41.560674],
      [123.959505, 41.55726],
      [123.946793, 41.550147],
      [123.933874, 41.548961],
      [123.921926, 41.568449],
      [123.887891, 41.566885],
      [123.867747, 41.562381],
      [123.860315, 41.550906],
      [123.86219, 41.532029],
      [123.859551, 41.52387],
      [123.849132, 41.518746],
      [123.825307, 41.513384],
      [123.807247, 41.507406],
      [123.791966, 41.506599],
      [123.781685, 41.512673],
      [123.787242, 41.523538],
      [123.783769, 41.541563],
      [123.771683, 41.539476],
      [123.74758, 41.527238],
      [123.745635, 41.520596],
      [123.727437, 41.517133],
      [123.71924, 41.510348],
      [123.703403, 41.515662],
      [123.702917, 41.520786],
      [123.692359, 41.526479],
      [123.683815, 41.519742],
      [123.677703, 41.528709],
      [123.664714, 41.527048],
      [123.646584, 41.518651],
      [123.629567, 41.523822],
      [123.625816, 41.516896],
      [123.615813, 41.513479],
      [123.61623, 41.508639],
      [123.603866, 41.506029],
      [123.605533, 41.502423],
      [123.591502, 41.494022]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 210600,
      "name": "丹东市",
      "center": [124.383044, 40.124296],
      "centroid": [124.40518, 40.544775],
      "childrenNum": 6,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Dandong,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [123.518846, 39.770327],
      [123.535586, 39.775343],
      [123.534545, 39.788345],
      [123.54156, 39.786057],
      [123.548298, 39.774905],
      [123.542949, 39.762924],
      [123.546631, 39.756347],
      [123.565454, 39.76156],
      [123.570108, 39.774077],
      [123.576638, 39.780993],
      [123.586432, 39.771301],
      [123.612549, 39.774954],
      [123.64207, 39.79633],
      [123.646307, 39.802513],
      [123.645126, 39.823881],
      [123.658462, 39.831375],
      [123.661866, 39.825585],
      [123.674924, 39.826752],
      [123.687983, 39.808257],
      [123.697013, 39.806943],
      [123.73605, 39.817506],
      [123.777657, 39.822129],
      [123.795022, 39.822762],
      [123.812318, 39.831278],
      [123.828919, 39.831424],
      [123.851007, 39.825828],
      [123.871359, 39.822811],
      [123.910813, 39.819501],
      [123.944015, 39.819404],
      [123.951725, 39.817652],
      [123.967006, 39.808063],
      [124.002709, 39.800371],
      [124.052999, 39.810253],
      [124.071683, 39.817944],
      [124.103288, 39.823395],
      [124.107247, 39.818868],
      [124.095508, 39.792289],
      [124.099259, 39.777535],
      [124.144756, 39.745435],
      [124.150799, 39.745776],
      [124.164066, 39.778412],
      [124.166497, 39.827239],
      [124.173304, 39.841302],
      [124.189905, 39.848453],
      [124.213522, 39.86329],
      [124.214842, 39.892418],
      [124.224011, 39.905398],
      [124.227067, 39.915362],
      [124.241167, 39.928095],
      [124.268465, 39.934751],
      [124.286456, 39.931885],
      [124.296111, 39.9468],
      [124.288887, 39.948063],
      [124.288678, 39.963024],
      [124.297222, 39.968755],
      [124.315143, 39.968852],
      [124.328201, 39.979583],
      [124.350429, 39.989148],
      [124.349318, 39.972348],
      [124.366474, 40.000217],
      [124.371892, 40.021377],
      [124.36064, 40.039815],
      [124.344316, 40.043308],
      [124.336606, 40.049954],
      [124.336954, 40.061449],
      [124.350776, 40.083851],
      [124.377657, 40.107409],
      [124.388771, 40.113225],
      [124.405928, 40.134738],
      [124.419751, 40.1437],
      [124.427947, 40.144475],
      [124.445729, 40.164041],
      [124.445868, 40.168593],
      [124.45719, 40.177357],
      [124.490114, 40.183989],
      [124.492059, 40.189895],
      [124.506924, 40.20519],
      [124.514842, 40.220433],
      [124.524567, 40.224884],
      [124.527206, 40.231076],
      [124.548183, 40.238429],
      [124.558255, 40.247668],
      [124.588331, 40.267543],
      [124.593541, 40.273103],
      [124.620909, 40.290602],
      [124.649735, 40.294566],
      [124.705512, 40.315973],
      [124.727461, 40.325684],
      [124.735032, 40.344039],
      [124.739269, 40.371707],
      [124.756148, 40.384692],
      [124.800603, 40.40583],
      [124.833875, 40.423102],
      [124.862701, 40.441478],
      [124.881525, 40.456861],
      [124.897362, 40.478988],
      [124.906947, 40.484724],
      [124.913268, 40.481784],
      [124.914102, 40.467419],
      [124.922298, 40.458838],
      [124.940983, 40.4558],
      [124.961821, 40.460525],
      [124.978006, 40.468432],
      [124.985855, 40.475132],
      [124.995857, 40.477157],
      [125.012458, 40.470987],
      [125.024614, 40.476385],
      [125.024891, 40.464575],
      [125.044271, 40.466455],
      [125.043021, 40.48376],
      [125.032046, 40.484724],
      [125.031143, 40.49229],
      [125.017042, 40.491422],
      [125.004609, 40.496241],
      [125.001831, 40.513394],
      [125.017945, 40.536321],
      [125.035449, 40.542966],
      [125.047744, 40.550478],
      [125.07664, 40.56184],
      [125.093171, 40.563669],
      [125.113662, 40.569301],
      [125.124915, 40.576665],
      [125.150962, 40.589563],
      [125.181734, 40.611309],
      [125.190069, 40.615158],
      [125.214866, 40.620689],
      [125.237927, 40.618092],
      [125.262725, 40.620208],
      [125.269601, 40.630116],
      [125.273213, 40.648916],
      [125.279673, 40.655166],
      [125.305373, 40.661175],
      [125.311416, 40.658868],
      [125.329268, 40.64382],
      [125.34191, 40.64406],
      [125.353649, 40.650551],
      [125.375737, 40.658291],
      [125.383725, 40.656512],
      [125.407272, 40.631895],
      [125.422553, 40.635502],
      [125.42172, 40.649013],
      [125.414357, 40.661319],
      [125.418872, 40.673191],
      [125.427902, 40.676507],
      [125.453672, 40.676651],
      [125.458951, 40.69198],
      [125.460201, 40.707161],
      [125.479233, 40.72349],
      [125.495626, 40.728773],
      [125.505489, 40.726564],
      [125.536538, 40.726036],
      [125.547999, 40.733719],
      [125.551403, 40.745866],
      [125.551056, 40.761706],
      [125.572658, 40.780566],
      [125.585439, 40.788434],
      [125.597177, 40.788962],
      [125.595997, 40.775384],
      [125.604471, 40.767369],
      [125.617252, 40.763674],
      [125.657052, 40.769241],
      [125.679002, 40.768329],
      [125.688101, 40.775959],
      [125.675946, 40.787907],
      [125.640729, 40.798317],
      [125.636492, 40.80791],
      [125.648092, 40.826037],
      [125.673306, 40.835003],
      [125.68956, 40.850966],
      [125.688588, 40.857053],
      [125.699423, 40.85897],
      [125.707759, 40.866974],
      [125.705605, 40.874257],
      [125.692894, 40.891791],
      [125.6831, 40.901132],
      [125.666082, 40.90798],
      [125.655455, 40.915977],
      [125.64712, 40.908268],
      [125.625448, 40.906927],
      [125.610861, 40.90252],
      [125.587453, 40.892079],
      [125.576964, 40.898976],
      [125.585925, 40.918898],
      [125.572172, 40.931969],
      [125.555501, 40.926894],
      [125.547999, 40.912242],
      [125.530912, 40.908076],
      [125.520979, 40.91229],
      [125.501113, 40.938479],
      [125.502433, 40.944414],
      [125.524522, 40.957528],
      [125.531954, 40.976858],
      [125.529592, 40.986043],
      [125.523063, 40.988721],
      [125.502364, 40.987908],
      [125.490764, 40.982407],
      [125.489513, 40.975327],
      [125.502016, 40.967385],
      [125.503753, 40.957289],
      [125.495973, 40.953364],
      [125.46555, 40.962361],
      [125.45652, 40.969108],
      [125.456659, 40.980733],
      [125.467078, 40.993457],
      [125.460618, 41.007086],
      [125.46159, 41.016984],
      [125.457006, 41.025446],
      [125.443669, 41.031517],
      [125.433667, 41.026019],
      [125.432556, 41.011342],
      [125.408106, 41.012776],
      [125.395881, 41.016793],
      [125.387545, 41.015119],
      [125.390254, 40.999674],
      [125.35469, 40.998478],
      [125.34705, 41.008951],
      [125.341562, 41.010242],
      [125.346911, 41.024585],
      [125.356288, 41.031039],
      [125.350245, 41.038352],
      [125.333922, 41.036966],
      [125.326142, 41.046333],
      [125.312181, 41.045186],
      [125.317251, 41.056321],
      [125.309263, 41.064921],
      [125.307179, 41.079061],
      [125.299886, 41.08699],
      [125.27488, 41.1006],
      [125.264531, 41.096875],
      [125.230912, 41.113491],
      [125.217784, 41.113205],
      [125.197084, 41.101603],
      [125.169022, 41.106903],
      [125.146517, 41.102701],
      [125.13707, 41.098308],
      [125.103521, 41.089999],
      [125.083516, 41.097592],
      [125.051425, 41.116929],
      [125.022877, 41.109624],
      [125.016487, 41.110579],
      [125.005998, 41.098594],
      [124.997385, 41.098451],
      [124.97995, 41.111056],
      [124.960293, 41.116976],
      [124.948624, 41.115114],
      [124.921326, 41.119363],
      [124.912018, 41.118265],
      [124.892361, 41.122514],
      [124.855824, 41.138646],
      [124.836931, 41.137882],
      [124.814009, 41.143561],
      [124.79463, 41.133158],
      [124.764623, 41.13793],
      [124.74955, 41.151721],
      [124.736005, 41.154822],
      [124.71857, 41.139409],
      [124.719543, 41.133587],
      [124.702386, 41.1249],
      [124.681131, 41.126857],
      [124.672448, 41.113444],
      [124.671267, 41.095729],
      [124.650846, 41.091622],
      [124.638204, 41.103226],
      [124.633967, 41.09635],
      [124.613893, 41.091145],
      [124.591388, 41.097878],
      [124.585136, 41.102032],
      [124.56798, 41.100457],
      [124.541446, 41.089091],
      [124.53957, 41.074666],
      [124.518037, 41.062341],
      [124.510466, 41.049439],
      [124.503867, 41.0503],
      [124.475458, 41.061767],
      [124.466359, 41.061481],
      [124.420515, 41.077198],
      [124.405511, 41.071609],
      [124.375365, 41.053023],
      [124.365502, 41.056177],
      [124.35675, 41.065685],
      [124.338621, 41.072135],
      [124.31167, 41.056607],
      [124.297222, 41.053931],
      [124.291874, 41.064921],
      [124.2975, 41.089091],
      [124.295555, 41.096064],
      [124.285483, 41.100122],
      [124.268535, 41.100982],
      [124.256588, 41.098499],
      [124.250961, 41.089855],
      [124.237347, 41.080781],
      [124.241723, 41.073042],
      [124.235888, 41.064634],
      [124.237833, 41.052354],
      [124.232068, 41.042223],
      [124.216023, 41.041841],
      [124.208938, 41.045999],
      [124.200255, 41.033381],
      [124.184696, 41.027119],
      [124.174485, 41.033046],
      [124.151007, 41.053023],
      [124.146006, 41.055078],
      [124.13517, 41.049726],
      [124.120167, 41.04662],
      [124.123223, 41.039881],
      [124.093564, 41.03601],
      [124.107039, 41.016171],
      [124.118014, 40.994126],
      [124.127321, 40.98456],
      [124.129544, 40.967002],
      [124.147951, 40.957336],
      [124.147534, 40.951594],
      [124.136212, 40.935272],
      [124.132184, 40.925075],
      [124.13142, 40.909513],
      [124.149132, 40.89318],
      [124.14934, 40.887432],
      [124.141283, 40.879911],
      [124.143506, 40.863044],
      [124.134406, 40.853555],
      [124.11593, 40.853794],
      [124.10308, 40.846461],
      [124.094189, 40.848857],
      [124.093841, 40.857629],
      [124.084395, 40.861175],
      [124.043413, 40.865632],
      [124.031257, 40.865632],
      [124.016393, 40.859881],
      [123.996597, 40.861846],
      [123.980621, 40.867692],
      [123.97298, 40.857293],
      [123.974577, 40.85274],
      [123.955545, 40.846125],
      [123.938666, 40.829058],
      [123.931442, 40.826613],
      [123.915953, 40.835003],
      [123.897962, 40.831503],
      [123.895323, 40.840181],
      [123.879208, 40.842338],
      [123.872818, 40.839797],
      [123.852257, 40.852261],
      [123.835309, 40.854226],
      [123.824543, 40.862613],
      [123.814054, 40.855088],
      [123.80169, 40.857293],
      [123.791688, 40.850871],
      [123.772864, 40.855664],
      [123.767724, 40.849193],
      [123.743135, 40.852213],
      [123.737578, 40.846892],
      [123.732646, 40.830928],
      [123.722505, 40.830113],
      [123.71417, 40.820475],
      [123.695346, 40.815344],
      [123.686594, 40.833853],
      [123.671868, 40.825798],
      [123.663741, 40.826757],
      [123.638805, 40.845071],
      [123.623593, 40.851637],
      [123.597684, 40.856958],
      [123.582264, 40.857485],
      [123.574971, 40.856814],
      [123.544477, 40.861079],
      [123.537531, 40.851446],
      [123.539476, 40.837353],
      [123.533711, 40.826996],
      [123.544894, 40.821242],
      [123.55698, 40.806088],
      [123.581222, 40.786899],
      [123.585529, 40.777543],
      [123.581083, 40.768761],
      [123.567747, 40.763482],
      [123.557328, 40.747642],
      [123.556008, 40.728485],
      [123.551423, 40.722962],
      [123.560175, 40.719937],
      [123.558925, 40.713021],
      [123.570386, 40.712156],
      [123.581014, 40.704615],
      [123.577263, 40.692316],
      [123.582889, 40.686454],
      [123.592544, 40.686118],
      [123.623176, 40.693613],
      [123.636304, 40.690875],
      [123.663811, 40.675738],
      [123.694999, 40.66603],
      [123.710488, 40.657041],
      [123.725422, 40.654205],
      [123.731118, 40.648964],
      [123.748761, 40.610732],
      [123.731396, 40.603035],
      [123.717434, 40.592498],
      [123.721324, 40.586627],
      [123.738134, 40.575703],
      [123.74119, 40.549226],
      [123.735216, 40.538632],
      [123.74112, 40.532083],
      [123.737925, 40.524955],
      [123.740843, 40.511129],
      [123.738203, 40.507805],
      [123.767307, 40.499952],
      [123.76953, 40.492386],
      [123.756818, 40.471035],
      [123.766196, 40.456957],
      [123.769252, 40.443504],
      [123.747511, 40.41765],
      [123.761681, 40.402886],
      [123.75147, 40.383292],
      [123.73855, 40.363548],
      [123.71799, 40.341721],
      [123.715976, 40.333075],
      [123.708057, 40.326215],
      [123.705487, 40.314137],
      [123.711322, 40.300172],
      [123.680342, 40.290312],
      [123.673396, 40.276826],
      [123.647696, 40.260387],
      [123.635818, 40.264787],
      [123.624149, 40.249506],
      [123.611576, 40.241332],
      [123.596156, 40.243024],
      [123.589905, 40.225948],
      [123.583653, 40.221642],
      [123.576915, 40.205383],
      [123.560523, 40.187136],
      [123.571914, 40.172854],
      [123.583306, 40.166123],
      [123.599768, 40.170336],
      [123.606297, 40.168545],
      [123.606714, 40.159392],
      [123.59046, 40.130281],
      [123.575179, 40.115745],
      [123.567955, 40.114581],
      [123.563232, 40.102514],
      [123.553577, 40.09946],
      [123.546283, 40.102514],
      [123.528849, 40.103338],
      [123.513498, 40.093789],
      [123.513776, 40.090493],
      [123.476267, 40.071875],
      [123.482935, 40.050972],
      [123.471127, 40.046898],
      [123.46814, 40.041125],
      [123.458138, 40.058102],
      [123.464111, 40.038263],
      [123.472863, 40.037438],
      [123.47717, 40.031276],
      [123.457721, 40.033023],
      [123.448483, 40.037147],
      [123.422991, 40.030548],
      [123.40632, 40.013564],
      [123.404862, 40.009245],
      [123.407918, 39.9991],
      [123.401041, 39.993178],
      [123.401666, 39.981817],
      [123.377077, 39.971523],
      [123.384996, 39.954864],
      [123.393331, 39.954378],
      [123.391247, 39.935918],
      [123.399096, 39.93446],
      [123.397846, 39.926005],
      [123.407362, 39.9348],
      [123.420143, 39.933877],
      [123.437161, 39.922701],
      [123.456749, 39.929164],
      [123.470571, 39.924887],
      [123.490506, 39.898058],
      [123.480782, 39.891446],
      [123.474253, 39.881284],
      [123.476614, 39.868299],
      [123.483074, 39.859934],
      [123.500162, 39.851907],
      [123.504399, 39.843832],
      [123.501273, 39.828358],
      [123.504468, 39.820182],
      [123.514679, 39.814342],
      [123.518846, 39.79857],
      [123.518846, 39.770327]]],


      [
      [
      [123.825654, 39.786252],
      [123.825446, 39.796136],
      [123.808636, 39.791462],
      [123.825654, 39.786252]]],


      [
      [
      [123.716531, 39.74524],
      [123.725631, 39.748991],
      [123.752373, 39.749332],
      [123.75668, 39.754107],
      [123.748275, 39.763265],
      [123.730632, 39.765944],
      [123.720143, 39.76307],
      [123.721324, 39.758442],
      [123.711183, 39.749186],
      [123.716531, 39.74524]]],


      [
      [
      [124.811717, 40.404286],
      [124.828943, 40.415769],
      [124.796505, 40.400184],
      [124.811717, 40.404286]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 210700,
      "name": "锦州市",
      "center": [121.135742, 41.119269],
      "centroid": [121.618541, 41.461822],
      "childrenNum": 7,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Jinzhou,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [121.555125, 40.849624],
      [121.56742, 40.859162],
      [121.571032, 40.867932],
      [121.584507, 40.885708],
      [121.59708, 40.896581],
      [121.618682, 40.907837],
      [121.628754, 40.908076],
      [121.647786, 40.937761],
      [121.650981, 40.952694],
      [121.663553, 40.959298],
      [121.662164, 40.969873],
      [121.666818, 40.98566],
      [121.673417, 40.991974],
      [121.676334, 41.007756],
      [121.667165, 41.027167],
      [121.661261, 41.034385],
      [121.662789, 41.050491],
      [121.651189, 41.05417],
      [121.6473, 41.062484],
      [121.666888, 41.059809],
      [121.680154, 41.084793],
      [121.672583, 41.090237],
      [121.692102, 41.096637],
      [121.691477, 41.093294],
      [121.714537, 41.091479],
      [121.714468, 41.087276],
      [121.747531, 41.085843],
      [121.758576, 41.088661],
      [121.763438, 41.100791],
      [121.739196, 41.114589],
      [121.7426, 41.107237],
      [121.722248, 41.108096],
      [121.716899, 41.103608],
      [121.695436, 41.104897],
      [121.682377, 41.099979],
      [121.665637, 41.099502],
      [121.610763, 41.103274],
      [121.585132, 41.108049],
      [121.566795, 41.134494],
      [121.567698, 41.145947],
      [121.602359, 41.180724],
      [121.615626, 41.182011],
      [121.618821, 41.186828],
      [121.620418, 41.206758],
      [121.602706, 41.211573],
      [121.591314, 41.209333],
      [121.580895, 41.215959],
      [121.577422, 41.225587],
      [121.58027, 41.249698],
      [121.6009, 41.257606],
      [121.638061, 41.281134],
      [121.685989, 41.305224],
      [121.701548, 41.315791],
      [121.717108, 41.316457],
      [121.729333, 41.328688],
      [121.747045, 41.337062],
      [121.759062, 41.331257],
      [121.784276, 41.333493],
      [121.794973, 41.345673],
      [121.801433, 41.348765],
      [121.827411, 41.35238],
      [121.845749, 41.352713],
      [121.867768, 41.340963],
      [121.869296, 41.330401],
      [121.884716, 41.322549],
      [121.90347, 41.337014],
      [121.90229, 41.354758],
      [121.910833, 41.355805],
      [121.919585, 41.363795],
      [121.944522, 41.369169],
      [121.95626, 41.386239],
      [121.975154, 41.383862],
      [122.010648, 41.386049],
      [122.020303, 41.382483],
      [122.026346, 41.371119],
      [122.040725, 41.371547],
      [122.069967, 41.38757],
      [122.077052, 41.386477],
      [122.086291, 41.393845],
      [122.093723, 41.39375],
      [122.099071, 41.399882],
      [122.123869, 41.415898],
      [122.143318, 41.422598],
      [122.137275, 41.428728],
      [122.169296, 41.443122],
      [122.177562, 41.451956],
      [122.185064, 41.448537],
      [122.193746, 41.459602],
      [122.215557, 41.485336],
      [122.283837, 41.515899],
      [122.298284, 41.514571],
      [122.330097, 41.525483],
      [122.357118, 41.541326],
      [122.368092, 41.545404],
      [122.409213, 41.548677],
      [122.452834, 41.549341],
      [122.470547, 41.556691],
      [122.487356, 41.566316],
      [122.479646, 41.583239],
      [122.485828, 41.58158],
      [122.492635, 41.590917],
      [122.484439, 41.597599],
      [122.487078, 41.605323],
      [122.502429, 41.630098],
      [122.510139, 41.62773],
      [122.526532, 41.655054],
      [122.515835, 41.658131],
      [122.517502, 41.676971],
      [122.526671, 41.676261],
      [122.532992, 41.669919],
      [122.550635, 41.678911],
      [122.549524, 41.69907],
      [122.555983, 41.708106],
      [122.572515, 41.712505],
      [122.572168, 41.728444],
      [122.575432, 41.731518],
      [122.570431, 41.740644],
      [122.579878, 41.754969],
      [122.600369, 41.766549],
      [122.596479, 41.772268],
      [122.56925, 41.772835],
      [122.55772, 41.774914],
      [122.560915, 41.789137],
      [122.552927, 41.786869],
      [122.540077, 41.800664],
      [122.529519, 41.808363],
      [122.511459, 41.81677],
      [122.513612, 41.820595],
      [122.498817, 41.82494],
      [122.487148, 41.832211],
      [122.459225, 41.843022],
      [122.457627, 41.861194],
      [122.459572, 41.870538],
      [122.453321, 41.882852],
      [122.443874, 41.890636],
      [122.443388, 41.901202],
      [122.473881, 41.906201],
      [122.509028, 41.90422],
      [122.523129, 41.900117],
      [122.517849, 41.912331],
      [122.521045, 41.916622],
      [122.515766, 41.926523],
      [122.517919, 41.936329],
      [122.507917, 41.938733],
      [122.500971, 41.956783],
      [122.501526, 41.970918],
      [122.494789, 41.988771],
      [122.497289, 41.999274],
      [122.483744, 42.02145],
      [122.469366, 42.029169],
      [122.477632, 42.038582],
      [122.477076, 42.043571],
      [122.462767, 42.041688],
      [122.459016, 42.055523],
      [122.447347, 42.063473],
      [122.453182, 42.072458],
      [122.439359, 42.074481],
      [122.436164, 42.084169],
      [122.449917, 42.087602],
      [122.445194, 42.094656],
      [122.428315, 42.092352],
      [122.435608, 42.104811],
      [122.447625, 42.110499],
      [122.438456, 42.117315],
      [122.446583, 42.124178],
      [122.429704, 42.125118],
      [122.425953, 42.129018],
      [122.409769, 42.121452],
      [122.366703, 42.108384],
      [122.312871, 42.083558],
      [122.293631, 42.080031],
      [122.272167, 42.068225],
      [122.236326, 42.052182],
      [122.22799, 42.047053],
      [122.21264, 42.050112],
      [122.200623, 42.032841],
      [122.184369, 42.031946],
      [122.174992, 42.027192],
      [122.153251, 42.032511],
      [122.145888, 42.025027],
      [122.154362, 42.017966],
      [122.140748, 42.019331],
      [122.130884, 41.998991],
      [122.11852, 42.001769],
      [122.094904, 41.986463],
      [122.097752, 41.980858],
      [122.081915, 41.967385],
      [122.068926, 41.965406],
      [122.063021, 41.969269],
      [122.062257, 41.961024],
      [122.041975, 41.944624],
      [122.042114, 41.935339],
      [122.034334, 41.930625],
      [122.014816, 41.925298],
      [122.00391, 41.930672],
      [121.996478, 41.928645],
      [121.99113, 41.919687],
      [121.997242, 41.911247],
      [121.972514, 41.892617],
      [121.955705, 41.891391],
      [121.962442, 41.888938],
      [121.960081, 41.878512],
      [121.941674, 41.872991],
      [121.933061, 41.874643],
      [121.924517, 41.868886],
      [121.927156, 41.862138],
      [121.908472, 41.864167],
      [121.916251, 41.858363],
      [121.895066, 41.845571],
      [121.848944, 41.845288],
      [121.843734, 41.835988],
      [121.833107, 41.828859],
      [121.831648, 41.820643],
      [121.840886, 41.813559],
      [121.862558, 41.813134],
      [121.845957, 41.799011],
      [121.835121, 41.786869],
      [121.822479, 41.782758],
      [121.798029, 41.801798],
      [121.77858, 41.806285],
      [121.754338, 41.796129],
      [121.722456, 41.795751],
      [121.707314, 41.803971],
      [121.697033, 41.798869],
      [121.675153, 41.774205],
      [121.65494, 41.776332],
      [121.637089, 41.774064],
      [121.629031, 41.784034],
      [121.604859, 41.787294],
      [121.554083, 41.785215],
      [121.538802, 41.783231],
      [121.538524, 41.773922],
      [121.52616, 41.770472],
      [121.519909, 41.763052],
      [121.512407, 41.762579],
      [121.512338, 41.748587],
      [121.50692, 41.744143],
      [121.515324, 41.730383],
      [121.515116, 41.720404],
      [121.502335, 41.717755],
      [121.493305, 41.721681],
      [121.477607, 41.711937],
      [121.475385, 41.695001],
      [121.457603, 41.695994],
      [121.458158, 41.707538],
      [121.452463, 41.719553],
      [121.435723, 41.733362],
      [121.416899, 41.737996],
      [121.393838, 41.736483],
      [121.374319, 41.726647],
      [121.360149, 41.725654],
      [121.338547, 41.733457],
      [121.332712, 41.741826],
      [121.342506, 41.746743],
      [121.342923, 41.768582],
      [121.336394, 41.771984],
      [121.312222, 41.770897],
      [121.307985, 41.775765],
      [121.263669, 41.794523],
      [121.256097, 41.778789],
      [121.261307, 41.774489],
      [121.226785, 41.763241],
      [121.227549, 41.753456],
      [121.215949, 41.740218],
      [121.22227, 41.730619],
      [121.233453, 41.721539],
      [121.218102, 41.689606],
      [121.226716, 41.688707],
      [121.224493, 41.678059],
      [121.210531, 41.677965],
      [121.20164, 41.673752],
      [121.194208, 41.678059],
      [121.17844, 41.664806],
      [121.173926, 41.673847],
      [121.167118, 41.666984],
      [121.156283, 41.671055],
      [121.146905, 41.658605],
      [121.147114, 41.649278],
      [121.139265, 41.648331],
      [121.122247, 41.63886],
      [121.123914, 41.633366],
      [121.111272, 41.619441],
      [121.105715, 41.624178],
      [121.09349, 41.615982],
      [121.066956, 41.618304],
      [121.072235, 41.624604],
      [121.067442, 41.629577],
      [121.06258, 41.621099],
      [121.056051, 41.626214],
      [121.04848, 41.616125],
      [121.030698, 41.607218],
      [121.014444, 41.60826],
      [121.005067, 41.604612],
      [120.997218, 41.596035],
      [120.984159, 41.600442],
      [120.976032, 41.5994],
      [120.97374, 41.583666],
      [120.981728, 41.566695],
      [120.956375, 41.545073],
      [120.957347, 41.541326],
      [120.940121, 41.537579],
      [120.936509, 41.531128],
      [120.92616, 41.531128],
      [120.924354, 41.524866],
      [120.91456, 41.527855],
      [120.906016, 41.523443],
      [120.901223, 41.512293],
      [120.902265, 41.50005],
      [120.896986, 41.485431],
      [120.904974, 41.481159],
      [120.897472, 41.471473],
      [120.893582, 41.475699],
      [120.877537, 41.476554],
      [120.878579, 41.449582],
      [120.876009, 41.435189],
      [120.883719, 41.421173],
      [120.870799, 41.421315],
      [120.864687, 41.416231],
      [120.849753, 41.423834],
      [120.842043, 41.418274],
      [120.843015, 41.404588],
      [120.833082, 41.398171],
      [120.822385, 41.409673],
      [120.819746, 41.421458],
      [120.812036, 41.425972],
      [120.805506, 41.42141],
      [120.815995, 41.405681],
      [120.79995, 41.395319],
      [120.791336, 41.396079],
      [120.778903, 41.378489],
      [120.77029, 41.376587],
      [120.768414, 41.36955],
      [120.774527, 41.368266],
      [120.770082, 41.358278],
      [120.758829, 41.357422],
      [120.752716, 41.341962],
      [120.756606, 41.337062],
      [120.748201, 41.32431],
      [120.751605, 41.307938],
      [120.755564, 41.302416],
      [120.749243, 41.292085],
      [120.737366, 41.288467],
      [120.733337, 41.2748],
      [120.737504, 41.270943],
      [120.753272, 41.26818],
      [120.755981, 41.261559],
      [120.764038, 41.261559],
      [120.769734, 41.248554],
      [120.763969, 41.248745],
      [120.746882, 41.241217],
      [120.738407, 41.240264],
      [120.730697, 41.230972],
      [120.720626, 41.22816],
      [120.720348, 41.219581],
      [120.734448, 41.218199],
      [120.742714, 41.221297],
      [120.752647, 41.213003],
      [120.76383, 41.210048],
      [120.769317, 41.202325],
      [120.763761, 41.195745],
      [120.771471, 41.194219],
      [120.781195, 41.202658],
      [120.786752, 41.20099],
      [120.795851, 41.182441],
      [120.784251, 41.170278],
      [120.788489, 41.161835],
      [120.805576, 41.158114],
      [120.805923, 41.147379],
      [120.825233, 41.140889],
      [120.834472, 41.131535],
      [120.842876, 41.132155],
      [120.850725, 41.14065],
      [120.876078, 41.156062],
      [120.888581, 41.15153],
      [120.895805, 41.144659],
      [120.907683, 41.145661],
      [120.910114, 41.134923],
      [120.898584, 41.130962],
      [120.90935, 41.121082],
      [120.914073, 41.123659],
      [120.930605, 41.117549],
      [120.938315, 41.123803],
      [120.943664, 41.099454],
      [120.948456, 41.090046],
      [120.942761, 41.061433],
      [120.944706, 41.051877],
      [120.954986, 41.045903],
      [120.964293, 41.050108],
      [120.982978, 41.045377],
      [120.980269, 41.040837],
      [120.99055, 41.033381],
      [121.006664, 41.035819],
      [121.034726, 41.050491],
      [121.032295, 41.033668],
      [121.016736, 40.99867],
      [121.011666, 40.972887],
      [121.015972, 40.973318],
      [121.015625, 40.957145],
      [121.00986, 40.956092],
      [121.017292, 40.942261],
      [121.02521, 40.95011],
      [121.024655, 40.942261],
      [121.034171, 40.943649],
      [121.036949, 40.933884],
      [121.023613, 40.928187],
      [121.036394, 40.922394],
      [121.029031, 40.913296],
      [121.033962, 40.907166],
      [121.030628, 40.884031],
      [121.02007, 40.868219],
      [121.011596, 40.863955],
      [121.00729, 40.852884],
      [121.008748, 40.843393],
      [121.030003, 40.790545],
      [121.046604, 40.794959],
      [121.058899, 40.793856],
      [121.073694, 40.798029],
      [121.086544, 40.798221],
      [121.077028, 40.815536],
      [121.087517, 40.820763],
      [121.095435, 40.829346],
      [121.096685, 40.839893],
      [121.11412, 40.83951],
      [121.126206, 40.86913],
      [121.145169, 40.875503],
      [121.167535, 40.876221],
      [121.177676, 40.87373],
      [121.216158, 40.850679],
      [121.290828, 40.851542],
      [121.342923, 40.841427],
      [121.439196, 40.830065],
      [121.440376, 40.881683],
      [121.481983, 40.882019],
      [121.499626, 40.879815],
      [121.519214, 40.862661],
      [121.526647, 40.851733],
      [121.555125, 40.849624]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 210800,
      "name": "营口市",
      "center": [122.235151, 40.667432],
      "centroid": [122.456202, 40.391795],
      "childrenNum": 6,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Yingkou,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [121.953274, 40.128876],
      [121.970778, 40.116423],
      [121.98724, 40.09088],
      [121.986545, 40.081912],
      [121.980294, 40.078081],
      [121.982794, 40.061836],
      [121.993422, 40.052379],
      [122.008356, 40.051457],
      [122.020928, 40.058393],
      [122.044267, 40.062515],
      [122.049824, 40.068577],
      [122.058576, 40.064601],
      [122.069203, 40.067753],
      [122.07344, 40.056453],
      [122.081915, 40.055435],
      [122.090111, 40.038942],
      [122.096015, 40.042386],
      [122.12498, 40.042435],
      [122.139914, 40.030888],
      [122.157557, 40.035643],
      [122.175061, 40.027103],
      [122.185342, 40.009924],
      [122.196664, 40.006138],
      [122.198609, 39.998469],
      [122.218683, 40.000217],
      [122.231047, 40.008905],
      [122.242577, 40.022202],
      [122.248898, 40.012982],
      [122.26029, 40.00609],
      [122.259873, 39.988906],
      [122.269597, 39.98405],
      [122.269806, 39.979098],
      [122.280919, 39.967395],
      [122.285851, 39.967589],
      [122.304466, 39.979486],
      [122.326972, 39.984633],
      [122.344059, 39.982545],
      [122.357743, 39.969629],
      [122.373371, 39.966326],
      [122.400322, 39.972154],
      [122.401434, 39.9672],
      [122.417757, 39.972154],
      [122.418312, 39.968657],
      [122.456168, 39.951707],
      [122.477423, 39.939561],
      [122.497081, 39.935918],
      [122.501318, 39.927317],
      [122.512084, 39.920611],
      [122.510695, 39.928678],
      [122.530005, 39.941796],
      [122.551538, 39.939173],
      [122.561193, 39.944565],
      [122.549524, 39.954524],
      [122.555914, 39.968075],
      [122.554108, 39.974631],
      [122.539243, 39.972785],
      [122.544106, 39.989343],
      [122.541049, 39.993275],
      [122.520142, 39.99876],
      [122.519308, 40.005605],
      [122.527435, 40.015554],
      [122.544731, 40.013225],
      [122.550982, 40.024677],
      [122.536465, 40.031276],
      [122.529866, 40.047431],
      [122.539452, 40.062127],
      [122.55126, 40.057326],
      [122.55772, 40.058975],
      [122.569806, 40.049905],
      [122.577516, 40.055726],
      [122.607315, 40.052864],
      [122.617317, 40.064019],
      [122.628709, 40.061933],
      [122.650519, 40.06591],
      [122.658646, 40.062176],
      [122.694488, 40.07105],
      [122.708936, 40.067462],
      [122.71352, 40.075996],
      [122.727482, 40.085693],
      [122.733247, 40.094758],
      [122.746861, 40.097667],
      [122.767421, 40.109881],
      [122.778535, 40.112013],
      [122.797498, 40.106634],
      [122.80111, 40.102853],
      [122.813821, 40.103435],
      [122.815558, 40.111335],
      [122.824379, 40.120687],
      [122.835215, 40.119282],
      [122.851122, 40.124612],
      [122.858276, 40.134496],
      [122.847926, 40.150432],
      [122.8539, 40.154646],
      [122.869668, 40.178906],
      [122.878558, 40.185442],
      [122.881476, 40.195607],
      [122.893979, 40.20519],
      [122.896757, 40.218739],
      [122.891131, 40.234705],
      [122.884879, 40.236204],
      [122.881823, 40.249457],
      [122.874669, 40.258597],
      [122.873002, 40.26851],
      [122.88217, 40.289829],
      [122.881337, 40.306937],
      [122.891339, 40.319548],
      [122.915859, 40.331529],
      [122.932113, 40.344715],
      [122.92982, 40.358333],
      [122.934822, 40.374024],
      [122.931974, 40.396806],
      [122.936558, 40.409304],
      [122.946213, 40.416396],
      [122.971288, 40.417795],
      [122.990182, 40.427684],
      [122.99296, 40.435161],
      [122.9865, 40.463563],
      [122.999212, 40.477012],
      [122.984347, 40.486989],
      [122.969413, 40.508961],
      [122.949825, 40.515658],
      [122.936002, 40.528856],
      [122.914678, 40.537573],
      [122.897382, 40.538632],
      [122.879461, 40.52876],
      [122.86286, 40.5277],
      [122.854872, 40.532853],
      [122.829311, 40.538006],
      [122.8166, 40.5577],
      [122.811529, 40.558181],
      [122.807431, 40.570312],
      [122.797637, 40.578879],
      [122.771103, 40.577532],
      [122.743458, 40.585136],
      [122.730677, 40.582922],
      [122.720883, 40.586387],
      [122.703657, 40.598945],
      [122.691987, 40.599956],
      [122.678929, 40.592594],
      [122.662883, 40.594615],
      [122.659549, 40.583596],
      [122.651283, 40.584702],
      [122.650589, 40.593893],
      [122.625861, 40.608423],
      [122.643573, 40.611069],
      [122.650867, 40.616937],
      [122.654617, 40.628673],
      [122.645101, 40.636704],
      [122.653228, 40.638675],
      [122.653784, 40.648099],
      [122.659758, 40.658435],
      [122.669482, 40.662569],
      [122.670941, 40.67098],
      [122.647463, 40.666606],
      [122.638642, 40.659012],
      [122.636558, 40.663819],
      [122.623082, 40.671749],
      [122.622804, 40.688136],
      [122.636558, 40.696832],
      [122.651144, 40.710571],
      [122.649825, 40.739768],
      [122.639614, 40.748698],
      [122.600785, 40.751722],
      [122.581892, 40.748506],
      [122.567583, 40.758058],
      [122.556817, 40.761082],
      [122.515974, 40.766554],
      [122.541952, 40.798557],
      [122.537993, 40.800715],
      [122.542022, 40.818701],
      [122.521531, 40.826805],
      [122.523406, 40.834188],
      [122.515002, 40.839414],
      [122.51653, 40.84809],
      [122.502568, 40.847324],
      [122.484231, 40.85159],
      [122.487634, 40.8606],
      [122.502568, 40.872963],
      [122.502429, 40.879527],
      [122.493052, 40.882881],
      [122.492566, 40.90003],
      [122.503124, 40.915355],
      [122.506111, 40.929288],
      [122.488607, 40.935751],
      [122.465059, 40.935894],
      [122.449848, 40.940298],
      [122.438595, 40.940059],
      [122.433316, 40.930676],
      [122.411505, 40.927852],
      [122.394557, 40.922298],
      [122.384138, 40.924835],
      [122.377609, 40.919425],
      [122.377609, 40.909225],
      [122.363647, 40.909082],
      [122.352672, 40.916025],
      [122.335238, 40.905777],
      [122.332251, 40.894091],
      [122.320373, 40.895815],
      [122.322943, 40.904388],
      [122.318914, 40.909034],
      [122.309468, 40.905442],
      [122.304258, 40.889827],
      [122.277307, 40.864578],
      [122.264318, 40.870903],
      [122.253482, 40.870376],
      [122.22674, 40.862421],
      [122.223128, 40.853698],
      [122.209028, 40.855999],
      [122.188884, 40.875551],
      [122.182424, 40.877515],
      [122.176589, 40.868507],
      [122.178812, 40.850008],
      [122.187078, 40.84114],
      [122.183397, 40.83299],
      [122.151584, 40.840756],
      [122.129426, 40.818125],
      [122.100877, 40.804313],
      [122.096501, 40.796926],
      [122.108657, 40.787523],
      [122.128245, 40.779798],
      [122.160266, 40.75945],
      [122.180618, 40.750522],
      [122.194163, 40.742217],
      [122.206319, 40.739961],
      [122.209861, 40.725123],
      [122.201665, 40.713405],
      [122.208333, 40.709947],
      [122.246675, 40.711099],
      [122.265777, 40.710235],
      [122.27314, 40.702741],
      [122.272723, 40.695583],
      [122.245286, 40.683283],
      [122.23452, 40.68285],
      [122.232297, 40.688136],
      [122.205416, 40.693085],
      [122.19451, 40.701876],
      [122.188051, 40.695967],
      [122.172491, 40.709898],
      [122.162836, 40.711484],
      [122.154918, 40.70644],
      [122.151931, 40.697024],
      [122.154154, 40.685541],
      [122.148388, 40.671797],
      [122.154084, 40.662665],
      [122.151514, 40.653099],
      [122.134496, 40.627134],
      [122.13408, 40.61434],
      [122.150542, 40.588504],
      [122.245633, 40.519704],
      [122.246467, 40.515513],
      [122.2332, 40.510503],
      [122.231047, 40.505107],
      [122.244661, 40.485061],
      [122.25765, 40.487037],
      [122.278697, 40.482844],
      [122.276682, 40.47518],
      [122.264804, 40.480386],
      [122.222086, 40.481109],
      [122.221253, 40.461248],
      [122.240424, 40.460959],
      [122.24987, 40.452763],
      [122.250982, 40.44577],
      [122.229102, 40.424018],
      [122.199025, 40.431736],
      [122.190968, 40.429228],
      [122.187981, 40.413984],
      [122.199928, 40.389519],
      [122.198678, 40.382375],
      [122.191801, 40.382134],
      [122.171658, 40.388264],
      [122.168115, 40.376728],
      [122.178673, 40.365624],
      [122.163531, 40.358913],
      [122.152209, 40.357657],
      [122.135538, 40.374941],
      [122.12373, 40.376245],
      [122.111088, 40.368521],
      [122.105948, 40.357174],
      [122.111088, 40.348917],
      [122.1379, 40.338871],
      [122.121438, 40.327085],
      [122.110741, 40.31578],
      [122.1006, 40.31578],
      [122.088791, 40.331094],
      [122.0799, 40.333075],
      [122.03996, 40.322206],
      [122.035932, 40.299882],
      [122.039822, 40.260241],
      [122.026902, 40.245008],
      [121.940284, 40.242202],
      [121.935908, 40.237849],
      [121.950356, 40.204125],
      [121.959108, 40.192799],
      [121.981197, 40.17329],
      [122.004258, 40.171934],
      [122.010856, 40.155034],
      [122.009815, 40.148834],
      [121.995158, 40.12844],
      [121.980433, 40.124127],
      [121.960775, 40.134883],
      [121.953274, 40.128876]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 210900,
      "name": "阜新市",
      "center": [121.648962, 42.011796],
      "centroid": [121.961888, 42.282968],
      "childrenNum": 7,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Fuxin,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [122.83973, 42.718292],
      [122.831742, 42.722296],
      [122.805139, 42.741612],
      [122.798748, 42.738773],
      [122.79465, 42.747662],
      [122.784509, 42.757479],
      [122.765754, 42.759247],
      [122.756377, 42.768226],
      [122.749917, 42.767249],
      [122.736373, 42.77311],
      [122.733038, 42.785854],
      [122.71734, 42.785947],
      [122.700323, 42.78218],
      [122.678651, 42.781064],
      [122.653437, 42.782319],
      [122.625166, 42.77325],
      [122.617873, 42.778552],
      [122.58092, 42.789713],
      [122.569737, 42.809148],
      [122.576057, 42.818724],
      [122.562791, 42.826206],
      [122.522364, 42.831086],
      [122.505277, 42.836616],
      [122.486662, 42.836895],
      [122.431857, 42.84326],
      [122.39935, 42.839171],
      [122.35934, 42.836105],
      [122.352325, 42.831551],
      [122.350519, 42.820165],
      [122.355451, 42.813378],
      [122.362188, 42.793526],
      [122.361702, 42.788179],
      [122.373302, 42.775436],
      [122.437831, 42.770087],
      [122.45721, 42.774226],
      [122.460614, 42.755339],
      [122.444569, 42.749104],
      [122.434844, 42.729651],
      [122.421021, 42.721085],
      [122.401086, 42.713357],
      [122.39671, 42.707863],
      [122.395946, 42.684204],
      [122.360591, 42.683412],
      [122.341211, 42.6713],
      [122.33489, 42.672791],
      [122.334126, 42.680385],
      [122.324471, 42.68481],
      [122.311621, 42.682201],
      [122.307801, 42.690446],
      [122.259178, 42.69692],
      [122.257442, 42.704231],
      [122.241049, 42.713078],
      [122.238062, 42.718851],
      [122.225212, 42.72844],
      [122.204165, 42.73249],
      [122.209653, 42.711495],
      [122.206527, 42.706839],
      [122.203679, 42.68318],
      [122.196038, 42.68085],
      [122.197219, 42.689049],
      [122.190759, 42.691564],
      [122.173603, 42.686813],
      [122.1636, 42.690073],
      [122.162281, 42.685089],
      [122.139775, 42.690166],
      [122.133454, 42.696268],
      [122.121646, 42.696081],
      [122.109282, 42.701949],
      [122.096293, 42.7033],
      [122.091014, 42.714475],
      [122.072815, 42.710657],
      [122.073163, 42.719735],
      [122.061076, 42.723413],
      [122.050171, 42.719223],
      [122.04906, 42.711495],
      [122.026832, 42.706652],
      [122.02197, 42.699388],
      [121.994603, 42.705162],
      [121.988976, 42.695383],
      [121.981614, 42.690492],
      [121.97953, 42.69664],
      [121.968694, 42.700925],
      [121.962165, 42.699248],
      [121.959456, 42.686766],
      [121.938479, 42.687884],
      [121.935561, 42.681689],
      [121.941465, 42.66953],
      [121.939729, 42.6631],
      [121.929449, 42.66706],
      [121.915904, 42.656716],
      [121.920419, 42.637186],
      [121.903401, 42.637326],
      [121.902151, 42.630613],
      [121.91764, 42.630473],
      [121.918543, 42.627117],
      [121.90222, 42.620822],
      [121.921322, 42.606039],
      [121.911667, 42.601468],
      [121.917085, 42.587987],
      [121.906318, 42.58794],
      [121.903957, 42.593678],
      [121.895274, 42.593632],
      [121.905901, 42.584021],
      [121.905485, 42.570956],
      [121.8868, 42.555088],
      [121.870268, 42.548413],
      [121.869435, 42.527962],
      [121.855612, 42.539169],
      [121.85207, 42.525581],
      [121.844498, 42.522405],
      [121.840956, 42.531231],
      [121.832759, 42.533893],
      [121.823382, 42.525067],
      [121.817687, 42.504189],
      [121.803655, 42.499984],
      [121.80692, 42.508907],
      [121.8031, 42.514886],
      [121.792889, 42.507505],
      [121.783581, 42.495312],
      [121.765174, 42.490873],
      [121.76052, 42.486434],
      [121.747462, 42.485266],
      [121.725651, 42.457643],
      [121.713218, 42.445673],
      [121.690574, 42.437396],
      [121.673417, 42.440062],
      [121.665568, 42.437396],
      [121.646188, 42.45437],
      [121.646536, 42.459185],
      [121.637992, 42.480359],
      [121.62799, 42.47606],
      [121.605276, 42.493957],
      [121.602011, 42.50204],
      [121.610624, 42.509888],
      [121.608193, 42.515773],
      [121.59062, 42.509094],
      [121.590828, 42.502273],
      [121.577492, 42.497321],
      [121.578464, 42.492088],
      [121.570129, 42.486902],
      [121.552416, 42.490593],
      [121.528869, 42.48321],
      [121.515116, 42.491714],
      [121.506364, 42.482462],
      [121.497056, 42.492275],
      [121.479413, 42.496387],
      [121.467744, 42.486808],
      [121.470175, 42.484425],
      [121.450726, 42.476574],
      [121.434194, 42.475312],
      [121.42315, 42.485406],
      [121.41544, 42.48606],
      [121.417038, 42.478396],
      [121.411689, 42.475873],
      [121.38835, 42.475265],
      [121.384808, 42.471152],
      [121.385155, 42.452032],
      [121.359663, 42.460728],
      [121.341812, 42.449741],
      [121.327156, 42.443522],
      [121.311319, 42.440343],
      [121.304442, 42.435573],
      [121.313611, 42.429446],
      [121.306387, 42.422617],
      [121.306804, 42.413401],
      [121.299024, 42.398897],
      [121.283882, 42.387291],
      [121.263877, 42.379334],
      [121.252208, 42.382844],
      [121.256236, 42.377461],
      [121.232481, 42.37161],
      [121.218728, 42.371891],
      [121.214421, 42.362012],
      [121.185664, 42.349884],
      [121.187957, 42.342016],
      [121.184345, 42.332788],
      [121.169897, 42.322716],
      [121.150378, 42.314564],
      [121.153365, 42.310206],
      [121.148433, 42.301067],
      [121.133638, 42.300271],
      [121.121483, 42.280911],
      [121.106132, 42.279317],
      [121.103284, 42.283302],
      [121.086058, 42.277583],
      [121.068206, 42.252494],
      [121.048758, 42.259905],
      [121.03167, 42.253573],
      [121.038894, 42.248414],
      [121.027503, 42.243394],
      [121.033615, 42.23678],
      [121.047368, 42.229742],
      [121.055842, 42.219137],
      [121.057579, 42.207874],
      [121.050841, 42.19243],
      [121.055009, 42.187688],
      [121.055356, 42.175291],
      [121.071541, 42.154062],
      [121.072513, 42.143115],
      [121.078, 42.136443],
      [121.08453, 42.111205],
      [121.074597, 42.101896],
      [121.066748, 42.071564],
      [121.046118, 42.058863],
      [121.044451, 42.051476],
      [121.052717, 42.03124],
      [121.05487, 42.018484],
      [121.050563, 42.005113],
      [121.039311, 41.987735],
      [121.041534, 41.980152],
      [121.053967, 41.977938],
      [121.074527, 41.978786],
      [121.079529, 41.973651],
      [121.104882, 41.964935],
      [121.149962, 41.976996],
      [121.163159, 41.977514],
      [121.192055, 41.966113],
      [121.199834, 41.955464],
      [121.212962, 41.914925],
      [121.238524, 41.903607],
      [121.26353, 41.89823],
      [121.292564, 41.889881],
      [121.298885, 41.884079],
      [121.301941, 41.86563],
      [121.290689, 41.856286],
      [121.277283, 41.826876],
      [121.268392, 41.82069],
      [121.272699, 41.803593],
      [121.263669, 41.794523],
      [121.307985, 41.775765],
      [121.312222, 41.770897],
      [121.336394, 41.771984],
      [121.342923, 41.768582],
      [121.342506, 41.746743],
      [121.332712, 41.741826],
      [121.338547, 41.733457],
      [121.360149, 41.725654],
      [121.374319, 41.726647],
      [121.393838, 41.736483],
      [121.416899, 41.737996],
      [121.435723, 41.733362],
      [121.452463, 41.719553],
      [121.458158, 41.707538],
      [121.457603, 41.695994],
      [121.475385, 41.695001],
      [121.477607, 41.711937],
      [121.493305, 41.721681],
      [121.502335, 41.717755],
      [121.515116, 41.720404],
      [121.515324, 41.730383],
      [121.50692, 41.744143],
      [121.512338, 41.748587],
      [121.512407, 41.762579],
      [121.519909, 41.763052],
      [121.52616, 41.770472],
      [121.538524, 41.773922],
      [121.538802, 41.783231],
      [121.554083, 41.785215],
      [121.604859, 41.787294],
      [121.629031, 41.784034],
      [121.637089, 41.774064],
      [121.65494, 41.776332],
      [121.675153, 41.774205],
      [121.697033, 41.798869],
      [121.707314, 41.803971],
      [121.722456, 41.795751],
      [121.754338, 41.796129],
      [121.77858, 41.806285],
      [121.798029, 41.801798],
      [121.822479, 41.782758],
      [121.835121, 41.786869],
      [121.845957, 41.799011],
      [121.862558, 41.813134],
      [121.840886, 41.813559],
      [121.831648, 41.820643],
      [121.833107, 41.828859],
      [121.843734, 41.835988],
      [121.848944, 41.845288],
      [121.895066, 41.845571],
      [121.916251, 41.858363],
      [121.908472, 41.864167],
      [121.927156, 41.862138],
      [121.924517, 41.868886],
      [121.933061, 41.874643],
      [121.941674, 41.872991],
      [121.960081, 41.878512],
      [121.962442, 41.888938],
      [121.955705, 41.891391],
      [121.972514, 41.892617],
      [121.997242, 41.911247],
      [121.99113, 41.919687],
      [121.996478, 41.928645],
      [122.00391, 41.930672],
      [122.014816, 41.925298],
      [122.034334, 41.930625],
      [122.042114, 41.935339],
      [122.041975, 41.944624],
      [122.062257, 41.961024],
      [122.063021, 41.969269],
      [122.068926, 41.965406],
      [122.081915, 41.967385],
      [122.097752, 41.980858],
      [122.094904, 41.986463],
      [122.11852, 42.001769],
      [122.130884, 41.998991],
      [122.140748, 42.019331],
      [122.154362, 42.017966],
      [122.145888, 42.025027],
      [122.153251, 42.032511],
      [122.174992, 42.027192],
      [122.184369, 42.031946],
      [122.200623, 42.032841],
      [122.21264, 42.050112],
      [122.22799, 42.047053],
      [122.236326, 42.052182],
      [122.272167, 42.068225],
      [122.293631, 42.080031],
      [122.312871, 42.083558],
      [122.366703, 42.108384],
      [122.409769, 42.121452],
      [122.425953, 42.129018],
      [122.423522, 42.140672],
      [122.436858, 42.140625],
      [122.432621, 42.144196],
      [122.439428, 42.150961],
      [122.455821, 42.144572],
      [122.520072, 42.174681],
      [122.552024, 42.188063],
      [122.614469, 42.212755],
      [122.609329, 42.230164],
      [122.620096, 42.230071],
      [122.626, 42.234716],
      [122.632598, 42.231009],
      [122.63628, 42.237061],
      [122.645101, 42.237671],
      [122.651283, 42.232651],
      [122.691779, 42.249915],
      [122.703726, 42.261124],
      [122.735053, 42.281005],
      [122.734289, 42.284287],
      [122.769505, 42.297037],
      [122.781314, 42.29863],
      [122.805555, 42.312408],
      [122.810765, 42.319624],
      [122.826324, 42.330446],
      [122.838827, 42.331898],
      [122.858345, 42.346091],
      [122.871057, 42.345669],
      [122.900994, 42.349182],
      [122.903217, 42.353256],
      [122.895298, 42.368848],
      [122.883421, 42.368333],
      [122.875294, 42.37484],
      [122.882379, 42.388367],
      [122.873627, 42.389397],
      [122.865639, 42.395715],
      [122.862027, 42.406804],
      [122.850983, 42.40526],
      [122.84619, 42.399599],
      [122.832159, 42.403342],
      [122.828269, 42.410267],
      [122.833965, 42.417986],
      [122.81778, 42.416769],
      [122.824865, 42.429352],
      [122.832853, 42.431597],
      [122.826602, 42.438846],
      [122.827297, 42.445814],
      [122.822018, 42.458017],
      [122.825004, 42.461149],
      [122.818544, 42.481434],
      [122.826463, 42.490126],
      [122.819447, 42.490126],
      [122.834382, 42.497975],
      [122.871543, 42.504049],
      [122.882101, 42.503908],
      [122.899744, 42.499424],
      [122.908357, 42.500685],
      [122.911552, 42.51951],
      [122.917804, 42.521565],
      [122.916831, 42.52969],
      [122.921832, 42.535527],
      [122.943365, 42.547899],
      [122.949408, 42.545098],
      [122.957744, 42.550327],
      [122.966912, 42.561716],
      [122.974414, 42.564329],
      [122.969899, 42.571376],
      [122.930237, 42.587707],
      [122.922874, 42.596804],
      [122.926764, 42.604407],
      [122.903078, 42.613687],
      [122.892034, 42.608884],
      [122.886477, 42.611216],
      [122.873488, 42.608604],
      [122.86293, 42.621055],
      [122.842578, 42.633364],
      [122.838688, 42.645204],
      [122.842786, 42.648839],
      [122.824935, 42.652661],
      [122.792705, 42.650983],
      [122.791802, 42.662773],
      [122.769505, 42.677962],
      [122.756238, 42.679732],
      [122.747347, 42.689188],
      [122.750959, 42.697944],
      [122.767838, 42.709074],
      [122.778118, 42.710889],
      [122.80111, 42.726299],
      [122.815766, 42.718897],
      [122.836118, 42.716476],
      [122.83973, 42.718292]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 211000,
      "name": "辽阳市",
      "center": [123.18152, 41.269402],
      "centroid": [123.251133, 41.184819],
      "childrenNum": 7,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Liaoyang,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [122.622527, 41.199845],
      [122.613149, 41.202134],
      [122.59509, 41.19584],
      [122.601897, 41.185636],
      [122.598077, 41.178911],
      [122.618706, 41.169706],
      [122.639683, 41.155204],
      [122.678581, 41.140746],
      [122.690251, 41.128289],
      [122.689556, 41.122609],
      [122.704282, 41.114828],
      [122.762837, 41.104372],
      [122.760962, 41.101221],
      [122.777215, 41.099024],
      [122.784995, 41.101316],
      [122.791594, 41.096111],
      [122.800068, 41.100266],
      [122.801388, 41.093533],
      [122.824518, 41.081831],
      [122.832437, 41.082452],
      [122.831047, 41.091575],
      [122.841605, 41.106091],
      [122.856748, 41.114971],
      [122.84876, 41.129769],
      [122.858137, 41.144945],
      [122.865291, 41.144897],
      [122.875988, 41.157732],
      [122.86675, 41.163171],
      [122.875572, 41.170612],
      [122.885505, 41.166844],
      [122.895924, 41.171519],
      [122.89898, 41.181296],
      [122.909607, 41.194219],
      [122.946144, 41.196603],
      [122.962467, 41.191358],
      [122.974484, 41.202706],
      [122.987612, 41.200465],
      [122.991363, 41.18659],
      [123.005949, 41.188497],
      [123.022411, 41.206854],
      [123.038248, 41.208427],
      [123.062282, 41.199083],
      [123.057142, 41.191501],
      [123.063254, 41.183156],
      [123.075618, 41.184634],
      [123.099304, 41.178101],
      [123.109862, 41.184634],
      [123.119031, 41.184253],
      [123.119309, 41.177242],
      [123.129381, 41.174094],
      [123.13716, 41.158018],
      [123.149385, 41.154059],
      [123.140147, 41.137214],
      [123.146815, 41.133826],
      [123.142509, 41.12576],
      [123.146746, 41.10824],
      [123.145287, 41.101841],
      [123.154595, 41.105852],
      [123.162583, 41.099024],
      [123.171891, 41.098642],
      [123.183977, 41.106043],
      [123.198494, 41.103322],
      [123.203148, 41.097687],
      [123.2119, 41.098117],
      [123.213636, 41.091145],
      [123.208357, 41.078631],
      [123.214539, 41.077867],
      [123.231835, 41.066067],
      [123.226626, 41.058996],
      [123.235517, 41.048962],
      [123.214331, 41.039833],
      [123.205162, 41.039547],
      [123.199675, 41.031278],
      [123.212247, 41.017701],
      [123.201898, 41.00173],
      [123.190923, 40.996852],
      [123.192451, 40.987621],
      [123.178212, 40.989917],
      [123.161541, 40.988434],
      [123.151052, 40.983938],
      [123.126741, 40.989343],
      [123.103125, 40.984177],
      [123.087913, 40.975519],
      [123.083884, 40.961595],
      [123.097151, 40.941973],
      [123.096387, 40.934171],
      [123.089788, 40.928378],
      [123.060406, 40.923447],
      [123.073673, 40.906879],
      [123.075063, 40.898354],
      [123.055266, 40.884175],
      [123.047973, 40.871765],
      [123.055752, 40.857772],
      [123.050265, 40.845502],
      [123.054294, 40.835099],
      [123.072979, 40.839414],
      [123.084926, 40.835866],
      [123.105834, 40.824455],
      [123.107084, 40.820091],
      [123.091386, 40.802394],
      [123.074854, 40.792081],
      [123.071798, 40.780422],
      [123.073812, 40.771641],
      [123.085412, 40.755946],
      [123.100971, 40.741305],
      [123.130075, 40.72666],
      [123.136188, 40.714461],
      [123.150288, 40.725219],
      [123.1771, 40.712684],
      [123.214262, 40.732182],
      [123.230932, 40.733959],
      [123.244685, 40.731462],
      [123.258369, 40.744569],
      [123.277054, 40.749082],
      [123.287959, 40.754506],
      [123.297614, 40.76593],
      [123.315049, 40.773464],
      [123.340055, 40.771113],
      [123.357003, 40.775959],
      [123.37541, 40.775384],
      [123.394234, 40.786515],
      [123.402639, 40.802538],
      [123.411044, 40.807095],
      [123.428964, 40.803306],
      [123.442231, 40.803114],
      [123.461611, 40.809541],
      [123.487659, 40.811411],
      [123.509608, 40.816159],
      [123.533711, 40.826996],
      [123.539476, 40.837353],
      [123.537531, 40.851446],
      [123.544477, 40.861079],
      [123.574971, 40.856814],
      [123.582264, 40.857485],
      [123.604908, 40.874017],
      [123.608659, 40.89227],
      [123.619425, 40.896629],
      [123.625191, 40.906879],
      [123.623662, 40.912242],
      [123.632415, 40.923926],
      [123.646515, 40.930724],
      [123.657976, 40.952647],
      [123.648043, 40.964658],
      [123.656587, 40.973796],
      [123.652072, 40.975423],
      [123.647349, 41.006943],
      [123.650127, 41.016314],
      [123.660824, 41.017797],
      [123.65999, 41.041602],
      [123.670757, 41.043227],
      [123.685344, 41.0503],
      [123.68972, 41.059665],
      [123.679648, 41.069889],
      [123.671104, 41.071657],
      [123.660685, 41.086846],
      [123.660477, 41.095873],
      [123.651308, 41.112775],
      [123.655267, 41.129148],
      [123.664644, 41.139123],
      [123.649085, 41.157446],
      [123.638458, 41.159259],
      [123.639013, 41.169324],
      [123.63422, 41.181248],
      [123.624913, 41.189308],
      [123.619286, 41.202849],
      [123.598934, 41.206663],
      [123.608798, 41.22001],
      [123.59692, 41.23426],
      [123.600463, 41.24217],
      [123.616022, 41.254795],
      [123.619495, 41.246601],
      [123.636374, 41.246887],
      [123.670201, 41.260702],
      [123.665547, 41.269133],
      [123.664019, 41.283705],
      [123.657768, 41.286895],
      [123.65617, 41.298655],
      [123.663324, 41.316077],
      [123.661796, 41.324928],
      [123.654642, 41.327688],
      [123.658254, 41.345958],
      [123.652628, 41.353236],
      [123.655475, 41.37245],
      [123.650058, 41.378537],
      [123.652628, 41.386952],
      [123.642556, 41.392562],
      [123.633943, 41.406869],
      [123.631164, 41.416801],
      [123.652836, 41.438609],
      [123.652697, 41.449439],
      [123.644362, 41.458178],
      [123.607617, 41.467675],
      [123.601366, 41.48676],
      [123.591502, 41.494022],
      [123.58018, 41.498436],
      [123.560801, 41.486808],
      [123.546561, 41.481111],
      [123.527529, 41.491981],
      [123.516485, 41.480067],
      [123.498147, 41.483675],
      [123.489603, 41.478975],
      [123.477726, 41.463829],
      [123.458068, 41.466535],
      [123.449386, 41.474987],
      [123.439383, 41.469337],
      [123.429659, 41.472043],
      [123.430076, 41.481396],
      [123.417087, 41.487472],
      [123.40764, 41.500619],
      [123.397638, 41.495114],
      [123.383746, 41.50043],
      [123.382565, 41.509256],
      [123.362629, 41.504701],
      [123.362352, 41.513195],
      [123.353669, 41.510775],
      [123.335679, 41.514665],
      [123.33429, 41.506931],
      [123.324079, 41.508307],
      [123.313382, 41.519979],
      [123.2956, 41.525056],
      [123.284278, 41.524439],
      [123.279694, 41.538053],
      [123.252951, 41.538148],
      [123.236003, 41.540282],
      [123.235517, 41.551712],
      [123.219818, 41.559156],
      [123.219471, 41.565273],
      [123.201898, 41.564562],
      [123.187589, 41.555648],
      [123.193493, 41.549673],
      [123.188144, 41.54512],
      [123.182032, 41.549388],
      [123.16946, 41.548961],
      [123.156748, 41.53682],
      [123.143203, 41.538765],
      [123.134451, 41.536156],
      [123.127366, 41.546638],
      [123.131117, 41.554035],
      [123.111668, 41.55854],
      [123.11535, 41.564988],
      [123.114099, 41.585277],
      [123.123546, 41.589637],
      [123.134312, 41.60845],
      [123.11403, 41.617119],
      [123.109098, 41.606318],
      [123.087565, 41.588974],
      [123.087218, 41.5794],
      [123.078744, 41.563376],
      [123.082286, 41.560769],
      [123.071173, 41.554462],
      [123.050196, 41.551048],
      [123.041166, 41.540187],
      [123.027413, 41.514144],
      [123.020675, 41.5075],
      [123.010881, 41.505175],
      [123.002198, 41.513906],
      [122.969205, 41.509778],
      [122.957813, 41.496395],
      [122.969205, 41.492598],
      [122.971288, 41.49929],
      [122.982055, 41.496158],
      [122.976428, 41.488849],
      [122.975803, 41.47869],
      [122.959688, 41.468102],
      [122.934405, 41.47869],
      [122.933293, 41.469194],
      [122.937947, 41.466963],
      [122.935308, 41.458368],
      [122.940309, 41.456041],
      [122.933641, 41.447919],
      [122.91954, 41.454901],
      [122.91704, 41.451054],
      [122.92857, 41.448537],
      [122.912664, 41.432956],
      [122.929681, 41.42811],
      [122.914609, 41.417799],
      [122.886755, 41.417894],
      [122.881754, 41.422313],
      [122.871404, 41.414378],
      [122.863347, 41.424642],
      [122.849663, 41.415898],
      [122.85133, 41.394701],
      [122.841814, 41.378584],
      [122.80368, 41.373401],
      [122.798054, 41.366839],
      [122.780966, 41.366363],
      [122.773742, 41.360323],
      [122.765616, 41.368313],
      [122.749362, 41.351857],
      [122.747834, 41.329449],
      [122.737762, 41.33002],
      [122.731163, 41.323453],
      [122.717827, 41.322787],
      [122.724148, 41.314601],
      [122.70963, 41.308509],
      [122.698447, 41.299274],
      [122.705949, 41.284562],
      [122.698239, 41.278991],
      [122.692543, 41.268228],
      [122.676706, 41.260893],
      [122.674275, 41.251508],
      [122.666981, 41.2456],
      [122.666634, 41.229399],
      [122.669482, 41.223394],
      [122.659896, 41.212813],
      [122.637044, 41.210191],
      [122.633015, 41.203088],
      [122.622527, 41.199845]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 211100,
      "name": "盘锦市",
      "center": [122.06957, 41.124484],
      "centroid": [121.999309, 41.06851],
      "childrenNum": 4,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Panjin,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [121.555125, 40.849624],
      [121.558737, 40.840325],
      [121.547276, 40.8234],
      [121.552903, 40.817742],
      [121.570823, 40.827764],
      [121.577978, 40.839462],
      [121.606387, 40.84416],
      [121.626045, 40.8444],
      [121.635075, 40.83275],
      [121.647716, 40.829154],
      [121.682655, 40.829634],
      [121.69495, 40.833277],
      [121.699534, 40.840708],
      [121.718775, 40.842722],
      [121.732458, 40.84694],
      [121.736695, 40.863044],
      [121.746628, 40.852884],
      [121.753366, 40.854609],
      [121.753088, 40.869082],
      [121.77858, 40.886953],
      [121.816089, 40.894809],
      [121.825744, 40.864194],
      [121.845054, 40.853746],
      [121.849638, 40.845598],
      [121.842276, 40.838647],
      [121.847416, 40.824599],
      [121.883882, 40.802202],
      [121.902151, 40.798941],
      [121.934241, 40.798221],
      [121.942855, 40.788818],
      [121.941187, 40.777639],
      [121.930213, 40.755322],
      [121.936117, 40.711387],
      [121.951259, 40.680784],
      [121.977932, 40.67271],
      [122.025652, 40.674248],
      [122.050032, 40.653628],
      [122.066147, 40.648628],
      [122.096988, 40.65132],
      [122.121993, 40.657474],
      [122.132621, 40.666222],
      [122.148388, 40.671797],
      [122.154154, 40.685541],
      [122.151931, 40.697024],
      [122.154918, 40.70644],
      [122.162836, 40.711484],
      [122.172491, 40.709898],
      [122.188051, 40.695967],
      [122.19451, 40.701876],
      [122.205416, 40.693085],
      [122.232297, 40.688136],
      [122.23452, 40.68285],
      [122.245286, 40.683283],
      [122.272723, 40.695583],
      [122.27314, 40.702741],
      [122.265777, 40.710235],
      [122.246675, 40.711099],
      [122.208333, 40.709947],
      [122.201665, 40.713405],
      [122.209861, 40.725123],
      [122.206319, 40.739961],
      [122.194163, 40.742217],
      [122.180618, 40.750522],
      [122.160266, 40.75945],
      [122.128245, 40.779798],
      [122.108657, 40.787523],
      [122.096501, 40.796926],
      [122.100877, 40.804313],
      [122.129426, 40.818125],
      [122.151584, 40.840756],
      [122.183397, 40.83299],
      [122.187078, 40.84114],
      [122.178812, 40.850008],
      [122.176589, 40.868507],
      [122.182424, 40.877515],
      [122.188884, 40.875551],
      [122.209028, 40.855999],
      [122.223128, 40.853698],
      [122.22674, 40.862421],
      [122.253482, 40.870376],
      [122.264318, 40.870903],
      [122.277307, 40.864578],
      [122.304258, 40.889827],
      [122.309468, 40.905442],
      [122.318914, 40.909034],
      [122.322943, 40.904388],
      [122.320373, 40.895815],
      [122.332251, 40.894091],
      [122.335238, 40.905777],
      [122.321345, 40.909273],
      [122.327597, 40.918276],
      [122.318845, 40.927325],
      [122.331278, 40.923974],
      [122.343364, 40.927277],
      [122.338294, 40.940872],
      [122.351213, 40.951498],
      [122.350172, 40.955422],
      [122.328917, 40.96327],
      [122.328361, 40.971117],
      [122.338988, 40.968151],
      [122.358715, 40.975327],
      [122.364411, 40.985851],
      [122.36066, 40.9881],
      [122.346629, 40.980494],
      [122.3426, 40.988817],
      [122.359966, 41.001874],
      [122.368023, 41.0002],
      [122.380665, 40.989869],
      [122.390111, 40.988052],
      [122.390111, 40.997426],
      [122.396502, 41.000869],
      [122.404698, 40.991496],
      [122.41088, 40.993074],
      [122.424008, 41.012776],
      [122.415256, 41.022482],
      [122.40956, 41.038639],
      [122.414978, 41.057085],
      [122.415881, 41.084602],
      [122.412061, 41.090954],
      [122.396502, 41.10165],
      [122.396502, 41.120461],
      [122.384416, 41.135496],
      [122.386638, 41.160165],
      [122.37233, 41.162407],
      [122.366356, 41.177147],
      [122.368926, 41.183585],
      [122.384624, 41.195602],
      [122.400461, 41.196889],
      [122.411783, 41.204041],
      [122.415326, 41.212622],
      [122.435469, 41.213003],
      [122.447208, 41.21553],
      [122.463879, 41.233307],
      [122.488745, 41.250984],
      [122.480688, 41.254938],
      [122.46374, 41.256796],
      [122.457697, 41.248078],
      [122.424633, 41.253318],
      [122.423661, 41.243266],
      [122.408866, 41.251651],
      [122.388861, 41.231639],
      [122.386499, 41.2243],
      [122.369759, 41.217579],
      [122.36191, 41.206568],
      [122.343364, 41.203707],
      [122.352533, 41.198034],
      [122.338572, 41.189975],
      [122.304814, 41.190881],
      [122.274737, 41.184539],
      [122.266194, 41.194791],
      [122.254316, 41.194076],
      [122.226948, 41.201943],
      [122.215001, 41.216578],
      [122.205138, 41.223299],
      [122.231047, 41.2304],
      [122.244591, 41.236309],
      [122.250079, 41.242551],
      [122.249801, 41.260845],
      [122.254455, 41.277896],
      [122.264388, 41.291133],
      [122.26668, 41.307414],
      [122.274737, 41.319741],
      [122.271681, 41.328355],
      [122.279461, 41.334968],
      [122.277516, 41.348908],
      [122.280294, 41.353997],
      [122.245286, 41.373877],
      [122.232436, 41.387095],
      [122.198956, 41.429203],
      [122.200345, 41.441792],
      [122.192288, 41.448964],
      [122.199303, 41.45794],
      [122.193746, 41.459602],
      [122.185064, 41.448537],
      [122.177562, 41.451956],
      [122.169296, 41.443122],
      [122.137275, 41.428728],
      [122.143318, 41.422598],
      [122.123869, 41.415898],
      [122.099071, 41.399882],
      [122.093723, 41.39375],
      [122.086291, 41.393845],
      [122.077052, 41.386477],
      [122.069967, 41.38757],
      [122.040725, 41.371547],
      [122.026346, 41.371119],
      [122.020303, 41.382483],
      [122.010648, 41.386049],
      [121.975154, 41.383862],
      [121.95626, 41.386239],
      [121.944522, 41.369169],
      [121.919585, 41.363795],
      [121.910833, 41.355805],
      [121.90229, 41.354758],
      [121.90347, 41.337014],
      [121.884716, 41.322549],
      [121.869296, 41.330401],
      [121.867768, 41.340963],
      [121.845749, 41.352713],
      [121.827411, 41.35238],
      [121.801433, 41.348765],
      [121.794973, 41.345673],
      [121.784276, 41.333493],
      [121.759062, 41.331257],
      [121.747045, 41.337062],
      [121.729333, 41.328688],
      [121.717108, 41.316457],
      [121.701548, 41.315791],
      [121.685989, 41.305224],
      [121.638061, 41.281134],
      [121.6009, 41.257606],
      [121.58027, 41.249698],
      [121.577422, 41.225587],
      [121.580895, 41.215959],
      [121.591314, 41.209333],
      [121.602706, 41.211573],
      [121.620418, 41.206758],
      [121.618821, 41.186828],
      [121.615626, 41.182011],
      [121.602359, 41.180724],
      [121.567698, 41.145947],
      [121.566795, 41.134494],
      [121.585132, 41.108049],
      [121.610763, 41.103274],
      [121.665637, 41.099502],
      [121.682377, 41.099979],
      [121.695436, 41.104897],
      [121.716899, 41.103608],
      [121.722248, 41.108096],
      [121.7426, 41.107237],
      [121.739196, 41.114589],
      [121.763438, 41.100791],
      [121.758576, 41.088661],
      [121.747531, 41.085843],
      [121.714468, 41.087276],
      [121.714537, 41.091479],
      [121.691477, 41.093294],
      [121.692102, 41.096637],
      [121.672583, 41.090237],
      [121.680154, 41.084793],
      [121.666888, 41.059809],
      [121.6473, 41.062484],
      [121.651189, 41.05417],
      [121.662789, 41.050491],
      [121.661261, 41.034385],
      [121.667165, 41.027167],
      [121.676334, 41.007756],
      [121.673417, 40.991974],
      [121.666818, 40.98566],
      [121.662164, 40.969873],
      [121.663553, 40.959298],
      [121.650981, 40.952694],
      [121.647786, 40.937761],
      [121.628754, 40.908076],
      [121.618682, 40.907837],
      [121.59708, 40.896581],
      [121.584507, 40.885708],
      [121.571032, 40.867932],
      [121.56742, 40.859162],
      [121.555125, 40.849624]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 211200,
      "name": "铁岭市",
      "center": [123.844279, 42.290585],
      "centroid": [124.176584, 42.648938],
      "childrenNum": 7,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Tieling,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [123.790021, 41.989242],
      [123.80169, 41.994093],
      [123.813915, 42.007655],
      [123.842811, 42.022909],
      [123.875457, 42.028746],
      [123.880667, 42.033123],
      [123.905742, 42.031146],
      [123.92658, 42.018766],
      [123.940194, 42.023803],
      [123.950336, 42.018625],
      [123.943529, 42.008738],
      [123.954781, 42.005631],
      [123.985969, 42.005819],
      [124.004307, 42.01161],
      [124.024381, 42.011657],
      [124.034175, 42.018907],
      [124.03994, 42.045124],
      [124.067446, 42.064367],
      [124.07988, 42.065543],
      [124.095231, 42.073446],
      [124.140797, 42.068083],
      [124.164622, 42.056793],
      [124.174416, 42.055711],
      [124.191572, 42.058957],
      [124.207618, 42.055334],
      [124.234291, 42.058157],
      [124.25374, 42.067284],
      [124.264645, 42.064602],
      [124.268604, 42.046018],
      [124.275828, 42.043147],
      [124.275689, 42.036935],
      [124.285275, 42.027428],
      [124.281177, 42.020885],
      [124.283816, 42.013117],
      [124.279926, 42.00742],
      [124.294721, 42.006054],
      [124.313267, 42.015235],
      [124.33737, 42.016601],
      [124.341955, 42.009397],
      [124.35154, 42.012222],
      [124.369044, 42.022391],
      [124.366752, 42.032888],
      [124.383978, 42.033923],
      [124.408637, 42.044041],
      [124.414124, 42.050112],
      [124.423501, 42.052182],
      [124.447604, 42.067801],
      [124.497408, 42.079654],
      [124.520121, 42.087884],
      [124.550128, 42.11896],
      [124.541446, 42.131039],
      [124.543043, 42.137477],
      [124.560061, 42.155048],
      [124.561172, 42.16402],
      [124.543946, 42.176982],
      [124.536514, 42.192899],
      [124.52797, 42.202476],
      [124.516023, 42.236733],
      [124.536722, 42.257888],
      [124.553323, 42.270034],
      [124.561033, 42.282318],
      [124.564784, 42.303739],
      [124.577843, 42.321076],
      [124.569508, 42.341641],
      [124.574648, 42.351476],
      [124.59361, 42.351008],
      [124.605141, 42.345294],
      [124.628202, 42.348432],
      [124.634523, 42.345903],
      [124.62584, 42.334475],
      [124.625701, 42.327261],
      [124.647859, 42.316344],
      [124.661126, 42.315641],
      [124.679394, 42.319577],
      [124.695995, 42.317141],
      [124.712944, 42.325106],
      [124.725586, 42.324497],
      [124.732462, 42.335693],
      [124.751494, 42.338316],
      [124.763511, 42.343093],
      [124.774625, 42.336957],
      [124.787058, 42.33958],
      [124.797061, 42.359718],
      [124.787822, 42.365523],
      [124.7856, 42.382376],
      [124.777612, 42.380551],
      [124.772055, 42.391362],
      [124.775597, 42.400347],
      [124.786016, 42.409237],
      [124.800395, 42.415881],
      [124.820399, 42.411296],
      [124.821719, 42.418266],
      [124.853185, 42.412278],
      [124.864021, 42.407787],
      [124.886248, 42.41022],
      [124.895278, 42.398242],
      [124.925077, 42.396884],
      [124.931259, 42.40278],
      [124.944734, 42.400768],
      [124.952236, 42.389116],
      [124.960988, 42.384436],
      [124.956959, 42.371329],
      [124.974255, 42.368145],
      [124.985299, 42.379146],
      [124.990717, 42.37292],
      [125.005859, 42.378444],
      [124.997732, 42.392579],
      [125.004748, 42.401845],
      [125.024336, 42.401891],
      [125.036491, 42.405541],
      [125.041562, 42.414618],
      [125.03663, 42.420231],
      [125.036214, 42.438098],
      [125.057746, 42.445533],
      [125.063164, 42.450536],
      [125.079904, 42.457315],
      [125.078446, 42.464842],
      [125.099006, 42.478023],
      [125.107966, 42.478864],
      [125.105049, 42.49064],
      [125.085253, 42.500872],
      [125.068999, 42.49961],
      [125.066776, 42.502787],
      [125.078446, 42.506571],
      [125.081085, 42.513298],
      [125.089907, 42.51241],
      [125.088934, 42.518622],
      [125.067262, 42.534406],
      [125.077334, 42.54211],
      [125.076292, 42.558075],
      [125.091504, 42.572356],
      [125.084489, 42.593025],
      [125.095533, 42.599789],
      [125.089837, 42.606505],
      [125.099631, 42.613221],
      [125.097408, 42.622081],
      [125.086225, 42.625764],
      [125.072194, 42.625158],
      [125.061914, 42.620915],
      [125.055107, 42.624039],
      [125.038436, 42.615413],
      [125.028781, 42.617698],
      [125.028642, 42.623014],
      [125.010721, 42.632478],
      [125.019335, 42.652754],
      [125.012805, 42.660211],
      [125.014403, 42.666128],
      [124.996135, 42.670461],
      [124.99037, 42.677263],
      [124.968489, 42.67349],
      [124.967586, 42.680198],
      [124.985855, 42.686673],
      [124.989258, 42.695103],
      [124.978909, 42.709539],
      [124.977172, 42.716476],
      [124.968281, 42.722715],
      [124.98002, 42.729139],
      [124.985855, 42.726997],
      [124.996413, 42.745428],
      [124.980367, 42.752547],
      [124.983007, 42.760783],
      [124.988216, 42.759806],
      [124.992662, 42.773017],
      [124.987591, 42.780552],
      [124.980159, 42.781436],
      [124.975574, 42.802035],
      [124.955987, 42.807335],
      [124.948832, 42.806266],
      [124.93105, 42.819049],
      [124.915908, 42.817794],
      [124.914935, 42.803895],
      [124.906669, 42.793573],
      [124.897779, 42.787993],
      [124.887221, 42.790876],
      [124.874857, 42.78976],
      [124.868813, 42.797711],
      [124.867077, 42.80766],
      [124.858811, 42.820304],
      [124.858742, 42.840519],
      [124.855408, 42.851112],
      [124.857005, 42.863421],
      [124.849295, 42.88209],
      [124.85638, 42.886129],
      [124.850684, 42.892304],
      [124.852212, 42.899221],
      [124.860061, 42.904698],
      [124.859922, 42.914212],
      [124.86666, 42.918528],
      [124.864507, 42.926741],
      [124.869716, 42.936438],
      [124.864924, 42.939407],
      [124.869439, 42.954667],
      [124.867563, 42.96167],
      [124.874995, 42.968811],
      [124.868536, 42.973215],
      [124.872148, 42.984388],
      [124.861867, 42.990506],
      [124.857561, 43.001537],
      [124.86159, 43.002186],
      [124.855963, 43.013909],
      [124.844433, 43.02614],
      [124.844433, 43.035172],
      [124.863118, 43.034014],
      [124.857422, 43.040081],
      [124.858255, 43.05101],
      [124.868605, 43.054252],
      [124.877288, 43.068002],
      [124.887498, 43.073788],
      [124.883817, 43.093596],
      [124.879441, 43.099704],
      [124.881872, 43.1109],
      [124.893819, 43.117931],
      [124.895, 43.131158],
      [124.881247, 43.133331],
      [124.873328, 43.125932],
      [124.857561, 43.119457],
      [124.841863, 43.126996],
      [124.822622, 43.124452],
      [124.819566, 43.119873],
      [124.807896, 43.117514],
      [124.802131, 43.122371],
      [124.785461, 43.116543],
      [124.785391, 43.106551],
      [124.778167, 43.098223],
      [124.758579, 43.086285],
      [124.754481, 43.073742],
      [124.738644, 43.068141],
      [124.718501, 43.069992],
      [124.695092, 43.057261],
      [124.686201, 43.050408],
      [124.674393, 43.026557],
      [124.678283, 43.013353],
      [124.677727, 43.002695],
      [124.67092, 42.990043],
      [124.660362, 42.983183],
      [124.65939, 42.972937],
      [124.652791, 42.976229],
      [124.635704, 42.973401],
      [124.633828, 42.958145],
      [124.639177, 42.95527],
      [124.622923, 42.949055],
      [124.622645, 42.941634],
      [124.608197, 42.937783],
      [124.602432, 42.930871],
      [124.603752, 42.923725],
      [124.593333, 42.911846],
      [124.563187, 42.889008],
      [124.544293, 42.886454],
      [124.538528, 42.86709],
      [124.532902, 42.871549],
      [124.514703, 42.873638],
      [124.501575, 42.86514],
      [124.480181, 42.858544],
      [124.466289, 42.846605],
      [124.472749, 42.828019],
      [124.465664, 42.822581],
      [124.452258, 42.825928],
      [124.454689, 42.852505],
      [124.446076, 42.865465],
      [124.437532, 42.867926],
      [124.440867, 42.875775],
      [124.434546, 42.880882],
      [124.426836, 42.874521],
      [124.415444, 42.879211],
      [124.371753, 42.880975],
      [124.366474, 42.891886],
      [124.366822, 42.902841],
      [124.381061, 42.91282],
      [124.388007, 42.910082],
      [124.397801, 42.915141],
      [124.400927, 42.921962],
      [124.413916, 42.922426],
      [124.414819, 42.926417],
      [124.431906, 42.930871],
      [124.442186, 42.941402],
      [124.441631, 42.959861],
      [124.429892, 42.966399],
      [124.422112, 42.97609],
      [124.402316, 42.97099],
      [124.384465, 42.970712],
      [124.360779, 42.975904],
      [124.34772, 42.988328],
      [124.333411, 42.99732],
      [124.340565, 43.004827],
      [124.369808, 43.025491],
      [124.425933, 43.076288],
      [124.421348, 43.082629],
      [124.396829, 43.092532],
      [124.381617, 43.107754],
      [124.362307, 43.122695],
      [124.340565, 43.128615],
      [124.329243, 43.142903],
      [124.308891, 43.155062],
      [124.302987, 43.148867],
      [124.292499, 43.154322],
      [124.300487, 43.158529],
      [124.283955, 43.166016],
      [124.273814, 43.178771],
      [124.282149, 43.188982],
      [124.277565, 43.196143],
      [124.287706, 43.206906],
      [124.28069, 43.216235],
      [124.282844, 43.220622],
      [124.276314, 43.233411],
      [124.268326, 43.230641],
      [124.253184, 43.237335],
      [124.24346, 43.233411],
      [124.229776, 43.234796],
      [124.227067, 43.24209],
      [124.219218, 43.241444],
      [124.216023, 43.256121],
      [124.199491, 43.245829],
      [124.190044, 43.246521],
      [124.178375, 43.242228],
      [124.172471, 43.249567],
      [124.168373, 43.244075],
      [124.154828, 43.253583],
      [124.148715, 43.250952],
      [124.132878, 43.25529],
      [124.129336, 43.247814],
      [124.114402, 43.247306],
      [124.11725, 43.263043],
      [124.111762, 43.269134],
      [124.11718, 43.2773],
      [124.111415, 43.281175],
      [124.098634, 43.281129],
      [124.10308, 43.288556],
      [124.098287, 43.292891],
      [124.066057, 43.292661],
      [124.043135, 43.287587],
      [124.032994, 43.280898],
      [123.992776, 43.308571],
      [123.98715, 43.315671],
      [123.961866, 43.338811],
      [123.964228, 43.340839],
      [123.946863, 43.350747],
      [123.922968, 43.360422],
      [123.911577, 43.358211],
      [123.895879, 43.361528],
      [123.901366, 43.37917],
      [123.892267, 43.390131],
      [123.865941, 43.395656],
      [123.863649, 43.400905],
      [123.853021, 43.405647],
      [123.849687, 43.415636],
      [123.854897, 43.423644],
      [123.855661, 43.436759],
      [123.872331, 43.451344],
      [123.857606, 43.459163],
      [123.861148, 43.461785],
      [123.849271, 43.470109],
      [123.845798, 43.467488],
      [123.833503, 43.473558],
      [123.825932, 43.471489],
      [123.804468, 43.482433],
      [123.79787, 43.489559],
      [123.786964, 43.479812],
      [123.773975, 43.480318],
      [123.771405, 43.484042],
      [123.74626, 43.471213],
      [123.753207, 43.464545],
      [123.751956, 43.454702],
      [123.74369, 43.443845],
      [123.7489, 43.439842],
      [123.734313, 43.427234],
      [123.71021, 43.417201],
      [123.710002, 43.404726],
      [123.703056, 43.402654],
      [123.705695, 43.396991],
      [123.699444, 43.390131],
      [123.708891, 43.383776],
      [123.698541, 43.382486],
      [123.705001, 43.377328],
      [123.704654, 43.364108],
      [123.69611, 43.356184],
      [123.720421, 43.357658],
      [123.711391, 43.354479],
      [123.713058, 43.346553],
      [123.705695, 43.344802],
      [123.704445, 43.337152],
      [123.71417, 43.331852],
      [123.703334, 43.327796],
      [123.709168, 43.319728],
      [123.719727, 43.319129],
      [123.716601, 43.311614],
      [123.700625, 43.311291],
      [123.703889, 43.297872],
      [123.69604, 43.294921],
      [123.696388, 43.28136],
      [123.705487, 43.278084],
      [123.698541, 43.272225],
      [123.686455, 43.277392],
      [123.678259, 43.271118],
      [123.666936, 43.268211],
      [123.665408, 43.257829],
      [123.675758, 43.241121],
      [123.667978, 43.235904],
      [123.676869, 43.224177],
      [123.657907, 43.221591],
      [123.646376, 43.213233],
      [123.655823, 43.194203],
      [123.665408, 43.193371],
      [123.667978, 43.180943],
      [123.659504, 43.174751],
      [123.649849, 43.175398],
      [123.648738, 43.166479],
      [123.653392, 43.158713],
      [123.643389, 43.143874],
      [123.635193, 43.137771],
      [123.638249, 43.124822],
      [123.629706, 43.119318],
      [123.633456, 43.112195],
      [123.627691, 43.100583],
      [123.631234, 43.088969],
      [123.625746, 43.079111],
      [123.616161, 43.077445],
      [123.605325, 43.06416],
      [123.596295, 43.062447],
      [123.598309, 43.056937],
      [123.611507, 43.049297],
      [123.594628, 43.039711],
      [123.590044, 43.032069],
      [123.580805, 43.036052],
      [123.585668, 43.024287],
      [123.581083, 43.01933],
      [123.588585, 43.015855],
      [123.583028, 43.010202],
      [123.573442, 43.010434],
      [123.572678, 43.0039],
      [123.561912, 43.005383],
      [123.566496, 42.988142],
      [123.554132, 42.984388],
      [123.546839, 42.977341],
      [123.554896, 42.961206],
      [123.566496, 42.951652],
      [123.582125, 42.950075],
      [123.584348, 42.943906],
      [123.603519, 42.930268],
      [123.601088, 42.923354],
      [123.588793, 42.921823],
      [123.584973, 42.910546],
      [123.598587, 42.905162],
      [123.59956, 42.893511],
      [123.584348, 42.884829],
      [123.583931, 42.875357],
      [123.600949, 42.870481],
      [123.603519, 42.866347],
      [123.585668, 42.852598],
      [123.593378, 42.847442],
      [123.593655, 42.838846],
      [123.605325, 42.829274],
      [123.591988, 42.823418],
      [123.594697, 42.807939],
      [123.600602, 42.796595],
      [123.593864, 42.789248],
      [123.603519, 42.77911],
      [123.598865, 42.771622],
      [123.586084, 42.77511],
      [123.57761, 42.76804],
      [123.586848, 42.760178],
      [123.585598, 42.752501],
      [123.575387, 42.751152],
      [123.57247, 42.741426],
      [123.559342, 42.729464],
      [123.559481, 42.724763],
      [123.57122, 42.712007],
      [123.582611, 42.70628],
      [123.569344, 42.692868],
      [123.583306, 42.688443],
      [123.587821, 42.67731],
      [123.578999, 42.676937],
      [123.592614, 42.663705],
      [123.60338, 42.670555],
      [123.611298, 42.680291],
      [123.625746, 42.6754],
      [123.625607, 42.664078],
      [123.61887, 42.655084],
      [123.624079, 42.647441],
      [123.637068, 42.63989],
      [123.662908, 42.629028],
      [123.664714, 42.623666],
      [123.651586, 42.618397],
      [123.662491, 42.6149],
      [123.673813, 42.602028],
      [123.69479, 42.603287],
      [123.701528, 42.593725],
      [123.691109, 42.592839],
      [123.694721, 42.578516],
      [123.710349, 42.579589],
      [123.712433, 42.566243],
      [123.723894, 42.567456],
      [123.730771, 42.562556],
      [123.72577, 42.555415],
      [123.737092, 42.553128],
      [123.742093, 42.559196],
      [123.758555, 42.553968],
      [123.752859, 42.543044],
      [123.736814, 42.542671],
      [123.703889, 42.52997],
      [123.683885, 42.510028],
      [123.679439, 42.516334],
      [123.657629, 42.521144],
      [123.668256, 42.530624],
      [123.662908, 42.539869],
      [123.663811, 42.55182],
      [123.653947, 42.550187],
      [123.643737, 42.553081],
      [123.624149, 42.543744],
      [123.621787, 42.534173],
      [123.613313, 42.53548],
      [123.616786, 42.525207],
      [123.608937, 42.509327],
      [123.584, 42.512644],
      [123.583028, 42.502787],
      [123.571567, 42.506478],
      [123.566427, 42.498956],
      [123.558647, 42.499984],
      [123.554341, 42.493256],
      [123.542185, 42.490593],
      [123.534197, 42.482042],
      [123.52225, 42.487322],
      [123.5094, 42.470077],
      [123.496341, 42.463299],
      [123.479045, 42.464935],
      [123.473419, 42.4561],
      [123.454456, 42.441184],
      [123.455151, 42.43272],
      [123.479115, 42.414384],
      [123.472238, 42.397961],
      [123.476545, 42.397399],
      [123.465848, 42.381674],
      [123.482449, 42.371469],
      [123.487936, 42.363042],
      [123.499675, 42.363417],
      [123.505788, 42.353724],
      [123.516971, 42.349462],
      [123.522875, 42.339815],
      [123.52864, 42.339674],
      [123.528085, 42.321639],
      [123.51579, 42.298255],
      [123.497939, 42.275988],
      [123.48238, 42.27144],
      [123.473628, 42.261921],
      [123.468765, 42.249446],
      [123.476753, 42.233073],
      [123.465223, 42.230258],
      [123.449594, 42.204729],
      [123.458138, 42.200176],
      [123.469599, 42.181537],
      [123.487242, 42.180504],
      [123.504815, 42.192289],
      [123.521416, 42.191021],
      [123.53517, 42.181584],
      [123.542046, 42.182241],
      [123.540518, 42.155706],
      [123.541768, 42.147015],
      [123.556147, 42.144619],
      [123.574901, 42.132308],
      [123.589974, 42.129441],
      [123.608728, 42.119337],
      [123.620954, 42.115764],
      [123.631164, 42.107679],
      [123.632206, 42.100956],
      [123.647418, 42.100862],
      [123.662213, 42.09395],
      [123.678189, 42.098417],
      [123.704862, 42.09127],
      [123.705626, 42.085956],
      [123.727228, 42.076362],
      [123.735147, 42.065402],
      [123.746122, 42.065355],
      [123.75529, 42.05731],
      [123.752026, 42.052935],
      [123.779879, 42.041877],
      [123.783144, 42.037688],
      [123.789118, 42.043947],
      [123.789465, 42.052982],
      [123.794744, 42.060086],
      [123.80433, 42.058157],
      [123.805858, 42.051335],
      [123.813151, 42.050112],
      [123.808219, 42.03557],
      [123.813568, 42.030581],
      [123.810095, 42.022062],
      [123.797175, 42.013635],
      [123.788354, 42.019567],
      [123.773211, 42.023568],
      [123.763695, 42.017825],
      [123.762792, 41.999085],
      [123.769391, 42.002664],
      [123.771058, 41.995977],
      [123.790021, 41.989242]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 211300,
      "name": "朝阳市",
      "center": [120.451176, 41.576758],
      "centroid": [120.021858, 41.516568],
      "childrenNum": 7,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Chaoyang,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [121.027503, 42.243394],
      [121.006456, 42.254839],
      [121.012221, 42.259014],
      [120.992842, 42.264407],
      [120.984576, 42.261593],
      [120.970267, 42.262343],
      [120.961584, 42.266142],
      [120.959709, 42.273363],
      [120.933106, 42.27927],
      [120.930188, 42.274535],
      [120.912545, 42.272238],
      [120.905599, 42.267971],
      [120.890109, 42.271816],
      [120.88226, 42.26586],
      [120.892054, 42.254558],
      [120.883094, 42.242832],
      [120.867049, 42.251791],
      [120.834749, 42.24771],
      [120.829401, 42.252494],
      [120.823775, 42.241143],
      [120.827734, 42.234903],
      [120.820857, 42.228053],
      [120.804187, 42.225707],
      [120.790503, 42.218527],
      [120.745284, 42.223501],
      [120.73813, 42.22078],
      [120.722084, 42.203696],
      [120.696662, 42.198157],
      [120.68916, 42.187876],
      [120.650887, 42.169985],
      [120.6247, 42.154531],
      [120.584205, 42.167167],
      [120.567673, 42.151948],
      [120.551003, 42.143397],
      [120.536208, 42.140296],
      [120.494879, 42.120042],
      [120.480917, 42.115764],
      [120.466539, 42.105328],
      [120.469525, 42.097806],
      [120.480153, 42.091082],
      [120.487933, 42.09569],
      [120.498629, 42.092116],
      [120.496337, 42.087931],
      [120.482862, 42.086003],
      [120.493489, 42.072975],
      [120.482931, 42.063614],
      [120.450841, 42.05731],
      [120.453133, 42.037971],
      [120.451744, 42.022862],
      [120.456467, 42.016318],
      [120.438407, 42.006148],
      [120.42771, 42.007373],
      [120.422987, 42.001534],
      [120.41097, 41.996778],
      [120.422014, 41.986181],
      [120.399579, 41.984815],
      [120.373531, 41.994706],
      [120.346302, 41.977938],
      [120.332827, 41.979162],
      [120.336508, 41.971248],
      [120.33241, 41.963521],
      [120.309905, 41.951835],
      [120.310461, 41.941608],
      [120.31699, 41.938968],
      [120.307821, 41.927089],
      [120.304279, 41.934867],
      [120.286913, 41.93482],
      [120.280662, 41.925628],
      [120.290317, 41.918555],
      [120.280593, 41.916858],
      [120.273091, 41.92591],
      [120.266839, 41.914878],
      [120.269965, 41.908606],
      [120.260449, 41.904739],
      [120.273855, 41.89856],
      [120.291567, 41.896532],
      [120.30018, 41.887947],
      [120.288164, 41.880399],
      [120.274549, 41.883183],
      [120.251627, 41.883985],
      [120.228011, 41.865913],
      [120.215994, 41.85336],
      [120.188418, 41.848215],
      [120.183487, 41.842314],
      [120.18307, 41.826498],
      [120.163135, 41.80893],
      [120.149243, 41.792255],
      [120.127154, 41.772646],
      [120.123751, 41.762106],
      [120.131252, 41.736861],
      [120.138268, 41.729295],
      [120.131391, 41.721965],
      [120.11354, 41.713167],
      [120.104927, 41.702334],
      [120.096175, 41.697083],
      [120.071725, 41.697556],
      [120.044079, 41.708626],
      [120.035258, 41.708863],
      [120.036508, 41.725323],
      [120.0247, 41.738233],
      [120.035952, 41.7475],
      [120.037272, 41.763808],
      [120.044288, 41.765982],
      [120.05172, 41.776096],
      [120.043176, 41.774442],
      [120.033591, 41.779451],
      [120.042898, 41.787814],
      [120.045885, 41.804065],
      [120.041787, 41.818754],
      [120.048733, 41.825979],
      [120.023797, 41.81592],
      [120.017962, 41.82867],
      [120.006432, 41.862185],
      [119.995248, 41.868037],
      [119.991914, 41.874313],
      [119.991845, 41.894645],
      [119.978161, 41.908983],
      [119.961768, 41.913557],
      [119.954475, 41.920394],
      [119.960101, 41.937884],
      [119.956489, 41.961966],
      [119.950724, 41.974263],
      [119.924468, 41.989195],
      [119.927802, 41.999179],
      [119.921273, 42.014247],
      [119.907659, 42.018766],
      [119.897239, 42.030958],
      [119.902727, 42.041312],
      [119.900226, 42.045971],
      [119.883486, 42.053782],
      [119.882583, 42.066155],
      [119.869733, 42.083464],
      [119.84563, 42.097289],
      [119.842227, 42.103542],
      [119.842504, 42.125728],
      [119.837851, 42.135268],
      [119.839796, 42.148706],
      [119.85473, 42.170172],
      [119.856952, 42.182898],
      [119.852924, 42.209798],
      [119.846742, 42.215242],
      [119.806038, 42.213083],
      [119.790965, 42.215242],
      [119.788395, 42.211394],
      [119.765681, 42.214397],
      [119.744565, 42.211628],
      [119.732757, 42.221859],
      [119.721504, 42.220029],
      [119.719906, 42.229461],
      [119.704069, 42.223501],
      [119.680036, 42.240721],
      [119.64225, 42.240627],
      [119.634678, 42.25104],
      [119.626482, 42.255449],
      [119.617035, 42.252635],
      [119.608908, 42.276692],
      [119.584597, 42.27852],
      [119.582791, 42.285599],
      [119.573275, 42.280583],
      [119.565704, 42.294365],
      [119.554243, 42.289115],
      [119.553479, 42.294084],
      [119.541393, 42.292162],
      [119.543824, 42.306972],
      [119.557369, 42.319249],
      [119.553201, 42.324778],
      [119.565704, 42.328198],
      [119.57133, 42.335693],
      [119.572164, 42.359343],
      [119.54431, 42.366366],
      [119.539934, 42.363417],
      [119.502356, 42.388039],
      [119.498952, 42.372078],
      [119.489575, 42.353162],
      [119.48256, 42.34698],
      [119.452692, 42.332695],
      [119.438522, 42.328151],
      [119.431923, 42.316485],
      [119.422685, 42.315548],
      [119.415669, 42.309643],
      [119.393303, 42.307956],
      [119.373715, 42.299614],
      [119.362532, 42.303083],
      [119.348223, 42.300552],
      [119.337179, 42.294224],
      [119.327593, 42.282505],
      [119.305713, 42.268768],
      [119.284458, 42.265157],
      [119.278693, 42.257325],
      [119.276192, 42.242785],
      [119.271052, 42.235325],
      [119.252089, 42.218152],
      [119.247922, 42.205761],
      [119.237919, 42.20088],
      [119.249658, 42.187829],
      [119.264592, 42.189002],
      [119.276331, 42.186044],
      [119.276331, 42.174822],
      [119.282582, 42.170924],
      [119.290084, 42.152464],
      [119.307449, 42.148189],
      [119.304393, 42.129018],
      [119.315993, 42.119243],
      [119.35239, 42.118208],
      [119.362532, 42.109418],
      [119.373506, 42.106457],
      [119.377952, 42.095972],
      [119.385037, 42.08953],
      [119.384134, 42.077303],
      [119.37816, 42.062485],
      [119.383439, 42.057875],
      [119.381008, 42.040135],
      [119.376563, 42.037265],
      [119.375382, 42.023285],
      [119.349404, 41.98976],
      [119.33051, 41.977938],
      [119.324606, 41.96894],
      [119.330371, 41.957631],
      [119.330094, 41.947075],
      [119.324259, 41.940053],
      [119.326482, 41.933736],
      [119.336553, 41.931049],
      [119.340929, 41.921903],
      [119.333497, 41.911388],
      [119.336276, 41.904692],
      [119.323773, 41.890164],
      [119.328079, 41.877002],
      [119.334053, 41.872472],
      [119.325856, 41.858268],
      [119.326551, 41.850905],
      [119.316896, 41.83495],
      [119.319466, 41.831456],
      [119.312728, 41.805718],
      [119.297378, 41.795987],
      [119.290154, 41.783373],
      [119.299878, 41.771937],
      [119.317868, 41.76395],
      [119.311964, 41.750903],
      [119.300712, 41.743859],
      [119.311895, 41.741542],
      [119.319119, 41.72764],
      [119.306338, 41.720641],
      [119.2996, 41.71014],
      [119.304115, 41.694244],
      [119.313909, 41.68194],
      [119.313354, 41.664238],
      [119.308005, 41.657468],
      [119.313006, 41.640091],
      [119.319536, 41.644022],
      [119.341277, 41.623704],
      [119.343152, 41.617072],
      [119.360656, 41.608781],
      [119.379411, 41.604801],
      [119.386357, 41.598499],
      [119.397192, 41.597409],
      [119.416711, 41.589353],
      [119.419906, 41.581533],
      [119.411293, 41.580679],
      [119.419906, 41.568686],
      [119.414349, 41.562096],
      [119.403236, 41.566505],
      [119.3924, 41.56385],
      [119.387746, 41.567122],
      [119.376702, 41.564941],
      [119.362115, 41.566505],
      [119.368783, 41.556122],
      [119.362462, 41.554462],
      [119.3717, 41.536867],
      [119.383439, 41.531697],
      [119.3833, 41.52183],
      [119.394553, 41.521972],
      [119.404903, 41.510253],
      [119.405806, 41.50304],
      [119.398512, 41.503514],
      [119.404972, 41.487709],
      [119.403444, 41.475129],
      [119.378021, 41.459745],
      [119.372326, 41.436186],
      [119.376285, 41.422123],
      [119.365032, 41.42103],
      [119.348917, 41.411004],
      [119.322383, 41.405681],
      [119.30988, 41.405966],
      [119.309464, 41.396365],
      [119.330649, 41.385145],
      [119.325856, 41.374019],
      [119.318007, 41.369169],
      [119.331066, 41.340963],
      [119.326273, 41.329401],
      [119.314257, 41.334017],
      [119.314604, 41.348194],
      [119.306338, 41.33178],
      [119.296336, 41.325166],
      [119.270218, 41.323358],
      [119.252089, 41.325642],
      [119.240211, 41.319075],
      [119.241184, 41.298893],
      [119.246671, 41.292085],
      [119.248338, 41.276657],
      [119.230973, 41.256463],
      [119.219443, 41.256701],
      [119.215553, 41.244695],
      [119.20951, 41.244505],
      [119.209788, 41.225777],
      [119.197493, 41.222203],
      [119.16964, 41.222918],
      [119.166514, 41.212956],
      [119.185199, 41.203755],
      [119.18888, 41.198177],
      [119.184296, 41.182727],
      [119.178947, 41.177815],
      [119.158595, 41.169658],
      [119.13609, 41.145279],
      [119.126366, 41.138646],
      [119.088648, 41.136069],
      [119.081216, 41.131439],
      [119.079341, 41.109481],
      [119.08066, 41.095968],
      [119.073784, 41.08422],
      [119.059822, 41.077628],
      [119.050862, 41.080351],
      [119.04211, 41.075717],
      [119.037525, 41.067357],
      [119.028357, 41.063726],
      [119.029607, 41.070272],
      [119.008352, 41.068599],
      [118.98675, 41.077341],
      [118.969871, 41.076529],
      [118.964314, 41.079204],
      [118.946532, 41.058996],
      [118.937085, 41.052832],
      [118.936182, 41.037492],
      [118.941253, 41.02774],
      [118.952019, 41.018418],
      [118.960702, 41.01598],
      [119.000017, 41.010864],
      [119.013562, 41.007612],
      [119.020438, 40.997857],
      [119.005087, 40.984273],
      [119.000572, 40.96705],
      [118.992584, 40.967433],
      [118.97126, 40.959968],
      [118.946463, 40.95815],
      [118.917011, 40.968629],
      [118.903466, 40.961787],
      [118.899368, 40.954034],
      [118.900063, 40.942644],
      [118.89395, 40.93149],
      [118.894506, 40.924787],
      [118.88631, 40.925027],
      [118.891728, 40.903383],
      [118.889991, 40.890115],
      [118.880822, 40.862709],
      [118.87339, 40.856958],
      [118.872973, 40.848043],
      [118.855052, 40.840612],
      [118.852343, 40.826277],
      [118.846231, 40.822105],
      [118.849079, 40.800955],
      [118.861512, 40.802682],
      [118.865958, 40.794527],
      [118.876099, 40.790162],
      [118.87853, 40.783253],
      [118.892978, 40.777879],
      [118.901313, 40.781238],
      [118.910968, 40.776775],
      [118.895478, 40.754026],
      [118.906939, 40.75657],
      [118.92236, 40.751482],
      [118.943684, 40.749994],
      [118.955076, 40.742793],
      [118.960841, 40.720561],
      [118.982096, 40.706872],
      [118.987722, 40.697937],
      [119.001823, 40.696015],
      [119.01245, 40.687223],
      [119.027315, 40.69246],
      [119.048709, 40.681505],
      [119.054543, 40.664732],
      [119.063156, 40.662953],
      [119.070033, 40.670067],
      [119.081563, 40.671893],
      [119.095108, 40.663338],
      [119.115113, 40.66651],
      [119.138174, 40.678573],
      [119.153316, 40.688712],
      [119.165541, 40.692748],
      [119.176238, 40.690154],
      [119.185824, 40.675738],
      [119.173182, 40.654301],
      [119.14512, 40.634588],
      [119.158873, 40.618861],
      [119.157623, 40.605152],
      [119.162555, 40.600052],
      [119.178183, 40.609337],
      [119.185407, 40.609818],
      [119.206454, 40.603805],
      [119.230834, 40.603853],
      [119.235905, 40.597117],
      [119.24681, 40.608038],
      [119.250839, 40.617515],
      [119.260494, 40.619631],
      [119.265912, 40.609193],
      [119.27779, 40.606595],
      [119.296475, 40.614148],
      [119.295849, 40.620208],
      [119.323634, 40.643435],
      [119.333011, 40.657281],
      [119.345861, 40.669154],
      [119.363782, 40.679486],
      [119.374757, 40.681361],
      [119.390316, 40.67915],
      [119.404903, 40.685445],
      [119.419489, 40.696112],
      [119.426088, 40.70865],
      [119.42588, 40.719216],
      [119.432131, 40.730838],
      [119.459638, 40.75321],
      [119.454359, 40.755466],
      [119.464222, 40.764634],
      [119.478948, 40.760074],
      [119.494646, 40.763578],
      [119.505273, 40.771017],
      [119.515553, 40.797837],
      [119.527153, 40.808342],
      [119.531321, 40.816399],
      [119.528126, 40.834812],
      [119.535141, 40.837065],
      [119.549311, 40.833229],
      [119.572928, 40.818269],
      [119.585639, 40.822297],
      [119.608561, 40.840277],
      [119.638082, 40.829921],
      [119.647806, 40.816591],
      [119.658087, 40.808534],
      [119.658087, 40.808534],
      [119.660657, 40.793328],
      [119.670451, 40.782245],
      [119.684412, 40.78047],
      [119.691358, 40.791265],
      [119.691358, 40.798941],
      [119.699138, 40.803306],
      [119.711154, 40.818557],
      [119.712405, 40.826229],
      [119.695387, 40.824024],
      [119.69504, 40.835627],
      [119.705459, 40.840756],
      [119.706223, 40.849385],
      [119.715183, 40.861223],
      [119.728033, 40.860121],
      [119.741439, 40.86774],
      [119.747274, 40.858539],
      [119.763945, 40.858539],
      [119.781171, 40.846605],
      [119.785894, 40.856287],
      [119.795271, 40.854465],
      [119.802356, 40.870136],
      [119.815832, 40.872245],
      [119.826181, 40.886378],
      [119.826042, 40.896102],
      [119.818957, 40.929719],
      [119.832433, 40.936134],
      [119.834864, 40.928426],
      [119.850145, 40.928761],
      [119.859453, 40.924404],
      [119.8689, 40.912482],
      [119.895225, 40.913392],
      [119.908006, 40.909992],
      [119.917175, 40.931969],
      [119.932734, 40.937713],
      [119.938916, 40.947047],
      [119.951905, 40.947191],
      [119.959962, 40.933596],
      [119.967395, 40.927995],
      [119.979967, 40.933213],
      [119.99629, 40.948579],
      [120.006362, 40.964658],
      [120.007057, 40.977719],
      [120.016295, 40.983938],
      [120.015948, 40.989917],
      [120.023658, 40.993217],
      [120.02977, 41.003021],
      [120.023519, 41.008234],
      [120.018726, 41.027454],
      [120.018101, 41.039881],
      [120.009002, 41.043275],
      [120.004626, 41.062054],
      [119.993651, 41.067118],
      [119.999485, 41.075574],
      [120.015392, 41.081019],
      [120.022685, 41.080446],
      [120.028798, 41.086321],
      [120.056721, 41.091575],
      [120.062417, 41.10165],
      [120.078601, 41.100886],
      [120.0852, 41.093007],
      [120.099439, 41.088375],
      [120.112845, 41.087802],
      [120.119236, 41.076291],
      [120.110761, 41.070367],
      [120.108747, 41.063057],
      [120.119791, 41.060669],
      [120.12764, 41.04791],
      [120.146186, 41.006991],
      [120.153757, 41.010625],
      [120.170497, 41.02731],
      [120.178624, 41.027501],
      [120.188557, 41.001013],
      [120.199185, 41.001013],
      [120.205019, 40.9914],
      [120.204464, 40.973988],
      [120.193281, 40.96882],
      [120.190016, 40.956906],
      [120.173762, 40.955183],
      [120.176402, 40.948961],
      [120.166886, 40.943649],
      [120.169247, 40.926942],
      [120.179875, 40.922202],
      [120.196823, 40.923543],
      [120.203908, 40.93283],
      [120.208284, 40.946712],
      [120.218425, 40.956954],
      [120.239125, 40.951067],
      [120.252183, 40.959011],
      [120.257045, 40.945372],
      [120.266909, 40.947573],
      [120.279481, 40.945659],
      [120.290873, 40.96193],
      [120.290525, 40.973031],
      [120.30407, 40.973318],
      [120.30539, 40.985038],
      [120.318379, 40.994317],
      [120.320532, 41.000439],
      [120.328937, 41.001348],
      [120.33505, 40.995609],
      [120.338314, 41.002735],
      [120.348595, 41.001013],
      [120.339495, 40.996804],
      [120.381936, 40.973557],
      [120.388326, 40.972839],
      [120.399926, 40.955805],
      [120.406594, 40.953269],
      [120.418958, 40.956427],
      [120.42514, 40.96394],
      [120.444867, 40.977719],
      [120.454383, 40.990778],
      [120.451813, 40.998],
      [120.459037, 41.001013],
      [120.455494, 41.015167],
      [120.457439, 41.030178],
      [120.4548, 41.051494],
      [120.456675, 41.058662],
      [120.477027, 41.077628],
      [120.49724, 41.079013],
      [120.507729, 41.068122],
      [120.527525, 41.062245],
      [120.536069, 41.066975],
      [120.537527, 41.092625],
      [120.560866, 41.098642],
      [120.598653, 41.105661],
      [120.603446, 41.117788],
      [120.602543, 41.127812],
      [120.613309, 41.143466],
      [120.611572, 41.15549],
      [120.615045, 41.16131],
      [120.63637, 41.168752],
      [120.64026, 41.18411],
      [120.657277, 41.183347],
      [120.664154, 41.177815],
      [120.676726, 41.18101],
      [120.690202, 41.195507],
      [120.701385, 41.199035],
      [120.698259, 41.184444],
      [120.727224, 41.187067],
      [120.735976, 41.194458],
      [120.746604, 41.198129],
      [120.7639, 41.18988],
      [120.771471, 41.194219],
      [120.763761, 41.195745],
      [120.769317, 41.202325],
      [120.76383, 41.210048],
      [120.752647, 41.213003],
      [120.742714, 41.221297],
      [120.734448, 41.218199],
      [120.720348, 41.219581],
      [120.720626, 41.22816],
      [120.730697, 41.230972],
      [120.738407, 41.240264],
      [120.746882, 41.241217],
      [120.763969, 41.248745],
      [120.769734, 41.248554],
      [120.764038, 41.261559],
      [120.755981, 41.261559],
      [120.753272, 41.26818],
      [120.737504, 41.270943],
      [120.733337, 41.2748],
      [120.737366, 41.288467],
      [120.749243, 41.292085],
      [120.755564, 41.302416],
      [120.751605, 41.307938],
      [120.748201, 41.32431],
      [120.756606, 41.337062],
      [120.752716, 41.341962],
      [120.758829, 41.357422],
      [120.770082, 41.358278],
      [120.774527, 41.368266],
      [120.768414, 41.36955],
      [120.77029, 41.376587],
      [120.778903, 41.378489],
      [120.791336, 41.396079],
      [120.79995, 41.395319],
      [120.815995, 41.405681],
      [120.805506, 41.42141],
      [120.812036, 41.425972],
      [120.819746, 41.421458],
      [120.822385, 41.409673],
      [120.833082, 41.398171],
      [120.843015, 41.404588],
      [120.842043, 41.418274],
      [120.849753, 41.423834],
      [120.864687, 41.416231],
      [120.870799, 41.421315],
      [120.883719, 41.421173],
      [120.876009, 41.435189],
      [120.878579, 41.449582],
      [120.877537, 41.476554],
      [120.893582, 41.475699],
      [120.897472, 41.471473],
      [120.904974, 41.481159],
      [120.896986, 41.485431],
      [120.902265, 41.50005],
      [120.901223, 41.512293],
      [120.906016, 41.523443],
      [120.91456, 41.527855],
      [120.924354, 41.524866],
      [120.92616, 41.531128],
      [120.936509, 41.531128],
      [120.940121, 41.537579],
      [120.957347, 41.541326],
      [120.956375, 41.545073],
      [120.981728, 41.566695],
      [120.97374, 41.583666],
      [120.976032, 41.5994],
      [120.984159, 41.600442],
      [120.997218, 41.596035],
      [121.005067, 41.604612],
      [121.014444, 41.60826],
      [121.030698, 41.607218],
      [121.04848, 41.616125],
      [121.056051, 41.626214],
      [121.06258, 41.621099],
      [121.067442, 41.629577],
      [121.072235, 41.624604],
      [121.066956, 41.618304],
      [121.09349, 41.615982],
      [121.105715, 41.624178],
      [121.111272, 41.619441],
      [121.123914, 41.633366],
      [121.122247, 41.63886],
      [121.139265, 41.648331],
      [121.147114, 41.649278],
      [121.146905, 41.658605],
      [121.156283, 41.671055],
      [121.167118, 41.666984],
      [121.173926, 41.673847],
      [121.17844, 41.664806],
      [121.194208, 41.678059],
      [121.20164, 41.673752],
      [121.210531, 41.677965],
      [121.224493, 41.678059],
      [121.226716, 41.688707],
      [121.218102, 41.689606],
      [121.233453, 41.721539],
      [121.22227, 41.730619],
      [121.215949, 41.740218],
      [121.227549, 41.753456],
      [121.226785, 41.763241],
      [121.261307, 41.774489],
      [121.256097, 41.778789],
      [121.263669, 41.794523],
      [121.272699, 41.803593],
      [121.268392, 41.82069],
      [121.277283, 41.826876],
      [121.290689, 41.856286],
      [121.301941, 41.86563],
      [121.298885, 41.884079],
      [121.292564, 41.889881],
      [121.26353, 41.89823],
      [121.238524, 41.903607],
      [121.212962, 41.914925],
      [121.199834, 41.955464],
      [121.192055, 41.966113],
      [121.163159, 41.977514],
      [121.149962, 41.976996],
      [121.104882, 41.964935],
      [121.079529, 41.973651],
      [121.074527, 41.978786],
      [121.053967, 41.977938],
      [121.041534, 41.980152],
      [121.039311, 41.987735],
      [121.050563, 42.005113],
      [121.05487, 42.018484],
      [121.052717, 42.03124],
      [121.044451, 42.051476],
      [121.046118, 42.058863],
      [121.066748, 42.071564],
      [121.074597, 42.101896],
      [121.08453, 42.111205],
      [121.078, 42.136443],
      [121.072513, 42.143115],
      [121.071541, 42.154062],
      [121.055356, 42.175291],
      [121.055009, 42.187688],
      [121.050841, 42.19243],
      [121.057579, 42.207874],
      [121.055842, 42.219137],
      [121.047368, 42.229742],
      [121.033615, 42.23678],
      [121.027503, 42.243394]]]] } },




  {
    "type": "Feature",
    "properties": {
      "adcode": 211400,
      "name": "葫芦岛市",
      "center": [120.856394, 40.755572],
      "centroid": [120.21031, 40.620597],
      "childrenNum": 6,
      "level": "city",
      "parent": {
        "adcode": 210000 },

      "subFeatureIndex": vmap.Huludao,
      "acroutes": [100000, 210000] },

    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [
      [
      [
      [121.030003, 40.790545],
      [121.008748, 40.843393],
      [121.00729, 40.852884],
      [121.011596, 40.863955],
      [121.02007, 40.868219],
      [121.030628, 40.884031],
      [121.033962, 40.907166],
      [121.029031, 40.913296],
      [121.036394, 40.922394],
      [121.023613, 40.928187],
      [121.036949, 40.933884],
      [121.034171, 40.943649],
      [121.024655, 40.942261],
      [121.02521, 40.95011],
      [121.017292, 40.942261],
      [121.00986, 40.956092],
      [121.015625, 40.957145],
      [121.015972, 40.973318],
      [121.011666, 40.972887],
      [121.016736, 40.99867],
      [121.032295, 41.033668],
      [121.034726, 41.050491],
      [121.006664, 41.035819],
      [120.99055, 41.033381],
      [120.980269, 41.040837],
      [120.982978, 41.045377],
      [120.964293, 41.050108],
      [120.954986, 41.045903],
      [120.944706, 41.051877],
      [120.942761, 41.061433],
      [120.948456, 41.090046],
      [120.943664, 41.099454],
      [120.938315, 41.123803],
      [120.930605, 41.117549],
      [120.914073, 41.123659],
      [120.90935, 41.121082],
      [120.898584, 41.130962],
      [120.910114, 41.134923],
      [120.907683, 41.145661],
      [120.895805, 41.144659],
      [120.888581, 41.15153],
      [120.876078, 41.156062],
      [120.850725, 41.14065],
      [120.842876, 41.132155],
      [120.834472, 41.131535],
      [120.825233, 41.140889],
      [120.805923, 41.147379],
      [120.805576, 41.158114],
      [120.788489, 41.161835],
      [120.784251, 41.170278],
      [120.795851, 41.182441],
      [120.786752, 41.20099],
      [120.781195, 41.202658],
      [120.771471, 41.194219],
      [120.7639, 41.18988],
      [120.746604, 41.198129],
      [120.735976, 41.194458],
      [120.727224, 41.187067],
      [120.698259, 41.184444],
      [120.701385, 41.199035],
      [120.690202, 41.195507],
      [120.676726, 41.18101],
      [120.664154, 41.177815],
      [120.657277, 41.183347],
      [120.64026, 41.18411],
      [120.63637, 41.168752],
      [120.615045, 41.16131],
      [120.611572, 41.15549],
      [120.613309, 41.143466],
      [120.602543, 41.127812],
      [120.603446, 41.117788],
      [120.598653, 41.105661],
      [120.560866, 41.098642],
      [120.537527, 41.092625],
      [120.536069, 41.066975],
      [120.527525, 41.062245],
      [120.507729, 41.068122],
      [120.49724, 41.079013],
      [120.477027, 41.077628],
      [120.456675, 41.058662],
      [120.4548, 41.051494],
      [120.457439, 41.030178],
      [120.455494, 41.015167],
      [120.459037, 41.001013],
      [120.451813, 40.998],
      [120.454383, 40.990778],
      [120.444867, 40.977719],
      [120.42514, 40.96394],
      [120.418958, 40.956427],
      [120.406594, 40.953269],
      [120.399926, 40.955805],
      [120.388326, 40.972839],
      [120.381936, 40.973557],
      [120.339495, 40.996804],
      [120.348595, 41.001013],
      [120.338314, 41.002735],
      [120.33505, 40.995609],
      [120.328937, 41.001348],
      [120.320532, 41.000439],
      [120.318379, 40.994317],
      [120.30539, 40.985038],
      [120.30407, 40.973318],
      [120.290525, 40.973031],
      [120.290873, 40.96193],
      [120.279481, 40.945659],
      [120.266909, 40.947573],
      [120.257045, 40.945372],
      [120.252183, 40.959011],
      [120.239125, 40.951067],
      [120.218425, 40.956954],
      [120.208284, 40.946712],
      [120.203908, 40.93283],
      [120.196823, 40.923543],
      [120.179875, 40.922202],
      [120.169247, 40.926942],
      [120.166886, 40.943649],
      [120.176402, 40.948961],
      [120.173762, 40.955183],
      [120.190016, 40.956906],
      [120.193281, 40.96882],
      [120.204464, 40.973988],
      [120.205019, 40.9914],
      [120.199185, 41.001013],
      [120.188557, 41.001013],
      [120.178624, 41.027501],
      [120.170497, 41.02731],
      [120.153757, 41.010625],
      [120.146186, 41.006991],
      [120.12764, 41.04791],
      [120.119791, 41.060669],
      [120.108747, 41.063057],
      [120.110761, 41.070367],
      [120.119236, 41.076291],
      [120.112845, 41.087802],
      [120.099439, 41.088375],
      [120.0852, 41.093007],
      [120.078601, 41.100886],
      [120.062417, 41.10165],
      [120.056721, 41.091575],
      [120.028798, 41.086321],
      [120.022685, 41.080446],
      [120.015392, 41.081019],
      [119.999485, 41.075574],
      [119.993651, 41.067118],
      [120.004626, 41.062054],
      [120.009002, 41.043275],
      [120.018101, 41.039881],
      [120.018726, 41.027454],
      [120.023519, 41.008234],
      [120.02977, 41.003021],
      [120.023658, 40.993217],
      [120.015948, 40.989917],
      [120.016295, 40.983938],
      [120.007057, 40.977719],
      [120.006362, 40.964658],
      [119.99629, 40.948579],
      [119.979967, 40.933213],
      [119.967395, 40.927995],
      [119.959962, 40.933596],
      [119.951905, 40.947191],
      [119.938916, 40.947047],
      [119.932734, 40.937713],
      [119.917175, 40.931969],
      [119.908006, 40.909992],
      [119.895225, 40.913392],
      [119.8689, 40.912482],
      [119.859453, 40.924404],
      [119.850145, 40.928761],
      [119.834864, 40.928426],
      [119.832433, 40.936134],
      [119.818957, 40.929719],
      [119.826042, 40.896102],
      [119.826181, 40.886378],
      [119.815832, 40.872245],
      [119.802356, 40.870136],
      [119.795271, 40.854465],
      [119.785894, 40.856287],
      [119.781171, 40.846605],
      [119.763945, 40.858539],
      [119.747274, 40.858539],
      [119.741439, 40.86774],
      [119.728033, 40.860121],
      [119.715183, 40.861223],
      [119.706223, 40.849385],
      [119.705459, 40.840756],
      [119.69504, 40.835627],
      [119.695387, 40.824024],
      [119.712405, 40.826229],
      [119.711154, 40.818557],
      [119.699138, 40.803306],
      [119.691358, 40.798941],
      [119.691358, 40.791265],
      [119.684412, 40.78047],
      [119.670451, 40.782245],
      [119.660657, 40.793328],
      [119.658087, 40.808534],
      [119.658087, 40.808534],
      [119.647806, 40.816591],
      [119.638082, 40.829921],
      [119.608561, 40.840277],
      [119.585639, 40.822297],
      [119.572928, 40.818269],
      [119.549311, 40.833229],
      [119.535141, 40.837065],
      [119.528126, 40.834812],
      [119.531321, 40.816399],
      [119.527153, 40.808342],
      [119.515553, 40.797837],
      [119.505273, 40.771017],
      [119.494646, 40.763578],
      [119.478948, 40.760074],
      [119.464222, 40.764634],
      [119.454359, 40.755466],
      [119.459638, 40.75321],
      [119.432131, 40.730838],
      [119.42588, 40.719216],
      [119.426088, 40.70865],
      [119.419489, 40.696112],
      [119.404903, 40.685445],
      [119.390316, 40.67915],
      [119.374757, 40.681361],
      [119.363782, 40.679486],
      [119.345861, 40.669154],
      [119.333011, 40.657281],
      [119.323634, 40.643435],
      [119.295849, 40.620208],
      [119.296475, 40.614148],
      [119.27779, 40.606595],
      [119.265912, 40.609193],
      [119.260494, 40.619631],
      [119.250839, 40.617515],
      [119.24681, 40.608038],
      [119.235905, 40.597117],
      [119.232918, 40.58937],
      [119.21979, 40.578542],
      [119.220624, 40.569109],
      [119.256118, 40.543303],
      [119.27647, 40.535021],
      [119.30217, 40.530301],
      [119.338081, 40.531264],
      [119.361837, 40.537332],
      [119.381147, 40.538921],
      [119.393719, 40.537043],
      [119.441856, 40.539885],
      [119.460541, 40.534972],
      [119.477836, 40.533335],
      [119.491034, 40.536176],
      [119.503884, 40.553945],
      [119.520277, 40.547396],
      [119.534238, 40.554233],
      [119.559036, 40.54783],
      [119.572997, 40.538536],
      [119.571955, 40.523654],
      [119.555424, 40.516814],
      [119.550909, 40.509395],
      [119.553548, 40.501783],
      [119.571747, 40.488194],
      [119.575984, 40.477349],
      [119.59071, 40.47142],
      [119.604949, 40.455029],
      [119.601754, 40.445047],
      [119.593488, 40.435643],
      [119.600434, 40.406843],
      [119.591404, 40.392945],
      [119.586681, 40.375472],
      [119.599809, 40.356547],
      [119.598142, 40.334186],
      [119.616202, 40.318341],
      [119.62287, 40.301138],
      [119.64218, 40.291327],
      [119.651905, 40.272426],
      [119.642111, 40.265077],
      [119.643986, 40.259468],
      [119.633497, 40.249409],
      [119.625162, 40.224158],
      [119.639541, 40.229722],
      [119.647667, 40.229286],
      [119.666283, 40.239252],
      [119.671562, 40.23959],
      [119.676216, 40.224497],
      [119.69629, 40.208819],
      [119.716781, 40.196091],
      [119.719281, 40.204996],
      [119.73109, 40.205771],
      [119.734076, 40.200157],
      [119.745954, 40.207948],
      [119.751233, 40.187814],
      [119.752761, 40.170481],
      [119.757554, 40.158036],
      [119.75547, 40.153145],
      [119.762625, 40.13997],
      [119.755887, 40.128052],
      [119.736716, 40.10484],
      [119.762347, 40.085596],
      [119.771585, 40.082251],
      [119.760471, 40.065619],
      [119.767556, 40.059266],
      [119.770891, 40.048789],
      [119.779782, 40.049517],
      [119.796035, 40.040155],
      [119.807635, 40.044084],
      [119.816943, 40.052864],
      [119.824375, 40.047722],
      [119.835003, 40.050245],
      [119.844658, 40.037098],
      [119.854243, 40.032295],
      [119.839796, 40.006284],
      [119.846186, 40.004828],
      [119.854243, 39.988469],
      [119.864593, 39.989925],
      [119.89071, 39.987595],
      [119.913979, 39.988469],
      [119.934748, 40.001964],
      [119.94225, 40.012108],
      [119.9435, 40.029723],
      [119.94739, 40.040252],
      [119.955864, 40.046704],
      [119.973368, 40.051166],
      [120.001361, 40.054513],
      [120.025742, 40.059848],
      [120.092215, 40.077596],
      [120.123334, 40.073766],
      [120.134309, 40.07459],
      [120.161745, 40.096019],
      [120.22037, 40.109396],
      [120.272952, 40.12718],
      [120.330743, 40.155421],
      [120.371725, 40.174549],
      [120.397634, 40.179971],
      [120.450979, 40.177647],
      [120.465149, 40.178761],
      [120.483279, 40.190379],
      [120.49731, 40.210029],
      [120.511132, 40.248442],
      [120.523913, 40.256711],
      [120.524747, 40.270589],
      [120.521413, 40.292971],
      [120.521968, 40.304666],
      [120.531832, 40.321288],
      [120.537527, 40.325394],
      [120.570243, 40.336794],
      [120.595666, 40.351669],
      [120.602334, 40.360941],
      [120.601778, 40.382472],
      [120.595596, 40.390967],
      [120.596222, 40.398978],
      [120.606571, 40.404093],
      [120.615809, 40.413212],
      [120.616435, 40.444854],
      [120.622408, 40.451943],
      [120.619005, 40.459995],
      [120.639634, 40.468142],
      [120.667002, 40.467467],
      [120.676657, 40.474313],
      [120.694022, 40.505685],
      [120.709303, 40.507853],
      [120.722015, 40.515465],
      [120.724029, 40.53112],
      [120.728127, 40.539355],
      [120.772165, 40.560203],
      [120.799324, 40.575847],
      [120.822733, 40.594134],
      [120.827525, 40.606643],
      [120.831485, 40.635405],
      [120.83718, 40.651753],
      [120.830582, 40.665309],
      [120.831624, 40.674344],
      [120.847044, 40.682274],
      [120.858505, 40.68458],
      [120.876634, 40.681216],
      [120.893096, 40.685253],
      [120.942622, 40.686935],
      [120.953944, 40.696688],
      [120.971378, 40.697505],
      [120.983534, 40.71278],
      [121.010624, 40.707209],
      [121.032295, 40.709082],
      [121.039728, 40.714173],
      [121.042506, 40.726372],
      [121.035004, 40.742409],
      [121.028753, 40.746346],
      [120.994856, 40.74673],
      [120.987702, 40.743177],
      [120.979366, 40.749658],
      [120.980478, 40.76641],
      [120.996593, 40.776823],
      [120.995829, 40.78877],
      [120.990063, 40.795007],
      [120.978186, 40.797981],
      [120.971795, 40.805704],
      [120.978463, 40.811891],
      [120.979853, 40.820427],
      [120.992842, 40.808725],
      [121.007359, 40.80767],
      [121.010971, 40.784644],
      [121.023752, 40.779126],
      [121.030003, 40.790545]]],


      [
      [
      [120.786544, 40.47359],
      [120.800505, 40.486796],
      [120.82308, 40.48723],
      [120.832804, 40.492097],
      [120.831832, 40.512575],
      [120.82183, 40.517777],
      [120.822108, 40.522787],
      [120.812383, 40.521776],
      [120.806618, 40.526833],
      [120.809466, 40.516188],
      [120.802381, 40.51296],
      [120.792934, 40.515176],
      [120.793004, 40.499711],
      [120.781056, 40.498506],
      [120.775152, 40.489495],
      [120.774458, 40.480097],
      [120.786544, 40.47359]]],


      [
      [
      [120.614837, 40.396661],
      [120.620672, 40.396323],
      [120.621366, 40.406216],
      [120.614837, 40.396661]]]] } }];





  return features;
};exports.arrRess = arrRess;

/***/ }),
/* 207 */
/*!***********************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/liaoning.json ***!
  \***********************************************************************/
/*! exports provided: features, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"features\":[{\"type\":\"Feature\",\"properties\":{\"adcode\":210100,\"name\":\"沈阳市\",\"center\":[123.429096,41.796767],\"centroid\":[123.143796,42.100641],\"childrenNum\":13,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":1,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[123.561912,43.005383],[123.557536,43.010156],[123.537601,43.00719],[123.522389,43.020349],[123.493771,43.025769],[123.486408,43.03545],[123.471891,43.042721],[123.462375,43.03897],[123.448483,43.038136],[123.434938,43.027761],[123.412085,43.02878],[123.402917,43.020581],[123.383051,43.016596],[123.373674,43.011778],[123.333178,43.005383],[123.323106,43.001027],[123.272886,42.996856],[123.259411,42.993287],[123.242115,42.979752],[123.231349,42.962968],[123.219332,42.953508],[123.206204,42.951652],[123.184116,42.925906],[123.18877,42.895832],[123.186755,42.886129],[123.179392,42.878793],[123.170015,42.859752],[123.17071,42.852134],[123.18231,42.846048],[123.189395,42.848185],[123.227598,42.832155],[123.222458,42.825742],[123.187241,42.825416],[123.166403,42.810961],[123.132368,42.802733],[123.117503,42.801105],[123.096179,42.789806],[123.083676,42.788783],[123.058461,42.76911],[123.047973,42.771529],[123.031094,42.767761],[123.022481,42.772273],[122.995669,42.775203],[122.988515,42.779017],[122.978999,42.776785],[122.969135,42.767063],[122.973928,42.762969],[122.954201,42.754455],[122.945935,42.753711],[122.929334,42.77204],[122.887311,42.770133],[122.878697,42.759433],[122.877864,42.751152],[122.88356,42.751989],[122.875294,42.739425],[122.857929,42.725461],[122.850844,42.714428],[122.85522,42.706978],[122.846537,42.708189],[122.848621,42.717082],[122.83973,42.718292],[122.836118,42.716476],[122.815766,42.718897],[122.80111,42.726299],[122.778118,42.710889],[122.767838,42.709074],[122.750959,42.697944],[122.747347,42.689188],[122.756238,42.679732],[122.769505,42.677962],[122.791802,42.662773],[122.792705,42.650983],[122.824935,42.652661],[122.842786,42.648839],[122.838688,42.645204],[122.842578,42.633364],[122.86293,42.621055],[122.873488,42.608604],[122.886477,42.611216],[122.892034,42.608884],[122.903078,42.613687],[122.926764,42.604407],[122.922874,42.596804],[122.930237,42.587707],[122.969899,42.571376],[122.974414,42.564329],[122.966912,42.561716],[122.957744,42.550327],[122.949408,42.545098],[122.943365,42.547899],[122.921832,42.535527],[122.916831,42.52969],[122.917804,42.521565],[122.911552,42.51951],[122.908357,42.500685],[122.899744,42.499424],[122.882101,42.503908],[122.871543,42.504049],[122.834382,42.497975],[122.819447,42.490126],[122.826463,42.490126],[122.818544,42.481434],[122.825004,42.461149],[122.822018,42.458017],[122.827297,42.445814],[122.826602,42.438846],[122.832853,42.431597],[122.824865,42.429352],[122.81778,42.416769],[122.833965,42.417986],[122.828269,42.410267],[122.832159,42.403342],[122.84619,42.399599],[122.850983,42.40526],[122.862027,42.406804],[122.865639,42.395715],[122.873627,42.389397],[122.882379,42.388367],[122.875294,42.37484],[122.883421,42.368333],[122.895298,42.368848],[122.903217,42.353256],[122.900994,42.349182],[122.871057,42.345669],[122.858345,42.346091],[122.838827,42.331898],[122.826324,42.330446],[122.810765,42.319624],[122.805555,42.312408],[122.781314,42.29863],[122.769505,42.297037],[122.734289,42.284287],[122.735053,42.281005],[122.703726,42.261124],[122.691779,42.249915],[122.651283,42.232651],[122.645101,42.237671],[122.63628,42.237061],[122.632598,42.231009],[122.626,42.234716],[122.620096,42.230071],[122.609329,42.230164],[122.614469,42.212755],[122.552024,42.188063],[122.520072,42.174681],[122.455821,42.144572],[122.439428,42.150961],[122.432621,42.144196],[122.436858,42.140625],[122.423522,42.140672],[122.425953,42.129018],[122.429704,42.125118],[122.446583,42.124178],[122.438456,42.117315],[122.447625,42.110499],[122.435608,42.104811],[122.428315,42.092352],[122.445194,42.094656],[122.449917,42.087602],[122.436164,42.084169],[122.439359,42.074481],[122.453182,42.072458],[122.447347,42.063473],[122.459016,42.055523],[122.462767,42.041688],[122.477076,42.043571],[122.477632,42.038582],[122.469366,42.029169],[122.483744,42.02145],[122.497289,41.999274],[122.494789,41.988771],[122.501526,41.970918],[122.500971,41.956783],[122.507917,41.938733],[122.517919,41.936329],[122.515766,41.926523],[122.521045,41.916622],[122.517849,41.912331],[122.523129,41.900117],[122.509028,41.90422],[122.473881,41.906201],[122.443388,41.901202],[122.443874,41.890636],[122.453321,41.882852],[122.459572,41.870538],[122.457627,41.861194],[122.459225,41.843022],[122.487148,41.832211],[122.498817,41.82494],[122.513612,41.820595],[122.511459,41.81677],[122.529519,41.808363],[122.540077,41.800664],[122.552927,41.786869],[122.560915,41.789137],[122.55772,41.774914],[122.56925,41.772835],[122.596479,41.772268],[122.600369,41.766549],[122.579878,41.754969],[122.570431,41.740644],[122.575432,41.731518],[122.572168,41.728444],[122.572515,41.712505],[122.555983,41.708106],[122.549524,41.69907],[122.550635,41.678911],[122.532992,41.669919],[122.526671,41.676261],[122.517502,41.676971],[122.515835,41.658131],[122.526532,41.655054],[122.510139,41.62773],[122.502429,41.630098],[122.487078,41.605323],[122.484439,41.597599],[122.492635,41.590917],[122.485828,41.58158],[122.479646,41.583239],[122.487356,41.566316],[122.497706,41.57044],[122.500345,41.562238],[122.492983,41.551854],[122.4959,41.54346],[122.506597,41.537437],[122.520767,41.542559],[122.553483,41.550669],[122.566125,41.547776],[122.572446,41.540045],[122.582934,41.535207],[122.595159,41.534448],[122.59891,41.530227],[122.599118,41.514618],[122.604536,41.513005],[122.625027,41.520976],[122.634613,41.516943],[122.631418,41.506694],[122.636905,41.501663],[122.623916,41.488896],[122.636419,41.481728],[122.632598,41.474085],[122.625166,41.471426],[122.634543,41.448204],[122.634752,41.435331],[122.629751,41.429725],[122.643018,41.432528],[122.647116,41.424499],[122.631209,41.416801],[122.634057,41.405253],[122.64913,41.395889],[122.640795,41.363605],[122.642601,41.357612],[122.656423,41.358754],[122.658993,41.354806],[122.629542,41.330163],[122.620304,41.317504],[122.604328,41.318075],[122.60669,41.303463],[122.594673,41.303463],[122.588491,41.296846],[122.595229,41.293513],[122.576405,41.279991],[122.569528,41.268466],[122.554108,41.254843],[122.552371,41.249602],[122.560012,41.244123],[122.596201,41.245076],[122.612455,41.220534],[122.615303,41.207903],[122.622527,41.199845],[122.633015,41.203088],[122.637044,41.210191],[122.659896,41.212813],[122.669482,41.223394],[122.666634,41.229399],[122.666981,41.2456],[122.674275,41.251508],[122.676706,41.260893],[122.692543,41.268228],[122.698239,41.278991],[122.705949,41.284562],[122.698447,41.299274],[122.70963,41.308509],[122.724148,41.314601],[122.717827,41.322787],[122.731163,41.323453],[122.737762,41.33002],[122.747834,41.329449],[122.749362,41.351857],[122.765616,41.368313],[122.773742,41.360323],[122.780966,41.366363],[122.798054,41.366839],[122.80368,41.373401],[122.841814,41.378584],[122.85133,41.394701],[122.849663,41.415898],[122.863347,41.424642],[122.871404,41.414378],[122.881754,41.422313],[122.886755,41.417894],[122.914609,41.417799],[122.929681,41.42811],[122.912664,41.432956],[122.92857,41.448537],[122.91704,41.451054],[122.91954,41.454901],[122.933641,41.447919],[122.940309,41.456041],[122.935308,41.458368],[122.937947,41.466963],[122.933293,41.469194],[122.934405,41.47869],[122.959688,41.468102],[122.975803,41.47869],[122.976428,41.488849],[122.982055,41.496158],[122.971288,41.49929],[122.969205,41.492598],[122.957813,41.496395],[122.969205,41.509778],[123.002198,41.513906],[123.010881,41.505175],[123.020675,41.5075],[123.027413,41.514144],[123.041166,41.540187],[123.050196,41.551048],[123.071173,41.554462],[123.082286,41.560769],[123.078744,41.563376],[123.087218,41.5794],[123.087565,41.588974],[123.109098,41.606318],[123.11403,41.617119],[123.134312,41.60845],[123.123546,41.589637],[123.114099,41.585277],[123.11535,41.564988],[123.111668,41.55854],[123.131117,41.554035],[123.127366,41.546638],[123.134451,41.536156],[123.143203,41.538765],[123.156748,41.53682],[123.16946,41.548961],[123.182032,41.549388],[123.188144,41.54512],[123.193493,41.549673],[123.187589,41.555648],[123.201898,41.564562],[123.219471,41.565273],[123.219818,41.559156],[123.235517,41.551712],[123.236003,41.540282],[123.252951,41.538148],[123.279694,41.538053],[123.284278,41.524439],[123.2956,41.525056],[123.313382,41.519979],[123.324079,41.508307],[123.33429,41.506931],[123.335679,41.514665],[123.353669,41.510775],[123.362352,41.513195],[123.362629,41.504701],[123.382565,41.509256],[123.383746,41.50043],[123.397638,41.495114],[123.40764,41.500619],[123.417087,41.487472],[123.430076,41.481396],[123.429659,41.472043],[123.439383,41.469337],[123.449386,41.474987],[123.458068,41.466535],[123.477726,41.463829],[123.489603,41.478975],[123.498147,41.483675],[123.516485,41.480067],[123.527529,41.491981],[123.546561,41.481111],[123.560801,41.486808],[123.58018,41.498436],[123.591502,41.494022],[123.605533,41.502423],[123.603866,41.506029],[123.61623,41.508639],[123.615813,41.513479],[123.625816,41.516896],[123.629567,41.523822],[123.646584,41.518651],[123.664714,41.527048],[123.677703,41.528709],[123.683815,41.519742],[123.692359,41.526479],[123.702917,41.520786],[123.703403,41.515662],[123.71924,41.510348],[123.727437,41.517133],[123.745635,41.520596],[123.74758,41.527238],[123.73987,41.54033],[123.729868,41.543175],[123.735633,41.55138],[123.725561,41.556549],[123.721741,41.568307],[123.760222,41.584898],[123.776337,41.58741],[123.791827,41.598499],[123.782102,41.606602],[123.770711,41.60826],[123.767446,41.61873],[123.759597,41.619441],[123.749872,41.636824],[123.752998,41.642932],[123.764459,41.6462],[123.76953,41.657326],[123.779115,41.65709],[123.79648,41.680757],[123.790507,41.685631],[123.808567,41.697272],[123.811553,41.708815],[123.801204,41.718512],[123.801065,41.728917],[123.790021,41.7388],[123.781824,41.752133],[123.789048,41.766786],[123.772794,41.773449],[123.786687,41.785452],[123.780157,41.796838],[123.768627,41.799389],[123.755638,41.794145],[123.761889,41.788665],[123.7605,41.779215],[123.745844,41.783467],[123.716809,41.775103],[123.714031,41.778033],[123.691109,41.779167],[123.69222,41.78342],[123.669715,41.785215],[123.665547,41.795893],[123.669506,41.803687],[123.676522,41.803876],[123.685413,41.811386],[123.681176,41.825365],[123.673813,41.832258],[123.67673,41.837263],[123.706668,41.84255],[123.719588,41.849064],[123.739801,41.86379],[123.739106,41.880399],[123.720421,41.886909],[123.715628,41.891815],[123.728826,41.897428],[123.728617,41.907285],[123.733271,41.915773],[123.741676,41.919876],[123.731049,41.923082],[123.732785,41.930342],[123.723408,41.946887],[123.732507,41.954804],[123.727089,41.957961],[123.734383,41.967196],[123.763348,41.972614],[123.774392,41.969175],[123.790021,41.989242],[123.771058,41.995977],[123.769391,42.002664],[123.762792,41.999085],[123.763695,42.017825],[123.773211,42.023568],[123.788354,42.019567],[123.797175,42.013635],[123.810095,42.022062],[123.813568,42.030581],[123.808219,42.03557],[123.813151,42.050112],[123.805858,42.051335],[123.80433,42.058157],[123.794744,42.060086],[123.789465,42.052982],[123.789118,42.043947],[123.783144,42.037688],[123.779879,42.041877],[123.752026,42.052935],[123.75529,42.05731],[123.746122,42.065355],[123.735147,42.065402],[123.727228,42.076362],[123.705626,42.085956],[123.704862,42.09127],[123.678189,42.098417],[123.662213,42.09395],[123.647418,42.100862],[123.632206,42.100956],[123.631164,42.107679],[123.620954,42.115764],[123.608728,42.119337],[123.589974,42.129441],[123.574901,42.132308],[123.556147,42.144619],[123.541768,42.147015],[123.540518,42.155706],[123.542046,42.182241],[123.53517,42.181584],[123.521416,42.191021],[123.504815,42.192289],[123.487242,42.180504],[123.469599,42.181537],[123.458138,42.200176],[123.449594,42.204729],[123.465223,42.230258],[123.476753,42.233073],[123.468765,42.249446],[123.473628,42.261921],[123.48238,42.27144],[123.497939,42.275988],[123.51579,42.298255],[123.528085,42.321639],[123.52864,42.339674],[123.522875,42.339815],[123.516971,42.349462],[123.505788,42.353724],[123.499675,42.363417],[123.487936,42.363042],[123.482449,42.371469],[123.465848,42.381674],[123.476545,42.397399],[123.472238,42.397961],[123.479115,42.414384],[123.455151,42.43272],[123.454456,42.441184],[123.473419,42.4561],[123.479045,42.464935],[123.496341,42.463299],[123.5094,42.470077],[123.52225,42.487322],[123.534197,42.482042],[123.542185,42.490593],[123.554341,42.493256],[123.558647,42.499984],[123.566427,42.498956],[123.571567,42.506478],[123.583028,42.502787],[123.584,42.512644],[123.608937,42.509327],[123.616786,42.525207],[123.613313,42.53548],[123.621787,42.534173],[123.624149,42.543744],[123.643737,42.553081],[123.653947,42.550187],[123.663811,42.55182],[123.662908,42.539869],[123.668256,42.530624],[123.657629,42.521144],[123.679439,42.516334],[123.683885,42.510028],[123.703889,42.52997],[123.736814,42.542671],[123.752859,42.543044],[123.758555,42.553968],[123.742093,42.559196],[123.737092,42.553128],[123.72577,42.555415],[123.730771,42.562556],[123.723894,42.567456],[123.712433,42.566243],[123.710349,42.579589],[123.694721,42.578516],[123.691109,42.592839],[123.701528,42.593725],[123.69479,42.603287],[123.673813,42.602028],[123.662491,42.6149],[123.651586,42.618397],[123.664714,42.623666],[123.662908,42.629028],[123.637068,42.63989],[123.624079,42.647441],[123.61887,42.655084],[123.625607,42.664078],[123.625746,42.6754],[123.611298,42.680291],[123.60338,42.670555],[123.592614,42.663705],[123.578999,42.676937],[123.587821,42.67731],[123.583306,42.688443],[123.569344,42.692868],[123.582611,42.70628],[123.57122,42.712007],[123.559481,42.724763],[123.559342,42.729464],[123.57247,42.741426],[123.575387,42.751152],[123.585598,42.752501],[123.586848,42.760178],[123.57761,42.76804],[123.586084,42.77511],[123.598865,42.771622],[123.603519,42.77911],[123.593864,42.789248],[123.600602,42.796595],[123.594697,42.807939],[123.591988,42.823418],[123.605325,42.829274],[123.593655,42.838846],[123.593378,42.847442],[123.585668,42.852598],[123.603519,42.866347],[123.600949,42.870481],[123.583931,42.875357],[123.584348,42.884829],[123.59956,42.893511],[123.598587,42.905162],[123.584973,42.910546],[123.588793,42.921823],[123.601088,42.923354],[123.603519,42.930268],[123.584348,42.943906],[123.582125,42.950075],[123.566496,42.951652],[123.554896,42.961206],[123.546839,42.977341],[123.554132,42.984388],[123.566496,42.988142],[123.561912,43.005383]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":210200,\"name\":\"大连市\",\"center\":[121.618622,38.91459],\"centroid\":[122.190893,39.593378],\"childrenNum\":10,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":1,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[123.518846,39.770327],[123.518846,39.79857],[123.514679,39.814342],[123.504468,39.820182],[123.501273,39.828358],[123.504399,39.843832],[123.500162,39.851907],[123.483074,39.859934],[123.476614,39.868299],[123.474253,39.881284],[123.480782,39.891446],[123.490506,39.898058],[123.470571,39.924887],[123.456749,39.929164],[123.437161,39.922701],[123.420143,39.933877],[123.407362,39.9348],[123.397846,39.926005],[123.399096,39.93446],[123.391247,39.935918],[123.393331,39.954378],[123.384996,39.954864],[123.377077,39.971523],[123.401666,39.981817],[123.401041,39.993178],[123.407918,39.9991],[123.404862,40.009245],[123.39215,40.01371],[123.380272,40.004779],[123.359504,40.002158],[123.338943,40.01963],[123.317341,40.025114],[123.299698,40.024483],[123.296572,40.01701],[123.281638,40.016961],[123.266704,40.039233],[123.242324,40.036759],[123.225723,40.049663],[123.191895,40.06494],[123.183838,40.064746],[123.172794,40.070469],[123.167862,40.067607],[123.141814,40.072699],[123.136327,40.079196],[123.127019,40.076287],[123.11792,40.063485],[123.103194,40.074736],[123.080342,40.055095],[123.073326,40.040349],[123.068672,40.042289],[123.053947,40.060139],[123.03165,40.062127],[123.028871,40.07042],[123.010256,40.07299],[122.993863,40.081863],[122.981707,40.103289],[122.988654,40.116859],[122.969552,40.118507],[122.960522,40.123546],[122.944963,40.143215],[122.939128,40.158956],[122.938711,40.174791],[122.927042,40.182247],[122.901967,40.184038],[122.890784,40.187378],[122.893979,40.20519],[122.881476,40.195607],[122.878558,40.185442],[122.869668,40.178906],[122.8539,40.154646],[122.847926,40.150432],[122.858276,40.134496],[122.851122,40.124612],[122.835215,40.119282],[122.824379,40.120687],[122.815558,40.111335],[122.813821,40.103435],[122.80111,40.102853],[122.797498,40.106634],[122.778535,40.112013],[122.767421,40.109881],[122.746861,40.097667],[122.733247,40.094758],[122.727482,40.085693],[122.71352,40.075996],[122.708936,40.067462],[122.694488,40.07105],[122.658646,40.062176],[122.650519,40.06591],[122.628709,40.061933],[122.617317,40.064019],[122.607315,40.052864],[122.577516,40.055726],[122.569806,40.049905],[122.55772,40.058975],[122.55126,40.057326],[122.539452,40.062127],[122.529866,40.047431],[122.536465,40.031276],[122.550982,40.024677],[122.544731,40.013225],[122.527435,40.015554],[122.519308,40.005605],[122.520142,39.99876],[122.541049,39.993275],[122.544106,39.989343],[122.539243,39.972785],[122.554108,39.974631],[122.555914,39.968075],[122.549524,39.954524],[122.561193,39.944565],[122.551538,39.939173],[122.530005,39.941796],[122.510695,39.928678],[122.512084,39.920611],[122.501318,39.927317],[122.497081,39.935918],[122.477423,39.939561],[122.456168,39.951707],[122.418312,39.968657],[122.417757,39.972154],[122.401434,39.9672],[122.400322,39.972154],[122.373371,39.966326],[122.357743,39.969629],[122.344059,39.982545],[122.326972,39.984633],[122.304466,39.979486],[122.285851,39.967589],[122.280919,39.967395],[122.269806,39.979098],[122.269597,39.98405],[122.259873,39.988906],[122.26029,40.00609],[122.248898,40.012982],[122.242577,40.022202],[122.231047,40.008905],[122.218683,40.000217],[122.198609,39.998469],[122.196664,40.006138],[122.185342,40.009924],[122.175061,40.027103],[122.157557,40.035643],[122.139914,40.030888],[122.12498,40.042435],[122.096015,40.042386],[122.090111,40.038942],[122.081915,40.055435],[122.07344,40.056453],[122.069203,40.067753],[122.058576,40.064601],[122.049824,40.068577],[122.044267,40.062515],[122.020928,40.058393],[122.008356,40.051457],[121.993422,40.052379],[121.982794,40.061836],[121.980294,40.078081],[121.986545,40.081912],[121.98724,40.09088],[121.970778,40.116423],[121.953274,40.128876],[121.929518,40.106488],[121.921669,40.095631],[121.910416,40.072796],[121.878395,40.051021],[121.864711,40.052088],[121.856793,40.041561],[121.84304,40.041998],[121.823313,40.036613],[121.824841,40.025502],[121.809768,40.015942],[121.796223,39.999052],[121.790666,39.967978],[121.783165,39.960935],[121.779066,39.942865],[121.76448,39.933488],[121.751977,39.935772],[121.723637,39.935626],[121.699812,39.937327],[121.688212,39.931302],[121.662095,39.905301],[121.64723,39.906516],[121.636255,39.904183],[121.632574,39.889987],[121.626809,39.882791],[121.589508,39.868202],[121.572143,39.865235],[121.552486,39.872141],[121.537969,39.872822],[121.536024,39.861052],[121.530189,39.851518],[121.519423,39.844805],[121.514421,39.836533],[121.497612,39.820912],[121.475176,39.814585],[121.472537,39.806894],[121.475176,39.791754],[121.488929,39.777243],[121.487193,39.760342],[121.459686,39.747919],[121.461423,39.740026],[121.480177,39.728428],[121.502752,39.703326],[121.495042,39.688504],[121.498029,39.677629],[121.492125,39.665923],[121.482539,39.659338],[121.451907,39.658167],[121.446142,39.655045],[121.445517,39.644799],[121.454199,39.641774],[121.456839,39.633771],[121.45024,39.625084],[121.421692,39.621179],[121.40384,39.612588],[121.376125,39.608438],[121.355496,39.609366],[121.325766,39.601457],[121.297357,39.605753],[121.278672,39.599309],[121.263669,39.589689],[121.234634,39.565855],[121.226577,39.555059],[121.224007,39.535416],[121.225813,39.515767],[121.233801,39.50775],[121.24936,39.499731],[121.257417,39.485061],[121.268253,39.482616],[121.273046,39.496064],[121.286799,39.507163],[121.294579,39.494548],[121.303747,39.488142],[121.301664,39.476306],[121.245887,39.456837],[121.257903,39.435698],[121.270059,39.434229],[121.265683,39.426643],[121.252138,39.427377],[121.247415,39.419594],[121.258042,39.408726],[121.244914,39.395114],[121.247484,39.388062],[121.256653,39.384193],[121.25957,39.375622],[121.273671,39.375132],[121.308054,39.391246],[121.318543,39.388601],[121.319723,39.374544],[121.324308,39.371605],[121.349591,39.377826],[121.383349,39.37087],[121.395505,39.363571],[121.406063,39.361954],[121.421414,39.366217],[121.433153,39.3573],[121.436348,39.344266],[121.436,39.329955],[121.461701,39.324171],[121.466702,39.319857],[121.465243,39.301227],[121.474898,39.296225],[121.484692,39.282836],[121.498029,39.281169],[121.508378,39.292155],[121.515533,39.286613],[121.524424,39.293577],[121.555612,39.31167],[121.562419,39.322897],[121.571588,39.322161],[121.621321,39.326181],[121.636464,39.337013],[121.672583,39.348039],[121.687031,39.347206],[121.69231,39.353233],[121.704535,39.358035],[121.715857,39.366657],[121.723706,39.367441],[121.722456,39.356467],[121.711134,39.34309],[121.718636,39.332602],[121.716343,39.3177],[121.702243,39.326622],[121.669527,39.312504],[121.662859,39.298088],[121.669388,39.290732],[121.685086,39.291615],[121.68592,39.282346],[121.667999,39.276264],[121.655218,39.283719],[121.643618,39.279305],[121.626045,39.285926],[121.620349,39.27798],[121.598747,39.279158],[121.589231,39.267434],[121.59451,39.249525],[121.60868,39.257032],[121.621877,39.244127],[121.639451,39.244323],[121.635491,39.236275],[121.624239,39.238925],[121.630976,39.226311],[121.602636,39.230728],[121.591175,39.228716],[121.590828,39.217327],[121.601942,39.210797],[121.588328,39.20137],[121.587008,39.193562],[121.604234,39.1663],[121.639451,39.166055],[121.650078,39.15726],[121.652162,39.147678],[121.663206,39.145909],[121.664317,39.136522],[121.672444,39.127674],[121.68335,39.12207],[121.682308,39.118039],[121.656746,39.095568],[121.636811,39.087797],[121.636394,39.080124],[121.614097,39.077419],[121.606665,39.073041],[121.606179,39.080567],[121.642854,39.110664],[121.64216,39.119858],[121.595065,39.154607],[121.590689,39.155],[121.562766,39.131361],[121.562419,39.127281],[121.599233,39.098666],[121.599094,39.09247],[121.585758,39.077862],[121.566517,39.073582],[121.559154,39.064333],[121.533662,39.052278],[121.507823,39.034117],[121.471286,39.025503],[121.460103,39.032444],[121.431138,39.027472],[121.417177,39.029146],[121.410231,39.039531],[121.39099,39.050506],[121.383141,39.062857],[121.373764,39.062266],[121.366331,39.048882],[121.352023,39.045929],[121.342437,39.040024],[121.344799,39.031459],[121.331879,39.025749],[121.326531,39.016395],[121.317778,39.015362],[121.321043,39.002067],[121.340492,38.999359],[121.340909,38.980593],[121.325905,38.972515],[121.312916,38.970298],[121.301941,38.974781],[121.280131,38.973746],[121.263252,38.960641],[121.238802,38.956995],[121.222895,38.940979],[121.20428,38.941028],[121.196848,38.953299],[121.180177,38.96],[121.127734,38.959015],[121.117454,38.951771],[121.112245,38.942654],[121.092587,38.928557],[121.086752,38.907259],[121.093907,38.894338],[121.125025,38.889752],[121.127943,38.87673],[121.115231,38.868738],[121.109605,38.851221],[121.113634,38.822297],[121.128637,38.799238],[121.125859,38.790496],[121.111689,38.783384],[121.112245,38.776073],[121.126762,38.756359],[121.133638,38.725222],[121.137875,38.722849],[121.182955,38.719833],[121.19914,38.721514],[121.214213,38.733526],[121.22102,38.744548],[121.222965,38.75463],[121.23769,38.764117],[121.259848,38.786446],[121.305553,38.789558],[121.326253,38.801362],[121.330212,38.814249],[121.340284,38.819088],[121.359455,38.822346],[121.398908,38.81262],[121.428777,38.811287],[121.445517,38.817064],[121.468091,38.816126],[121.489693,38.823136],[121.496014,38.813756],[121.509698,38.817804],[121.523868,38.83217],[121.526577,38.840166],[121.542692,38.847125],[121.549152,38.864248],[121.559918,38.866419],[121.565475,38.875102],[121.594926,38.873523],[121.608471,38.869922],[121.617432,38.862768],[121.660775,38.860991],[121.677168,38.862472],[121.687726,38.873178],[121.694811,38.864198],[121.70905,38.87298],[121.71169,38.887631],[121.723428,38.904004],[121.7194,38.920078],[121.687309,38.929001],[121.678001,38.93393],[121.677029,38.941077],[121.650842,38.946498],[121.627017,38.93743],[121.621391,38.938859],[121.618335,38.94916],[121.634102,38.952461],[121.636464,38.958719],[121.650009,38.958818],[121.662581,38.966209],[121.676681,38.988228],[121.675153,38.997093],[121.658205,39.001624],[121.671125,39.009896],[121.68196,39.005711],[121.698353,39.004874],[121.711134,39.000442],[121.738224,38.999112],[121.760798,39.006597],[121.764132,39.013392],[121.756908,39.025651],[121.762952,39.028407],[121.79018,39.022402],[121.792959,39.01093],[121.805184,38.98744],[121.804767,38.970987],[121.833176,38.950441],[121.863183,38.942506],[121.870615,38.944773],[121.892426,38.958818],[121.911667,38.963794],[121.920905,38.969805],[121.903887,38.97547],[121.902081,38.988524],[121.905901,38.997339],[121.900275,39.002559],[121.883257,39.009798],[121.855612,39.026094],[121.852834,39.035742],[121.888467,39.027275],[121.903957,39.028457],[121.91507,39.014081],[121.928129,39.017971],[121.92924,39.024863],[121.917918,39.045339],[121.907013,39.04716],[121.907082,39.055722],[121.923336,39.053606],[121.963415,39.030032],[121.973487,39.031902],[121.989463,39.063595],[121.996548,39.069253],[122.020511,39.072844],[122.061841,39.060298],[122.072815,39.064972],[122.071426,39.074123],[122.053644,39.091683],[122.048435,39.101273],[122.05031,39.108304],[122.057812,39.110664],[122.08129,39.10973],[122.088305,39.11209],[122.107685,39.131115],[122.127411,39.144877],[122.147069,39.148857],[122.164573,39.147187],[122.170408,39.150479],[122.167351,39.158881],[122.123938,39.17254],[122.119493,39.186391],[122.124147,39.200191],[122.11734,39.214038],[122.144707,39.218898],[122.151723,39.23063],[122.160336,39.237845],[122.242924,39.267777],[122.251746,39.274988],[122.271403,39.317161],[122.292311,39.336817],[122.306828,39.331033],[122.308912,39.346177],[122.324332,39.345638],[122.343503,39.351518],[122.363647,39.365825],[122.371496,39.380618],[122.39935,39.391784],[122.413103,39.411762],[122.420605,39.413426],[122.451515,39.411811],[122.455682,39.403194],[122.498887,39.401921],[122.511876,39.413426],[122.532922,39.420133],[122.555706,39.43834],[122.581406,39.464175],[122.597382,39.471415],[122.604259,39.478116],[122.626764,39.483594],[122.636905,39.488924],[122.644823,39.499584],[122.649408,39.516696],[122.661633,39.522953],[122.682888,39.514789],[122.725467,39.531799],[122.730885,39.531066],[122.808889,39.559847],[122.810834,39.563999],[122.799234,39.575673],[122.810904,39.579971],[122.822018,39.565416],[122.838896,39.57284],[122.847371,39.581778],[122.842786,39.591838],[122.851955,39.601603],[122.860915,39.604777],[122.896966,39.605851],[122.904676,39.602482],[122.942184,39.60463],[122.948922,39.596525],[122.959411,39.598723],[122.972747,39.595012],[122.978721,39.602873],[122.979068,39.616395],[123.003726,39.635967],[123.019425,39.639383],[123.021369,39.643286],[123.010464,39.650703],[123.010742,39.655191],[123.02651,39.659679],[123.032553,39.644896],[123.046375,39.644164],[123.044917,39.651337],[123.035053,39.660996],[123.049015,39.666606],[123.052418,39.661045],[123.06256,39.666264],[123.077494,39.668557],[123.086454,39.659484],[123.08958,39.663386],[123.101388,39.661582],[123.099096,39.674703],[123.106528,39.675824],[123.131951,39.65685],[123.133201,39.645823],[123.14876,39.649824],[123.15529,39.663386],[123.166681,39.674068],[123.181754,39.673727],[123.188006,39.670167],[123.207802,39.670215],[123.21315,39.665972],[123.225862,39.676751],[123.224125,39.685724],[123.214887,39.688357],[123.215581,39.696744],[123.224611,39.698792],[123.249548,39.694452],[123.25309,39.689918],[123.272678,39.697524],[123.284,39.69494],[123.287056,39.704008],[123.270386,39.71483],[123.276082,39.729159],[123.263787,39.738321],[123.244269,39.744314],[123.246839,39.749284],[123.257674,39.747724],[123.263926,39.740855],[123.274415,39.737687],[123.282125,39.741927],[123.274692,39.753814],[123.289696,39.758588],[123.29949,39.753278],[123.324635,39.753376],[123.34061,39.756104],[123.344848,39.75055],[123.369576,39.746848],[123.38826,39.747481],[123.386038,39.733156],[123.392567,39.72375],[123.419518,39.730914],[123.440912,39.734033],[123.447927,39.732327],[123.458068,39.746117],[123.473766,39.74524],[123.479671,39.759222],[123.48488,39.762875],[123.493146,39.758345],[123.502176,39.762485],[123.503009,39.77023],[123.518846,39.770327]]],[[[122.567028,39.273909],[122.578836,39.267188],[122.574738,39.263607],[122.581545,39.255021],[122.591756,39.262724],[122.588977,39.270671],[122.609954,39.270671],[122.62211,39.265815],[122.648366,39.266011],[122.66462,39.256149],[122.678026,39.265422],[122.688584,39.268954],[122.67226,39.270181],[122.650241,39.278961],[122.641003,39.288133],[122.631765,39.288231],[122.628014,39.281708],[122.595437,39.278226],[122.575224,39.284259],[122.560082,39.299952],[122.555011,39.287496],[122.549246,39.289703],[122.546467,39.304561],[122.540841,39.308189],[122.524518,39.298432],[122.519169,39.305345],[122.51521,39.299952],[122.497567,39.30005],[122.50882,39.290536],[122.534451,39.285338],[122.554316,39.274743],[122.567028,39.273909]]],[[[122.383999,39.198374],[122.395252,39.21335],[122.401225,39.211288],[122.408588,39.218309],[122.379067,39.211141],[122.377747,39.205887],[122.362605,39.202941],[122.343781,39.203727],[122.347393,39.194937],[122.335863,39.186342],[122.316483,39.185016],[122.322109,39.177157],[122.320026,39.160601],[122.328986,39.157604],[122.337182,39.146155],[122.348505,39.146351],[122.363647,39.155147],[122.366981,39.165613],[122.362674,39.172147],[122.379901,39.174701],[122.383791,39.16802],[122.396155,39.161928],[122.403101,39.164974],[122.393098,39.173031],[122.390459,39.186882],[122.383374,39.191008],[122.383999,39.198374]]],[[[122.640517,39.225918],[122.651353,39.232593],[122.669135,39.235293],[122.67747,39.232103],[122.685736,39.234851],[122.705463,39.232054],[122.698655,39.215854],[122.691987,39.210994],[122.695947,39.206084],[122.714979,39.217082],[122.723522,39.214283],[122.728246,39.225967],[122.739151,39.224543],[122.753877,39.23387],[122.743388,39.239563],[122.741443,39.247857],[122.700531,39.245795],[122.690181,39.24182],[122.675178,39.240643],[122.654409,39.243195],[122.635724,39.241771],[122.628292,39.232593],[122.640517,39.225918]]],[[[122.762559,39.019349],[122.758878,39.025405],[122.751446,39.024026],[122.749501,39.035053],[122.740957,39.038301],[122.73026,39.035003],[122.72387,39.050063],[122.715673,39.042632],[122.704768,39.044256],[122.715951,39.035594],[122.720397,39.020482],[122.732761,39.013589],[122.737206,39.015214],[122.758322,39.009699],[122.762559,39.019349]]],[[[122.42512,39.174308],[122.411992,39.181922],[122.402684,39.179122],[122.425328,39.172097],[122.42512,39.174308]]],[[[121.826369,38.873868],[121.830815,38.864001],[121.84165,38.873227],[121.834079,38.883932],[121.840331,38.894092],[121.829564,38.896213],[121.825952,38.887828],[121.832343,38.882846],[121.823521,38.881317],[121.826369,38.873868]]],[[[122.418035,39.225574],[122.432552,39.224347],[122.4495,39.227341],[122.445333,39.234066],[122.434983,39.237011],[122.418035,39.225574]]],[[[122.423453,39.270524],[122.44561,39.254824],[122.456307,39.259142],[122.436858,39.268513],[122.423453,39.270524]]],[[[123.022689,39.546411],[123.004699,39.554521],[122.997267,39.551297],[122.984347,39.553691],[122.978999,39.561801],[122.961981,39.552323],[122.949269,39.533412],[122.944338,39.520606],[122.952951,39.521877],[122.970108,39.51826],[122.973094,39.499878],[122.994836,39.495624],[123.023731,39.516158],[123.036373,39.53307],[123.022689,39.546411]]],[[[122.308148,39.20024],[122.312802,39.205936],[122.30016,39.201861],[122.308148,39.20024]]],[[[122.296062,39.277097],[122.284253,39.280433],[122.28474,39.274841],[122.294881,39.266894],[122.303633,39.27489],[122.296062,39.277097]]],[[[123.06506,39.486479],[123.068533,39.508678],[123.058045,39.509607],[123.059364,39.493081],[123.06506,39.486479]]],[[[122.597104,39.206182],[122.612177,39.215412],[122.609815,39.225378],[122.599605,39.224789],[122.595506,39.213792],[122.587796,39.212172],[122.597104,39.206182]]],[[[122.51264,39.222973],[122.537021,39.224445],[122.548482,39.229992],[122.545703,39.237698],[122.534173,39.234753],[122.518683,39.239268],[122.501387,39.241182],[122.491871,39.231759],[122.502151,39.224249],[122.51264,39.222973]]],[[[122.825629,39.058675],[122.825768,39.051933],[122.818614,39.053557],[122.815419,39.04524],[122.823615,39.041353],[122.840425,39.047406],[122.836674,39.055279],[122.825629,39.058675]]],[[[122.809167,39.081649],[122.80243,39.081354],[122.805764,39.072942],[122.817364,39.068515],[122.819378,39.075599],[122.809167,39.081649]]],[[[121.831995,38.91781],[121.83658,38.912584],[121.841234,38.918106],[121.831995,38.91781]]],[[[122.872585,39.055279],[122.877864,39.066793],[122.865361,39.068957],[122.862305,39.06571],[122.850566,39.071319],[122.862791,39.051343],[122.870848,39.049325],[122.872585,39.055279]]],[[[121.476635,39.186784],[121.478163,39.19474],[121.466771,39.198964],[121.462048,39.205986],[121.445239,39.204218],[121.459548,39.201321],[121.476635,39.186784]]],[[[123.086524,39.426937],[123.08694,39.439515],[123.10368,39.44157],[123.088052,39.451259],[123.07541,39.451455],[123.053808,39.457668],[123.055336,39.444506],[123.068186,39.432223],[123.075757,39.434915],[123.077355,39.42865],[123.086524,39.426937]]],[[[121.493097,39.193807],[121.50303,39.202597],[121.50046,39.208244],[121.487401,39.204071],[121.493097,39.193807]]],[[[122.778118,39.23171],[122.770408,39.228863],[122.781661,39.218947],[122.798609,39.225231],[122.80493,39.223365],[122.809167,39.230679],[122.791524,39.229207],[122.778118,39.23171]]],[[[122.78173,39.079682],[122.789996,39.070138],[122.799512,39.072303],[122.790899,39.079337],[122.78173,39.079682]]],[[[123.16043,39.025503],[123.170085,39.027374],[123.18356,39.040368],[123.197244,39.047307],[123.205648,39.056952],[123.206413,39.067678],[123.200856,39.078108],[123.186338,39.083715],[123.187728,39.097043],[123.173974,39.103092],[123.171474,39.09847],[123.176197,39.087797],[123.170224,39.086273],[123.145635,39.091781],[123.140494,39.080075],[123.149663,39.064726],[123.142995,39.048538],[123.144037,39.038646],[123.154248,39.027275],[123.16043,39.025503]]],[[[123.004629,39.248887],[123.01616,39.257081],[123.012687,39.262577],[123.001156,39.263558],[122.988098,39.257965],[122.992057,39.251684],[123.004629,39.248887]]],[[[121.163437,39.084699],[121.178371,39.088535],[121.170105,39.096896],[121.159339,39.092027],[121.163437,39.084699]]],[[[122.343364,39.346226],[122.32329,39.343727],[122.319956,39.328289],[122.331765,39.325446],[122.340864,39.331377],[122.34906,39.330445],[122.354617,39.338189],[122.349338,39.348186],[122.343364,39.346226]]],[[[120.976449,38.960444],[120.978533,38.951131],[120.987076,38.946597],[120.991522,38.950589],[120.986173,38.958424],[120.976449,38.960444]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":210300,\"name\":\"鞍山市\",\"center\":[122.995632,41.110626],\"centroid\":[123.016394,40.718251],\"childrenNum\":7,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":2,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[123.533711,40.826996],[123.509608,40.816159],[123.487659,40.811411],[123.461611,40.809541],[123.442231,40.803114],[123.428964,40.803306],[123.411044,40.807095],[123.402639,40.802538],[123.394234,40.786515],[123.37541,40.775384],[123.357003,40.775959],[123.340055,40.771113],[123.315049,40.773464],[123.297614,40.76593],[123.287959,40.754506],[123.277054,40.749082],[123.258369,40.744569],[123.244685,40.731462],[123.230932,40.733959],[123.214262,40.732182],[123.1771,40.712684],[123.150288,40.725219],[123.136188,40.714461],[123.130075,40.72666],[123.100971,40.741305],[123.085412,40.755946],[123.073812,40.771641],[123.071798,40.780422],[123.074854,40.792081],[123.091386,40.802394],[123.107084,40.820091],[123.105834,40.824455],[123.084926,40.835866],[123.072979,40.839414],[123.054294,40.835099],[123.050265,40.845502],[123.055752,40.857772],[123.047973,40.871765],[123.055266,40.884175],[123.075063,40.898354],[123.073673,40.906879],[123.060406,40.923447],[123.089788,40.928378],[123.096387,40.934171],[123.097151,40.941973],[123.083884,40.961595],[123.087913,40.975519],[123.103125,40.984177],[123.126741,40.989343],[123.151052,40.983938],[123.161541,40.988434],[123.178212,40.989917],[123.192451,40.987621],[123.190923,40.996852],[123.201898,41.00173],[123.212247,41.017701],[123.199675,41.031278],[123.205162,41.039547],[123.214331,41.039833],[123.235517,41.048962],[123.226626,41.058996],[123.231835,41.066067],[123.214539,41.077867],[123.208357,41.078631],[123.213636,41.091145],[123.2119,41.098117],[123.203148,41.097687],[123.198494,41.103322],[123.183977,41.106043],[123.171891,41.098642],[123.162583,41.099024],[123.154595,41.105852],[123.145287,41.101841],[123.146746,41.10824],[123.142509,41.12576],[123.146815,41.133826],[123.140147,41.137214],[123.149385,41.154059],[123.13716,41.158018],[123.129381,41.174094],[123.119309,41.177242],[123.119031,41.184253],[123.109862,41.184634],[123.099304,41.178101],[123.075618,41.184634],[123.063254,41.183156],[123.057142,41.191501],[123.062282,41.199083],[123.038248,41.208427],[123.022411,41.206854],[123.005949,41.188497],[122.991363,41.18659],[122.987612,41.200465],[122.974484,41.202706],[122.962467,41.191358],[122.946144,41.196603],[122.909607,41.194219],[122.89898,41.181296],[122.895924,41.171519],[122.885505,41.166844],[122.875572,41.170612],[122.86675,41.163171],[122.875988,41.157732],[122.865291,41.144897],[122.858137,41.144945],[122.84876,41.129769],[122.856748,41.114971],[122.841605,41.106091],[122.831047,41.091575],[122.832437,41.082452],[122.824518,41.081831],[122.801388,41.093533],[122.800068,41.100266],[122.791594,41.096111],[122.784995,41.101316],[122.777215,41.099024],[122.760962,41.101221],[122.762837,41.104372],[122.704282,41.114828],[122.689556,41.122609],[122.690251,41.128289],[122.678581,41.140746],[122.639683,41.155204],[122.618706,41.169706],[122.598077,41.178911],[122.601897,41.185636],[122.59509,41.19584],[122.613149,41.202134],[122.622527,41.199845],[122.615303,41.207903],[122.612455,41.220534],[122.596201,41.245076],[122.560012,41.244123],[122.552371,41.249602],[122.554108,41.254843],[122.569528,41.268466],[122.576405,41.279991],[122.595229,41.293513],[122.588491,41.296846],[122.594673,41.303463],[122.60669,41.303463],[122.604328,41.318075],[122.620304,41.317504],[122.629542,41.330163],[122.658993,41.354806],[122.656423,41.358754],[122.642601,41.357612],[122.640795,41.363605],[122.64913,41.395889],[122.634057,41.405253],[122.631209,41.416801],[122.647116,41.424499],[122.643018,41.432528],[122.629751,41.429725],[122.634752,41.435331],[122.634543,41.448204],[122.625166,41.471426],[122.632598,41.474085],[122.636419,41.481728],[122.623916,41.488896],[122.636905,41.501663],[122.631418,41.506694],[122.634613,41.516943],[122.625027,41.520976],[122.604536,41.513005],[122.599118,41.514618],[122.59891,41.530227],[122.595159,41.534448],[122.582934,41.535207],[122.572446,41.540045],[122.566125,41.547776],[122.553483,41.550669],[122.520767,41.542559],[122.506597,41.537437],[122.4959,41.54346],[122.492983,41.551854],[122.500345,41.562238],[122.497706,41.57044],[122.487356,41.566316],[122.470547,41.556691],[122.452834,41.549341],[122.409213,41.548677],[122.368092,41.545404],[122.357118,41.541326],[122.330097,41.525483],[122.298284,41.514571],[122.283837,41.515899],[122.215557,41.485336],[122.193746,41.459602],[122.199303,41.45794],[122.192288,41.448964],[122.200345,41.441792],[122.198956,41.429203],[122.232436,41.387095],[122.245286,41.373877],[122.280294,41.353997],[122.277516,41.348908],[122.279461,41.334968],[122.271681,41.328355],[122.274737,41.319741],[122.26668,41.307414],[122.264388,41.291133],[122.254455,41.277896],[122.249801,41.260845],[122.250079,41.242551],[122.244591,41.236309],[122.231047,41.2304],[122.205138,41.223299],[122.215001,41.216578],[122.226948,41.201943],[122.254316,41.194076],[122.266194,41.194791],[122.274737,41.184539],[122.304814,41.190881],[122.338572,41.189975],[122.352533,41.198034],[122.343364,41.203707],[122.36191,41.206568],[122.369759,41.217579],[122.386499,41.2243],[122.388861,41.231639],[122.408866,41.251651],[122.423661,41.243266],[122.424633,41.253318],[122.457697,41.248078],[122.46374,41.256796],[122.480688,41.254938],[122.488745,41.250984],[122.463879,41.233307],[122.447208,41.21553],[122.435469,41.213003],[122.415326,41.212622],[122.411783,41.204041],[122.400461,41.196889],[122.384624,41.195602],[122.368926,41.183585],[122.366356,41.177147],[122.37233,41.162407],[122.386638,41.160165],[122.384416,41.135496],[122.396502,41.120461],[122.396502,41.10165],[122.412061,41.090954],[122.415881,41.084602],[122.414978,41.057085],[122.40956,41.038639],[122.415256,41.022482],[122.424008,41.012776],[122.41088,40.993074],[122.404698,40.991496],[122.396502,41.000869],[122.390111,40.997426],[122.390111,40.988052],[122.380665,40.989869],[122.368023,41.0002],[122.359966,41.001874],[122.3426,40.988817],[122.346629,40.980494],[122.36066,40.9881],[122.364411,40.985851],[122.358715,40.975327],[122.338988,40.968151],[122.328361,40.971117],[122.328917,40.96327],[122.350172,40.955422],[122.351213,40.951498],[122.338294,40.940872],[122.343364,40.927277],[122.331278,40.923974],[122.318845,40.927325],[122.327597,40.918276],[122.321345,40.909273],[122.335238,40.905777],[122.352672,40.916025],[122.363647,40.909082],[122.377609,40.909225],[122.377609,40.919425],[122.384138,40.924835],[122.394557,40.922298],[122.411505,40.927852],[122.433316,40.930676],[122.438595,40.940059],[122.449848,40.940298],[122.465059,40.935894],[122.488607,40.935751],[122.506111,40.929288],[122.503124,40.915355],[122.492566,40.90003],[122.493052,40.882881],[122.502429,40.879527],[122.502568,40.872963],[122.487634,40.8606],[122.484231,40.85159],[122.502568,40.847324],[122.51653,40.84809],[122.515002,40.839414],[122.523406,40.834188],[122.521531,40.826805],[122.542022,40.818701],[122.537993,40.800715],[122.541952,40.798557],[122.515974,40.766554],[122.556817,40.761082],[122.567583,40.758058],[122.581892,40.748506],[122.600785,40.751722],[122.639614,40.748698],[122.649825,40.739768],[122.651144,40.710571],[122.636558,40.696832],[122.622804,40.688136],[122.623082,40.671749],[122.636558,40.663819],[122.638642,40.659012],[122.647463,40.666606],[122.670941,40.67098],[122.669482,40.662569],[122.659758,40.658435],[122.653784,40.648099],[122.653228,40.638675],[122.645101,40.636704],[122.654617,40.628673],[122.650867,40.616937],[122.643573,40.611069],[122.625861,40.608423],[122.650589,40.593893],[122.651283,40.584702],[122.659549,40.583596],[122.662883,40.594615],[122.678929,40.592594],[122.691987,40.599956],[122.703657,40.598945],[122.720883,40.586387],[122.730677,40.582922],[122.743458,40.585136],[122.771103,40.577532],[122.797637,40.578879],[122.807431,40.570312],[122.811529,40.558181],[122.8166,40.5577],[122.829311,40.538006],[122.854872,40.532853],[122.86286,40.5277],[122.879461,40.52876],[122.897382,40.538632],[122.914678,40.537573],[122.936002,40.528856],[122.949825,40.515658],[122.969413,40.508961],[122.984347,40.486989],[122.999212,40.477012],[122.9865,40.463563],[122.99296,40.435161],[122.990182,40.427684],[122.971288,40.417795],[122.946213,40.416396],[122.936558,40.409304],[122.931974,40.396806],[122.934822,40.374024],[122.92982,40.358333],[122.932113,40.344715],[122.915859,40.331529],[122.891339,40.319548],[122.881337,40.306937],[122.88217,40.289829],[122.873002,40.26851],[122.874669,40.258597],[122.881823,40.249457],[122.884879,40.236204],[122.891131,40.234705],[122.896757,40.218739],[122.893979,40.20519],[122.890784,40.187378],[122.901967,40.184038],[122.927042,40.182247],[122.938711,40.174791],[122.939128,40.158956],[122.944963,40.143215],[122.960522,40.123546],[122.969552,40.118507],[122.988654,40.116859],[122.981707,40.103289],[122.993863,40.081863],[123.010256,40.07299],[123.028871,40.07042],[123.03165,40.062127],[123.053947,40.060139],[123.068672,40.042289],[123.073326,40.040349],[123.080342,40.055095],[123.103194,40.074736],[123.11792,40.063485],[123.127019,40.076287],[123.136327,40.079196],[123.141814,40.072699],[123.167862,40.067607],[123.172794,40.070469],[123.183838,40.064746],[123.191895,40.06494],[123.225723,40.049663],[123.242324,40.036759],[123.266704,40.039233],[123.281638,40.016961],[123.296572,40.01701],[123.299698,40.024483],[123.317341,40.025114],[123.338943,40.01963],[123.359504,40.002158],[123.380272,40.004779],[123.39215,40.01371],[123.404862,40.009245],[123.40632,40.013564],[123.422991,40.030548],[123.448483,40.037147],[123.457721,40.033023],[123.47717,40.031276],[123.472863,40.037438],[123.464111,40.038263],[123.458138,40.058102],[123.46814,40.041125],[123.471127,40.046898],[123.482935,40.050972],[123.476267,40.071875],[123.513776,40.090493],[123.513498,40.093789],[123.528849,40.103338],[123.546283,40.102514],[123.553577,40.09946],[123.563232,40.102514],[123.567955,40.114581],[123.575179,40.115745],[123.59046,40.130281],[123.606714,40.159392],[123.606297,40.168545],[123.599768,40.170336],[123.583306,40.166123],[123.571914,40.172854],[123.560523,40.187136],[123.576915,40.205383],[123.583653,40.221642],[123.589905,40.225948],[123.596156,40.243024],[123.611576,40.241332],[123.624149,40.249506],[123.635818,40.264787],[123.647696,40.260387],[123.673396,40.276826],[123.680342,40.290312],[123.711322,40.300172],[123.705487,40.314137],[123.708057,40.326215],[123.715976,40.333075],[123.71799,40.341721],[123.73855,40.363548],[123.75147,40.383292],[123.761681,40.402886],[123.747511,40.41765],[123.769252,40.443504],[123.766196,40.456957],[123.756818,40.471035],[123.76953,40.492386],[123.767307,40.499952],[123.738203,40.507805],[123.740843,40.511129],[123.737925,40.524955],[123.74112,40.532083],[123.735216,40.538632],[123.74119,40.549226],[123.738134,40.575703],[123.721324,40.586627],[123.717434,40.592498],[123.731396,40.603035],[123.748761,40.610732],[123.731118,40.648964],[123.725422,40.654205],[123.710488,40.657041],[123.694999,40.66603],[123.663811,40.675738],[123.636304,40.690875],[123.623176,40.693613],[123.592544,40.686118],[123.582889,40.686454],[123.577263,40.692316],[123.581014,40.704615],[123.570386,40.712156],[123.558925,40.713021],[123.560175,40.719937],[123.551423,40.722962],[123.556008,40.728485],[123.557328,40.747642],[123.567747,40.763482],[123.581083,40.768761],[123.585529,40.777543],[123.581222,40.786899],[123.55698,40.806088],[123.544894,40.821242],[123.533711,40.826996]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":210400,\"name\":\"抚顺市\",\"center\":[123.921109,41.875956],\"centroid\":[124.662356,41.837685],\"childrenNum\":7,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":3,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[123.74758,41.527238],[123.771683,41.539476],[123.783769,41.541563],[123.787242,41.523538],[123.781685,41.512673],[123.791966,41.506599],[123.807247,41.507406],[123.825307,41.513384],[123.849132,41.518746],[123.859551,41.52387],[123.86219,41.532029],[123.860315,41.550906],[123.867747,41.562381],[123.887891,41.566885],[123.921926,41.568449],[123.933874,41.548961],[123.946793,41.550147],[123.959505,41.55726],[123.975064,41.560674],[123.986664,41.559346],[124.025701,41.546116],[124.052929,41.530464],[124.061751,41.529942],[124.09794,41.535539],[124.105441,41.528377],[124.115513,41.505934],[124.128016,41.509826],[124.140727,41.517797],[124.14677,41.516896],[124.169067,41.521071],[124.178236,41.535397],[124.201992,41.534211],[124.209146,41.536203],[124.230193,41.549151],[124.237764,41.548866],[124.257352,41.540519],[124.282983,41.542986],[124.300348,41.537958],[124.309378,41.515804],[124.317991,41.507073],[124.31035,41.504511],[124.310211,41.495351],[124.332508,41.488754],[124.331049,41.479117],[124.341538,41.473942],[124.371198,41.473705],[124.384465,41.461739],[124.378769,41.455281],[124.357653,41.441602],[124.345775,41.42944],[124.345497,41.408057],[124.348553,41.39993],[124.36057,41.383814],[124.368975,41.3773],[124.388563,41.369407],[124.389396,41.354711],[124.393842,41.344198],[124.413569,41.338346],[124.420862,41.325832],[124.424127,41.311698],[124.438783,41.304177],[124.462816,41.303654],[124.466706,41.307366],[124.458718,41.319027],[124.464275,41.32864],[124.476222,41.333826],[124.488169,41.335159],[124.500394,41.331876],[124.517065,41.318932],[124.542696,41.311841],[124.567007,41.286895],[124.601946,41.26537],[124.632995,41.264322],[124.64001,41.259892],[124.640705,41.244695],[124.654041,41.239788],[124.671059,41.254986],[124.677311,41.264798],[124.711971,41.262274],[124.733226,41.269418],[124.763233,41.2748],[124.7765,41.281324],[124.784766,41.289466],[124.803104,41.298084],[124.834778,41.310413],[124.839918,41.321883],[124.864368,41.324405],[124.872564,41.327403],[124.867841,41.333731],[124.87187,41.347956],[124.86416,41.361132],[124.868675,41.368741],[124.856519,41.373401],[124.86027,41.384195],[124.856797,41.396602],[124.862354,41.399787],[124.853602,41.419937],[124.863257,41.425877],[124.860964,41.434001],[124.864437,41.443407],[124.881594,41.444832],[124.888332,41.457703],[124.880413,41.470619],[124.89889,41.47399],[124.905836,41.484102],[124.916463,41.492503],[124.920423,41.500335],[124.940149,41.504701],[124.957028,41.520074],[124.959668,41.510775],[124.969948,41.501806],[124.989189,41.496395],[124.998496,41.497155],[125.057399,41.47399],[125.067193,41.474465],[125.068235,41.493975],[125.09206,41.493358],[125.105049,41.495494],[125.123664,41.50247],[125.132764,41.501331],[125.154644,41.488326],[125.172009,41.485668],[125.17576,41.492409],[125.201947,41.500809],[125.20917,41.482868],[125.22216,41.480019],[125.249735,41.486997],[125.252028,41.498294],[125.258765,41.50508],[125.278562,41.494592],[125.295927,41.493026],[125.3226,41.496823],[125.328434,41.511297],[125.338437,41.516563],[125.353857,41.531745],[125.367332,41.538907],[125.373723,41.552613],[125.381641,41.562381],[125.399979,41.547491],[125.417136,41.544077],[125.426235,41.550526],[125.451588,41.550574],[125.462493,41.568354],[125.464021,41.579874],[125.452908,41.591343],[125.450268,41.611482],[125.455756,41.623278],[125.468189,41.632798],[125.47062,41.639807],[125.45909,41.643359],[125.452699,41.658747],[125.450616,41.6738],[125.431861,41.674841],[125.411857,41.691452],[125.376084,41.686199],[125.363026,41.677444],[125.348231,41.677775],[125.34448,41.672806],[125.330865,41.674415],[125.325031,41.670203],[125.316973,41.677539],[125.326073,41.697224],[125.324892,41.700678],[125.334547,41.717424],[125.331352,41.729437],[125.338506,41.741684],[125.332602,41.7527],[125.345174,41.760688],[125.335103,41.770141],[125.320238,41.772126],[125.317807,41.792586],[125.305929,41.801325],[125.294676,41.823287],[125.291273,41.847271],[125.298914,41.857324],[125.300928,41.868698],[125.296482,41.875728],[125.296413,41.887381],[125.303845,41.895683],[125.303915,41.911341],[125.307596,41.924496],[125.324614,41.929211],[125.351704,41.928268],[125.349273,41.937224],[125.317251,41.945237],[125.309263,41.95537],[125.291968,41.958809],[125.298288,41.974122],[125.317529,41.977137],[125.32121,41.981989],[125.337047,41.988018],[125.341701,42.000215],[125.351495,41.997437],[125.369902,42.002947],[125.363442,42.016648],[125.379905,42.032652],[125.401646,42.050065],[125.408522,42.062156],[125.417691,42.065778],[125.423665,42.078055],[125.421928,42.089483],[125.416163,42.09127],[125.412065,42.100674],[125.434987,42.102508],[125.445337,42.098464],[125.454783,42.102931],[125.456103,42.113508],[125.465202,42.111957],[125.4668,42.117926],[125.476941,42.120747],[125.477705,42.126433],[125.48993,42.136255],[125.462007,42.159417],[125.457978,42.160356],[125.444711,42.152182],[125.431514,42.151995],[125.406578,42.158665],[125.397478,42.166697],[125.388657,42.169045],[125.384281,42.177264],[125.36886,42.182805],[125.353579,42.177968],[125.356913,42.167167],[125.351912,42.154625],[125.359692,42.15176],[125.357677,42.146122],[125.346286,42.143303],[125.335936,42.145699],[125.330657,42.141847],[125.31871,42.142034],[125.30579,42.146545],[125.307874,42.159088],[125.314264,42.164396],[125.310375,42.170783],[125.312042,42.185246],[125.317529,42.195199],[125.313153,42.197641],[125.298497,42.175526],[125.284327,42.170924],[125.280507,42.174775],[125.291412,42.183274],[125.293009,42.19412],[125.307527,42.202335],[125.306763,42.209892],[125.296621,42.208484],[125.312667,42.220076],[125.299886,42.222563],[125.277659,42.231947],[125.28398,42.235279],[125.28905,42.247429],[125.275922,42.266751],[125.285021,42.272988],[125.299261,42.28949],[125.278701,42.296662],[125.27495,42.303692],[125.264947,42.306879],[125.263489,42.312971],[125.253834,42.307675],[125.242025,42.312689],[125.214172,42.300646],[125.173815,42.310721],[125.173815,42.319624],[125.181942,42.328338],[125.176455,42.337894],[125.176385,42.347402],[125.167564,42.351991],[125.185971,42.361076],[125.193264,42.360045],[125.202988,42.366226],[125.199238,42.377461],[125.185693,42.38261],[125.185901,42.391409],[125.192917,42.396604],[125.197501,42.407506],[125.186665,42.414758],[125.186457,42.427528],[125.1809,42.432813],[125.170134,42.43445],[125.140057,42.446375],[125.149295,42.451939],[125.149851,42.459045],[125.136098,42.471526],[125.107966,42.478864],[125.099006,42.478023],[125.078446,42.464842],[125.079904,42.457315],[125.063164,42.450536],[125.057746,42.445533],[125.036214,42.438098],[125.03663,42.420231],[125.041562,42.414618],[125.036491,42.405541],[125.024336,42.401891],[125.004748,42.401845],[124.997732,42.392579],[125.005859,42.378444],[124.990717,42.37292],[124.985299,42.379146],[124.974255,42.368145],[124.956959,42.371329],[124.960988,42.384436],[124.952236,42.389116],[124.944734,42.400768],[124.931259,42.40278],[124.925077,42.396884],[124.895278,42.398242],[124.886248,42.41022],[124.864021,42.407787],[124.853185,42.412278],[124.821719,42.418266],[124.820399,42.411296],[124.800395,42.415881],[124.786016,42.409237],[124.775597,42.400347],[124.772055,42.391362],[124.777612,42.380551],[124.7856,42.382376],[124.787822,42.365523],[124.797061,42.359718],[124.787058,42.33958],[124.774625,42.336957],[124.763511,42.343093],[124.751494,42.338316],[124.732462,42.335693],[124.725586,42.324497],[124.712944,42.325106],[124.695995,42.317141],[124.679394,42.319577],[124.661126,42.315641],[124.647859,42.316344],[124.625701,42.327261],[124.62584,42.334475],[124.634523,42.345903],[124.628202,42.348432],[124.605141,42.345294],[124.59361,42.351008],[124.574648,42.351476],[124.569508,42.341641],[124.577843,42.321076],[124.564784,42.303739],[124.561033,42.282318],[124.553323,42.270034],[124.536722,42.257888],[124.516023,42.236733],[124.52797,42.202476],[124.536514,42.192899],[124.543946,42.176982],[124.561172,42.16402],[124.560061,42.155048],[124.543043,42.137477],[124.541446,42.131039],[124.550128,42.11896],[124.520121,42.087884],[124.497408,42.079654],[124.447604,42.067801],[124.423501,42.052182],[124.414124,42.050112],[124.408637,42.044041],[124.383978,42.033923],[124.366752,42.032888],[124.369044,42.022391],[124.35154,42.012222],[124.341955,42.009397],[124.33737,42.016601],[124.313267,42.015235],[124.294721,42.006054],[124.279926,42.00742],[124.283816,42.013117],[124.281177,42.020885],[124.285275,42.027428],[124.275689,42.036935],[124.275828,42.043147],[124.268604,42.046018],[124.264645,42.064602],[124.25374,42.067284],[124.234291,42.058157],[124.207618,42.055334],[124.191572,42.058957],[124.174416,42.055711],[124.164622,42.056793],[124.140797,42.068083],[124.095231,42.073446],[124.07988,42.065543],[124.067446,42.064367],[124.03994,42.045124],[124.034175,42.018907],[124.024381,42.011657],[124.004307,42.01161],[123.985969,42.005819],[123.954781,42.005631],[123.943529,42.008738],[123.950336,42.018625],[123.940194,42.023803],[123.92658,42.018766],[123.905742,42.031146],[123.880667,42.033123],[123.875457,42.028746],[123.842811,42.022909],[123.813915,42.007655],[123.80169,41.994093],[123.790021,41.989242],[123.774392,41.969175],[123.763348,41.972614],[123.734383,41.967196],[123.727089,41.957961],[123.732507,41.954804],[123.723408,41.946887],[123.732785,41.930342],[123.731049,41.923082],[123.741676,41.919876],[123.733271,41.915773],[123.728617,41.907285],[123.728826,41.897428],[123.715628,41.891815],[123.720421,41.886909],[123.739106,41.880399],[123.739801,41.86379],[123.719588,41.849064],[123.706668,41.84255],[123.67673,41.837263],[123.673813,41.832258],[123.681176,41.825365],[123.685413,41.811386],[123.676522,41.803876],[123.669506,41.803687],[123.665547,41.795893],[123.669715,41.785215],[123.69222,41.78342],[123.691109,41.779167],[123.714031,41.778033],[123.716809,41.775103],[123.745844,41.783467],[123.7605,41.779215],[123.761889,41.788665],[123.755638,41.794145],[123.768627,41.799389],[123.780157,41.796838],[123.786687,41.785452],[123.772794,41.773449],[123.789048,41.766786],[123.781824,41.752133],[123.790021,41.7388],[123.801065,41.728917],[123.801204,41.718512],[123.811553,41.708815],[123.808567,41.697272],[123.790507,41.685631],[123.79648,41.680757],[123.779115,41.65709],[123.76953,41.657326],[123.764459,41.6462],[123.752998,41.642932],[123.749872,41.636824],[123.759597,41.619441],[123.767446,41.61873],[123.770711,41.60826],[123.782102,41.606602],[123.791827,41.598499],[123.776337,41.58741],[123.760222,41.584898],[123.721741,41.568307],[123.725561,41.556549],[123.735633,41.55138],[123.729868,41.543175],[123.73987,41.54033],[123.74758,41.527238]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":210500,\"name\":\"本溪市\",\"center\":[123.770519,41.297909],\"centroid\":[124.574237,41.231499],\"childrenNum\":6,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":4,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[123.591502,41.494022],[123.601366,41.48676],[123.607617,41.467675],[123.644362,41.458178],[123.652697,41.449439],[123.652836,41.438609],[123.631164,41.416801],[123.633943,41.406869],[123.642556,41.392562],[123.652628,41.386952],[123.650058,41.378537],[123.655475,41.37245],[123.652628,41.353236],[123.658254,41.345958],[123.654642,41.327688],[123.661796,41.324928],[123.663324,41.316077],[123.65617,41.298655],[123.657768,41.286895],[123.664019,41.283705],[123.665547,41.269133],[123.670201,41.260702],[123.636374,41.246887],[123.619495,41.246601],[123.616022,41.254795],[123.600463,41.24217],[123.59692,41.23426],[123.608798,41.22001],[123.598934,41.206663],[123.619286,41.202849],[123.624913,41.189308],[123.63422,41.181248],[123.639013,41.169324],[123.638458,41.159259],[123.649085,41.157446],[123.664644,41.139123],[123.655267,41.129148],[123.651308,41.112775],[123.660477,41.095873],[123.660685,41.086846],[123.671104,41.071657],[123.679648,41.069889],[123.68972,41.059665],[123.685344,41.0503],[123.670757,41.043227],[123.65999,41.041602],[123.660824,41.017797],[123.650127,41.016314],[123.647349,41.006943],[123.652072,40.975423],[123.656587,40.973796],[123.648043,40.964658],[123.657976,40.952647],[123.646515,40.930724],[123.632415,40.923926],[123.623662,40.912242],[123.625191,40.906879],[123.619425,40.896629],[123.608659,40.89227],[123.604908,40.874017],[123.582264,40.857485],[123.597684,40.856958],[123.623593,40.851637],[123.638805,40.845071],[123.663741,40.826757],[123.671868,40.825798],[123.686594,40.833853],[123.695346,40.815344],[123.71417,40.820475],[123.722505,40.830113],[123.732646,40.830928],[123.737578,40.846892],[123.743135,40.852213],[123.767724,40.849193],[123.772864,40.855664],[123.791688,40.850871],[123.80169,40.857293],[123.814054,40.855088],[123.824543,40.862613],[123.835309,40.854226],[123.852257,40.852261],[123.872818,40.839797],[123.879208,40.842338],[123.895323,40.840181],[123.897962,40.831503],[123.915953,40.835003],[123.931442,40.826613],[123.938666,40.829058],[123.955545,40.846125],[123.974577,40.85274],[123.97298,40.857293],[123.980621,40.867692],[123.996597,40.861846],[124.016393,40.859881],[124.031257,40.865632],[124.043413,40.865632],[124.084395,40.861175],[124.093841,40.857629],[124.094189,40.848857],[124.10308,40.846461],[124.11593,40.853794],[124.134406,40.853555],[124.143506,40.863044],[124.141283,40.879911],[124.14934,40.887432],[124.149132,40.89318],[124.13142,40.909513],[124.132184,40.925075],[124.136212,40.935272],[124.147534,40.951594],[124.147951,40.957336],[124.129544,40.967002],[124.127321,40.98456],[124.118014,40.994126],[124.107039,41.016171],[124.093564,41.03601],[124.123223,41.039881],[124.120167,41.04662],[124.13517,41.049726],[124.146006,41.055078],[124.151007,41.053023],[124.174485,41.033046],[124.184696,41.027119],[124.200255,41.033381],[124.208938,41.045999],[124.216023,41.041841],[124.232068,41.042223],[124.237833,41.052354],[124.235888,41.064634],[124.241723,41.073042],[124.237347,41.080781],[124.250961,41.089855],[124.256588,41.098499],[124.268535,41.100982],[124.285483,41.100122],[124.295555,41.096064],[124.2975,41.089091],[124.291874,41.064921],[124.297222,41.053931],[124.31167,41.056607],[124.338621,41.072135],[124.35675,41.065685],[124.365502,41.056177],[124.375365,41.053023],[124.405511,41.071609],[124.420515,41.077198],[124.466359,41.061481],[124.475458,41.061767],[124.503867,41.0503],[124.510466,41.049439],[124.518037,41.062341],[124.53957,41.074666],[124.541446,41.089091],[124.56798,41.100457],[124.585136,41.102032],[124.591388,41.097878],[124.613893,41.091145],[124.633967,41.09635],[124.638204,41.103226],[124.650846,41.091622],[124.671267,41.095729],[124.672448,41.113444],[124.681131,41.126857],[124.702386,41.1249],[124.719543,41.133587],[124.71857,41.139409],[124.736005,41.154822],[124.74955,41.151721],[124.764623,41.13793],[124.79463,41.133158],[124.814009,41.143561],[124.836931,41.137882],[124.855824,41.138646],[124.892361,41.122514],[124.912018,41.118265],[124.921326,41.119363],[124.948624,41.115114],[124.960293,41.116976],[124.97995,41.111056],[124.997385,41.098451],[125.005998,41.098594],[125.016487,41.110579],[125.022877,41.109624],[125.051425,41.116929],[125.083516,41.097592],[125.103521,41.089999],[125.13707,41.098308],[125.146517,41.102701],[125.169022,41.106903],[125.197084,41.101603],[125.217784,41.113205],[125.230912,41.113491],[125.264531,41.096875],[125.27488,41.1006],[125.299886,41.08699],[125.307179,41.079061],[125.309263,41.064921],[125.317251,41.056321],[125.312181,41.045186],[125.326142,41.046333],[125.333922,41.036966],[125.350245,41.038352],[125.356288,41.031039],[125.346911,41.024585],[125.341562,41.010242],[125.34705,41.008951],[125.35469,40.998478],[125.390254,40.999674],[125.387545,41.015119],[125.395881,41.016793],[125.408106,41.012776],[125.432556,41.011342],[125.433667,41.026019],[125.443669,41.031517],[125.457006,41.025446],[125.46159,41.016984],[125.460618,41.007086],[125.467078,40.993457],[125.456659,40.980733],[125.45652,40.969108],[125.46555,40.962361],[125.495973,40.953364],[125.503753,40.957289],[125.502016,40.967385],[125.489513,40.975327],[125.490764,40.982407],[125.502364,40.987908],[125.523063,40.988721],[125.529592,40.986043],[125.531954,40.976858],[125.524522,40.957528],[125.502433,40.944414],[125.501113,40.938479],[125.520979,40.91229],[125.530912,40.908076],[125.547999,40.912242],[125.555501,40.926894],[125.572172,40.931969],[125.585925,40.918898],[125.591829,40.924596],[125.589398,40.931107],[125.614473,40.942069],[125.635659,40.941973],[125.64448,40.950254],[125.647814,40.967433],[125.662748,40.977432],[125.674001,40.974418],[125.683934,40.986282],[125.679141,40.998048],[125.682822,41.017079],[125.689074,41.026019],[125.706508,41.033763],[125.715816,41.046954],[125.726374,41.055222],[125.732487,41.076195],[125.739363,41.089378],[125.731306,41.094488],[125.712274,41.095634],[125.713802,41.105232],[125.724777,41.118361],[125.734848,41.125807],[125.747838,41.124805],[125.758048,41.130342],[125.765619,41.148428],[125.791111,41.166319],[125.783193,41.172043],[125.775066,41.17066],[125.738252,41.178625],[125.735404,41.194315],[125.748879,41.220106],[125.758048,41.23183],[125.749574,41.245505],[125.71922,41.243742],[125.71276,41.248411],[125.694909,41.244552],[125.691574,41.258035],[125.68317,41.274848],[125.67546,41.27761],[125.664832,41.268514],[125.647745,41.264179],[125.638645,41.283943],[125.642257,41.295799],[125.620099,41.318313],[125.631352,41.322168],[125.639271,41.3314],[125.637187,41.344436],[125.621072,41.361179],[125.610375,41.365079],[125.589606,41.35942],[125.579187,41.36741],[125.586411,41.380201],[125.581549,41.395556],[125.557863,41.397838],[125.548277,41.402164],[125.552723,41.409435],[125.54668,41.41932],[125.540081,41.41989],[125.534316,41.428823],[125.54022,41.436471],[125.535496,41.447112],[125.540845,41.459033],[125.539178,41.469764],[125.532162,41.47926],[125.516464,41.478642],[125.517645,41.489466],[125.505837,41.503324],[125.493473,41.509256],[125.495487,41.522257],[125.504517,41.524819],[125.507365,41.533642],[125.492848,41.536583],[125.477219,41.548297],[125.476802,41.560057],[125.462493,41.568354],[125.451588,41.550574],[125.426235,41.550526],[125.417136,41.544077],[125.399979,41.547491],[125.381641,41.562381],[125.373723,41.552613],[125.367332,41.538907],[125.353857,41.531745],[125.338437,41.516563],[125.328434,41.511297],[125.3226,41.496823],[125.295927,41.493026],[125.278562,41.494592],[125.258765,41.50508],[125.252028,41.498294],[125.249735,41.486997],[125.22216,41.480019],[125.20917,41.482868],[125.201947,41.500809],[125.17576,41.492409],[125.172009,41.485668],[125.154644,41.488326],[125.132764,41.501331],[125.123664,41.50247],[125.105049,41.495494],[125.09206,41.493358],[125.068235,41.493975],[125.067193,41.474465],[125.057399,41.47399],[124.998496,41.497155],[124.989189,41.496395],[124.969948,41.501806],[124.959668,41.510775],[124.957028,41.520074],[124.940149,41.504701],[124.920423,41.500335],[124.916463,41.492503],[124.905836,41.484102],[124.89889,41.47399],[124.880413,41.470619],[124.888332,41.457703],[124.881594,41.444832],[124.864437,41.443407],[124.860964,41.434001],[124.863257,41.425877],[124.853602,41.419937],[124.862354,41.399787],[124.856797,41.396602],[124.86027,41.384195],[124.856519,41.373401],[124.868675,41.368741],[124.86416,41.361132],[124.87187,41.347956],[124.867841,41.333731],[124.872564,41.327403],[124.864368,41.324405],[124.839918,41.321883],[124.834778,41.310413],[124.803104,41.298084],[124.784766,41.289466],[124.7765,41.281324],[124.763233,41.2748],[124.733226,41.269418],[124.711971,41.262274],[124.677311,41.264798],[124.671059,41.254986],[124.654041,41.239788],[124.640705,41.244695],[124.64001,41.259892],[124.632995,41.264322],[124.601946,41.26537],[124.567007,41.286895],[124.542696,41.311841],[124.517065,41.318932],[124.500394,41.331876],[124.488169,41.335159],[124.476222,41.333826],[124.464275,41.32864],[124.458718,41.319027],[124.466706,41.307366],[124.462816,41.303654],[124.438783,41.304177],[124.424127,41.311698],[124.420862,41.325832],[124.413569,41.338346],[124.393842,41.344198],[124.389396,41.354711],[124.388563,41.369407],[124.368975,41.3773],[124.36057,41.383814],[124.348553,41.39993],[124.345497,41.408057],[124.345775,41.42944],[124.357653,41.441602],[124.378769,41.455281],[124.384465,41.461739],[124.371198,41.473705],[124.341538,41.473942],[124.331049,41.479117],[124.332508,41.488754],[124.310211,41.495351],[124.31035,41.504511],[124.317991,41.507073],[124.309378,41.515804],[124.300348,41.537958],[124.282983,41.542986],[124.257352,41.540519],[124.237764,41.548866],[124.230193,41.549151],[124.209146,41.536203],[124.201992,41.534211],[124.178236,41.535397],[124.169067,41.521071],[124.14677,41.516896],[124.140727,41.517797],[124.128016,41.509826],[124.115513,41.505934],[124.105441,41.528377],[124.09794,41.535539],[124.061751,41.529942],[124.052929,41.530464],[124.025701,41.546116],[123.986664,41.559346],[123.975064,41.560674],[123.959505,41.55726],[123.946793,41.550147],[123.933874,41.548961],[123.921926,41.568449],[123.887891,41.566885],[123.867747,41.562381],[123.860315,41.550906],[123.86219,41.532029],[123.859551,41.52387],[123.849132,41.518746],[123.825307,41.513384],[123.807247,41.507406],[123.791966,41.506599],[123.781685,41.512673],[123.787242,41.523538],[123.783769,41.541563],[123.771683,41.539476],[123.74758,41.527238],[123.745635,41.520596],[123.727437,41.517133],[123.71924,41.510348],[123.703403,41.515662],[123.702917,41.520786],[123.692359,41.526479],[123.683815,41.519742],[123.677703,41.528709],[123.664714,41.527048],[123.646584,41.518651],[123.629567,41.523822],[123.625816,41.516896],[123.615813,41.513479],[123.61623,41.508639],[123.603866,41.506029],[123.605533,41.502423],[123.591502,41.494022]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":210600,\"name\":\"丹东市\",\"center\":[124.383044,40.124296],\"centroid\":[124.40518,40.544775],\"childrenNum\":6,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":5,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[123.518846,39.770327],[123.535586,39.775343],[123.534545,39.788345],[123.54156,39.786057],[123.548298,39.774905],[123.542949,39.762924],[123.546631,39.756347],[123.565454,39.76156],[123.570108,39.774077],[123.576638,39.780993],[123.586432,39.771301],[123.612549,39.774954],[123.64207,39.79633],[123.646307,39.802513],[123.645126,39.823881],[123.658462,39.831375],[123.661866,39.825585],[123.674924,39.826752],[123.687983,39.808257],[123.697013,39.806943],[123.73605,39.817506],[123.777657,39.822129],[123.795022,39.822762],[123.812318,39.831278],[123.828919,39.831424],[123.851007,39.825828],[123.871359,39.822811],[123.910813,39.819501],[123.944015,39.819404],[123.951725,39.817652],[123.967006,39.808063],[124.002709,39.800371],[124.052999,39.810253],[124.071683,39.817944],[124.103288,39.823395],[124.107247,39.818868],[124.095508,39.792289],[124.099259,39.777535],[124.144756,39.745435],[124.150799,39.745776],[124.164066,39.778412],[124.166497,39.827239],[124.173304,39.841302],[124.189905,39.848453],[124.213522,39.86329],[124.214842,39.892418],[124.224011,39.905398],[124.227067,39.915362],[124.241167,39.928095],[124.268465,39.934751],[124.286456,39.931885],[124.296111,39.9468],[124.288887,39.948063],[124.288678,39.963024],[124.297222,39.968755],[124.315143,39.968852],[124.328201,39.979583],[124.350429,39.989148],[124.349318,39.972348],[124.366474,40.000217],[124.371892,40.021377],[124.36064,40.039815],[124.344316,40.043308],[124.336606,40.049954],[124.336954,40.061449],[124.350776,40.083851],[124.377657,40.107409],[124.388771,40.113225],[124.405928,40.134738],[124.419751,40.1437],[124.427947,40.144475],[124.445729,40.164041],[124.445868,40.168593],[124.45719,40.177357],[124.490114,40.183989],[124.492059,40.189895],[124.506924,40.20519],[124.514842,40.220433],[124.524567,40.224884],[124.527206,40.231076],[124.548183,40.238429],[124.558255,40.247668],[124.588331,40.267543],[124.593541,40.273103],[124.620909,40.290602],[124.649735,40.294566],[124.705512,40.315973],[124.727461,40.325684],[124.735032,40.344039],[124.739269,40.371707],[124.756148,40.384692],[124.800603,40.40583],[124.833875,40.423102],[124.862701,40.441478],[124.881525,40.456861],[124.897362,40.478988],[124.906947,40.484724],[124.913268,40.481784],[124.914102,40.467419],[124.922298,40.458838],[124.940983,40.4558],[124.961821,40.460525],[124.978006,40.468432],[124.985855,40.475132],[124.995857,40.477157],[125.012458,40.470987],[125.024614,40.476385],[125.024891,40.464575],[125.044271,40.466455],[125.043021,40.48376],[125.032046,40.484724],[125.031143,40.49229],[125.017042,40.491422],[125.004609,40.496241],[125.001831,40.513394],[125.017945,40.536321],[125.035449,40.542966],[125.047744,40.550478],[125.07664,40.56184],[125.093171,40.563669],[125.113662,40.569301],[125.124915,40.576665],[125.150962,40.589563],[125.181734,40.611309],[125.190069,40.615158],[125.214866,40.620689],[125.237927,40.618092],[125.262725,40.620208],[125.269601,40.630116],[125.273213,40.648916],[125.279673,40.655166],[125.305373,40.661175],[125.311416,40.658868],[125.329268,40.64382],[125.34191,40.64406],[125.353649,40.650551],[125.375737,40.658291],[125.383725,40.656512],[125.407272,40.631895],[125.422553,40.635502],[125.42172,40.649013],[125.414357,40.661319],[125.418872,40.673191],[125.427902,40.676507],[125.453672,40.676651],[125.458951,40.69198],[125.460201,40.707161],[125.479233,40.72349],[125.495626,40.728773],[125.505489,40.726564],[125.536538,40.726036],[125.547999,40.733719],[125.551403,40.745866],[125.551056,40.761706],[125.572658,40.780566],[125.585439,40.788434],[125.597177,40.788962],[125.595997,40.775384],[125.604471,40.767369],[125.617252,40.763674],[125.657052,40.769241],[125.679002,40.768329],[125.688101,40.775959],[125.675946,40.787907],[125.640729,40.798317],[125.636492,40.80791],[125.648092,40.826037],[125.673306,40.835003],[125.68956,40.850966],[125.688588,40.857053],[125.699423,40.85897],[125.707759,40.866974],[125.705605,40.874257],[125.692894,40.891791],[125.6831,40.901132],[125.666082,40.90798],[125.655455,40.915977],[125.64712,40.908268],[125.625448,40.906927],[125.610861,40.90252],[125.587453,40.892079],[125.576964,40.898976],[125.585925,40.918898],[125.572172,40.931969],[125.555501,40.926894],[125.547999,40.912242],[125.530912,40.908076],[125.520979,40.91229],[125.501113,40.938479],[125.502433,40.944414],[125.524522,40.957528],[125.531954,40.976858],[125.529592,40.986043],[125.523063,40.988721],[125.502364,40.987908],[125.490764,40.982407],[125.489513,40.975327],[125.502016,40.967385],[125.503753,40.957289],[125.495973,40.953364],[125.46555,40.962361],[125.45652,40.969108],[125.456659,40.980733],[125.467078,40.993457],[125.460618,41.007086],[125.46159,41.016984],[125.457006,41.025446],[125.443669,41.031517],[125.433667,41.026019],[125.432556,41.011342],[125.408106,41.012776],[125.395881,41.016793],[125.387545,41.015119],[125.390254,40.999674],[125.35469,40.998478],[125.34705,41.008951],[125.341562,41.010242],[125.346911,41.024585],[125.356288,41.031039],[125.350245,41.038352],[125.333922,41.036966],[125.326142,41.046333],[125.312181,41.045186],[125.317251,41.056321],[125.309263,41.064921],[125.307179,41.079061],[125.299886,41.08699],[125.27488,41.1006],[125.264531,41.096875],[125.230912,41.113491],[125.217784,41.113205],[125.197084,41.101603],[125.169022,41.106903],[125.146517,41.102701],[125.13707,41.098308],[125.103521,41.089999],[125.083516,41.097592],[125.051425,41.116929],[125.022877,41.109624],[125.016487,41.110579],[125.005998,41.098594],[124.997385,41.098451],[124.97995,41.111056],[124.960293,41.116976],[124.948624,41.115114],[124.921326,41.119363],[124.912018,41.118265],[124.892361,41.122514],[124.855824,41.138646],[124.836931,41.137882],[124.814009,41.143561],[124.79463,41.133158],[124.764623,41.13793],[124.74955,41.151721],[124.736005,41.154822],[124.71857,41.139409],[124.719543,41.133587],[124.702386,41.1249],[124.681131,41.126857],[124.672448,41.113444],[124.671267,41.095729],[124.650846,41.091622],[124.638204,41.103226],[124.633967,41.09635],[124.613893,41.091145],[124.591388,41.097878],[124.585136,41.102032],[124.56798,41.100457],[124.541446,41.089091],[124.53957,41.074666],[124.518037,41.062341],[124.510466,41.049439],[124.503867,41.0503],[124.475458,41.061767],[124.466359,41.061481],[124.420515,41.077198],[124.405511,41.071609],[124.375365,41.053023],[124.365502,41.056177],[124.35675,41.065685],[124.338621,41.072135],[124.31167,41.056607],[124.297222,41.053931],[124.291874,41.064921],[124.2975,41.089091],[124.295555,41.096064],[124.285483,41.100122],[124.268535,41.100982],[124.256588,41.098499],[124.250961,41.089855],[124.237347,41.080781],[124.241723,41.073042],[124.235888,41.064634],[124.237833,41.052354],[124.232068,41.042223],[124.216023,41.041841],[124.208938,41.045999],[124.200255,41.033381],[124.184696,41.027119],[124.174485,41.033046],[124.151007,41.053023],[124.146006,41.055078],[124.13517,41.049726],[124.120167,41.04662],[124.123223,41.039881],[124.093564,41.03601],[124.107039,41.016171],[124.118014,40.994126],[124.127321,40.98456],[124.129544,40.967002],[124.147951,40.957336],[124.147534,40.951594],[124.136212,40.935272],[124.132184,40.925075],[124.13142,40.909513],[124.149132,40.89318],[124.14934,40.887432],[124.141283,40.879911],[124.143506,40.863044],[124.134406,40.853555],[124.11593,40.853794],[124.10308,40.846461],[124.094189,40.848857],[124.093841,40.857629],[124.084395,40.861175],[124.043413,40.865632],[124.031257,40.865632],[124.016393,40.859881],[123.996597,40.861846],[123.980621,40.867692],[123.97298,40.857293],[123.974577,40.85274],[123.955545,40.846125],[123.938666,40.829058],[123.931442,40.826613],[123.915953,40.835003],[123.897962,40.831503],[123.895323,40.840181],[123.879208,40.842338],[123.872818,40.839797],[123.852257,40.852261],[123.835309,40.854226],[123.824543,40.862613],[123.814054,40.855088],[123.80169,40.857293],[123.791688,40.850871],[123.772864,40.855664],[123.767724,40.849193],[123.743135,40.852213],[123.737578,40.846892],[123.732646,40.830928],[123.722505,40.830113],[123.71417,40.820475],[123.695346,40.815344],[123.686594,40.833853],[123.671868,40.825798],[123.663741,40.826757],[123.638805,40.845071],[123.623593,40.851637],[123.597684,40.856958],[123.582264,40.857485],[123.574971,40.856814],[123.544477,40.861079],[123.537531,40.851446],[123.539476,40.837353],[123.533711,40.826996],[123.544894,40.821242],[123.55698,40.806088],[123.581222,40.786899],[123.585529,40.777543],[123.581083,40.768761],[123.567747,40.763482],[123.557328,40.747642],[123.556008,40.728485],[123.551423,40.722962],[123.560175,40.719937],[123.558925,40.713021],[123.570386,40.712156],[123.581014,40.704615],[123.577263,40.692316],[123.582889,40.686454],[123.592544,40.686118],[123.623176,40.693613],[123.636304,40.690875],[123.663811,40.675738],[123.694999,40.66603],[123.710488,40.657041],[123.725422,40.654205],[123.731118,40.648964],[123.748761,40.610732],[123.731396,40.603035],[123.717434,40.592498],[123.721324,40.586627],[123.738134,40.575703],[123.74119,40.549226],[123.735216,40.538632],[123.74112,40.532083],[123.737925,40.524955],[123.740843,40.511129],[123.738203,40.507805],[123.767307,40.499952],[123.76953,40.492386],[123.756818,40.471035],[123.766196,40.456957],[123.769252,40.443504],[123.747511,40.41765],[123.761681,40.402886],[123.75147,40.383292],[123.73855,40.363548],[123.71799,40.341721],[123.715976,40.333075],[123.708057,40.326215],[123.705487,40.314137],[123.711322,40.300172],[123.680342,40.290312],[123.673396,40.276826],[123.647696,40.260387],[123.635818,40.264787],[123.624149,40.249506],[123.611576,40.241332],[123.596156,40.243024],[123.589905,40.225948],[123.583653,40.221642],[123.576915,40.205383],[123.560523,40.187136],[123.571914,40.172854],[123.583306,40.166123],[123.599768,40.170336],[123.606297,40.168545],[123.606714,40.159392],[123.59046,40.130281],[123.575179,40.115745],[123.567955,40.114581],[123.563232,40.102514],[123.553577,40.09946],[123.546283,40.102514],[123.528849,40.103338],[123.513498,40.093789],[123.513776,40.090493],[123.476267,40.071875],[123.482935,40.050972],[123.471127,40.046898],[123.46814,40.041125],[123.458138,40.058102],[123.464111,40.038263],[123.472863,40.037438],[123.47717,40.031276],[123.457721,40.033023],[123.448483,40.037147],[123.422991,40.030548],[123.40632,40.013564],[123.404862,40.009245],[123.407918,39.9991],[123.401041,39.993178],[123.401666,39.981817],[123.377077,39.971523],[123.384996,39.954864],[123.393331,39.954378],[123.391247,39.935918],[123.399096,39.93446],[123.397846,39.926005],[123.407362,39.9348],[123.420143,39.933877],[123.437161,39.922701],[123.456749,39.929164],[123.470571,39.924887],[123.490506,39.898058],[123.480782,39.891446],[123.474253,39.881284],[123.476614,39.868299],[123.483074,39.859934],[123.500162,39.851907],[123.504399,39.843832],[123.501273,39.828358],[123.504468,39.820182],[123.514679,39.814342],[123.518846,39.79857],[123.518846,39.770327]]],[[[123.825654,39.786252],[123.825446,39.796136],[123.808636,39.791462],[123.825654,39.786252]]],[[[123.716531,39.74524],[123.725631,39.748991],[123.752373,39.749332],[123.75668,39.754107],[123.748275,39.763265],[123.730632,39.765944],[123.720143,39.76307],[123.721324,39.758442],[123.711183,39.749186],[123.716531,39.74524]]],[[[124.811717,40.404286],[124.828943,40.415769],[124.796505,40.400184],[124.811717,40.404286]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":210700,\"name\":\"锦州市\",\"center\":[121.135742,41.119269],\"centroid\":[121.618541,41.461822],\"childrenNum\":7,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":6,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[121.555125,40.849624],[121.56742,40.859162],[121.571032,40.867932],[121.584507,40.885708],[121.59708,40.896581],[121.618682,40.907837],[121.628754,40.908076],[121.647786,40.937761],[121.650981,40.952694],[121.663553,40.959298],[121.662164,40.969873],[121.666818,40.98566],[121.673417,40.991974],[121.676334,41.007756],[121.667165,41.027167],[121.661261,41.034385],[121.662789,41.050491],[121.651189,41.05417],[121.6473,41.062484],[121.666888,41.059809],[121.680154,41.084793],[121.672583,41.090237],[121.692102,41.096637],[121.691477,41.093294],[121.714537,41.091479],[121.714468,41.087276],[121.747531,41.085843],[121.758576,41.088661],[121.763438,41.100791],[121.739196,41.114589],[121.7426,41.107237],[121.722248,41.108096],[121.716899,41.103608],[121.695436,41.104897],[121.682377,41.099979],[121.665637,41.099502],[121.610763,41.103274],[121.585132,41.108049],[121.566795,41.134494],[121.567698,41.145947],[121.602359,41.180724],[121.615626,41.182011],[121.618821,41.186828],[121.620418,41.206758],[121.602706,41.211573],[121.591314,41.209333],[121.580895,41.215959],[121.577422,41.225587],[121.58027,41.249698],[121.6009,41.257606],[121.638061,41.281134],[121.685989,41.305224],[121.701548,41.315791],[121.717108,41.316457],[121.729333,41.328688],[121.747045,41.337062],[121.759062,41.331257],[121.784276,41.333493],[121.794973,41.345673],[121.801433,41.348765],[121.827411,41.35238],[121.845749,41.352713],[121.867768,41.340963],[121.869296,41.330401],[121.884716,41.322549],[121.90347,41.337014],[121.90229,41.354758],[121.910833,41.355805],[121.919585,41.363795],[121.944522,41.369169],[121.95626,41.386239],[121.975154,41.383862],[122.010648,41.386049],[122.020303,41.382483],[122.026346,41.371119],[122.040725,41.371547],[122.069967,41.38757],[122.077052,41.386477],[122.086291,41.393845],[122.093723,41.39375],[122.099071,41.399882],[122.123869,41.415898],[122.143318,41.422598],[122.137275,41.428728],[122.169296,41.443122],[122.177562,41.451956],[122.185064,41.448537],[122.193746,41.459602],[122.215557,41.485336],[122.283837,41.515899],[122.298284,41.514571],[122.330097,41.525483],[122.357118,41.541326],[122.368092,41.545404],[122.409213,41.548677],[122.452834,41.549341],[122.470547,41.556691],[122.487356,41.566316],[122.479646,41.583239],[122.485828,41.58158],[122.492635,41.590917],[122.484439,41.597599],[122.487078,41.605323],[122.502429,41.630098],[122.510139,41.62773],[122.526532,41.655054],[122.515835,41.658131],[122.517502,41.676971],[122.526671,41.676261],[122.532992,41.669919],[122.550635,41.678911],[122.549524,41.69907],[122.555983,41.708106],[122.572515,41.712505],[122.572168,41.728444],[122.575432,41.731518],[122.570431,41.740644],[122.579878,41.754969],[122.600369,41.766549],[122.596479,41.772268],[122.56925,41.772835],[122.55772,41.774914],[122.560915,41.789137],[122.552927,41.786869],[122.540077,41.800664],[122.529519,41.808363],[122.511459,41.81677],[122.513612,41.820595],[122.498817,41.82494],[122.487148,41.832211],[122.459225,41.843022],[122.457627,41.861194],[122.459572,41.870538],[122.453321,41.882852],[122.443874,41.890636],[122.443388,41.901202],[122.473881,41.906201],[122.509028,41.90422],[122.523129,41.900117],[122.517849,41.912331],[122.521045,41.916622],[122.515766,41.926523],[122.517919,41.936329],[122.507917,41.938733],[122.500971,41.956783],[122.501526,41.970918],[122.494789,41.988771],[122.497289,41.999274],[122.483744,42.02145],[122.469366,42.029169],[122.477632,42.038582],[122.477076,42.043571],[122.462767,42.041688],[122.459016,42.055523],[122.447347,42.063473],[122.453182,42.072458],[122.439359,42.074481],[122.436164,42.084169],[122.449917,42.087602],[122.445194,42.094656],[122.428315,42.092352],[122.435608,42.104811],[122.447625,42.110499],[122.438456,42.117315],[122.446583,42.124178],[122.429704,42.125118],[122.425953,42.129018],[122.409769,42.121452],[122.366703,42.108384],[122.312871,42.083558],[122.293631,42.080031],[122.272167,42.068225],[122.236326,42.052182],[122.22799,42.047053],[122.21264,42.050112],[122.200623,42.032841],[122.184369,42.031946],[122.174992,42.027192],[122.153251,42.032511],[122.145888,42.025027],[122.154362,42.017966],[122.140748,42.019331],[122.130884,41.998991],[122.11852,42.001769],[122.094904,41.986463],[122.097752,41.980858],[122.081915,41.967385],[122.068926,41.965406],[122.063021,41.969269],[122.062257,41.961024],[122.041975,41.944624],[122.042114,41.935339],[122.034334,41.930625],[122.014816,41.925298],[122.00391,41.930672],[121.996478,41.928645],[121.99113,41.919687],[121.997242,41.911247],[121.972514,41.892617],[121.955705,41.891391],[121.962442,41.888938],[121.960081,41.878512],[121.941674,41.872991],[121.933061,41.874643],[121.924517,41.868886],[121.927156,41.862138],[121.908472,41.864167],[121.916251,41.858363],[121.895066,41.845571],[121.848944,41.845288],[121.843734,41.835988],[121.833107,41.828859],[121.831648,41.820643],[121.840886,41.813559],[121.862558,41.813134],[121.845957,41.799011],[121.835121,41.786869],[121.822479,41.782758],[121.798029,41.801798],[121.77858,41.806285],[121.754338,41.796129],[121.722456,41.795751],[121.707314,41.803971],[121.697033,41.798869],[121.675153,41.774205],[121.65494,41.776332],[121.637089,41.774064],[121.629031,41.784034],[121.604859,41.787294],[121.554083,41.785215],[121.538802,41.783231],[121.538524,41.773922],[121.52616,41.770472],[121.519909,41.763052],[121.512407,41.762579],[121.512338,41.748587],[121.50692,41.744143],[121.515324,41.730383],[121.515116,41.720404],[121.502335,41.717755],[121.493305,41.721681],[121.477607,41.711937],[121.475385,41.695001],[121.457603,41.695994],[121.458158,41.707538],[121.452463,41.719553],[121.435723,41.733362],[121.416899,41.737996],[121.393838,41.736483],[121.374319,41.726647],[121.360149,41.725654],[121.338547,41.733457],[121.332712,41.741826],[121.342506,41.746743],[121.342923,41.768582],[121.336394,41.771984],[121.312222,41.770897],[121.307985,41.775765],[121.263669,41.794523],[121.256097,41.778789],[121.261307,41.774489],[121.226785,41.763241],[121.227549,41.753456],[121.215949,41.740218],[121.22227,41.730619],[121.233453,41.721539],[121.218102,41.689606],[121.226716,41.688707],[121.224493,41.678059],[121.210531,41.677965],[121.20164,41.673752],[121.194208,41.678059],[121.17844,41.664806],[121.173926,41.673847],[121.167118,41.666984],[121.156283,41.671055],[121.146905,41.658605],[121.147114,41.649278],[121.139265,41.648331],[121.122247,41.63886],[121.123914,41.633366],[121.111272,41.619441],[121.105715,41.624178],[121.09349,41.615982],[121.066956,41.618304],[121.072235,41.624604],[121.067442,41.629577],[121.06258,41.621099],[121.056051,41.626214],[121.04848,41.616125],[121.030698,41.607218],[121.014444,41.60826],[121.005067,41.604612],[120.997218,41.596035],[120.984159,41.600442],[120.976032,41.5994],[120.97374,41.583666],[120.981728,41.566695],[120.956375,41.545073],[120.957347,41.541326],[120.940121,41.537579],[120.936509,41.531128],[120.92616,41.531128],[120.924354,41.524866],[120.91456,41.527855],[120.906016,41.523443],[120.901223,41.512293],[120.902265,41.50005],[120.896986,41.485431],[120.904974,41.481159],[120.897472,41.471473],[120.893582,41.475699],[120.877537,41.476554],[120.878579,41.449582],[120.876009,41.435189],[120.883719,41.421173],[120.870799,41.421315],[120.864687,41.416231],[120.849753,41.423834],[120.842043,41.418274],[120.843015,41.404588],[120.833082,41.398171],[120.822385,41.409673],[120.819746,41.421458],[120.812036,41.425972],[120.805506,41.42141],[120.815995,41.405681],[120.79995,41.395319],[120.791336,41.396079],[120.778903,41.378489],[120.77029,41.376587],[120.768414,41.36955],[120.774527,41.368266],[120.770082,41.358278],[120.758829,41.357422],[120.752716,41.341962],[120.756606,41.337062],[120.748201,41.32431],[120.751605,41.307938],[120.755564,41.302416],[120.749243,41.292085],[120.737366,41.288467],[120.733337,41.2748],[120.737504,41.270943],[120.753272,41.26818],[120.755981,41.261559],[120.764038,41.261559],[120.769734,41.248554],[120.763969,41.248745],[120.746882,41.241217],[120.738407,41.240264],[120.730697,41.230972],[120.720626,41.22816],[120.720348,41.219581],[120.734448,41.218199],[120.742714,41.221297],[120.752647,41.213003],[120.76383,41.210048],[120.769317,41.202325],[120.763761,41.195745],[120.771471,41.194219],[120.781195,41.202658],[120.786752,41.20099],[120.795851,41.182441],[120.784251,41.170278],[120.788489,41.161835],[120.805576,41.158114],[120.805923,41.147379],[120.825233,41.140889],[120.834472,41.131535],[120.842876,41.132155],[120.850725,41.14065],[120.876078,41.156062],[120.888581,41.15153],[120.895805,41.144659],[120.907683,41.145661],[120.910114,41.134923],[120.898584,41.130962],[120.90935,41.121082],[120.914073,41.123659],[120.930605,41.117549],[120.938315,41.123803],[120.943664,41.099454],[120.948456,41.090046],[120.942761,41.061433],[120.944706,41.051877],[120.954986,41.045903],[120.964293,41.050108],[120.982978,41.045377],[120.980269,41.040837],[120.99055,41.033381],[121.006664,41.035819],[121.034726,41.050491],[121.032295,41.033668],[121.016736,40.99867],[121.011666,40.972887],[121.015972,40.973318],[121.015625,40.957145],[121.00986,40.956092],[121.017292,40.942261],[121.02521,40.95011],[121.024655,40.942261],[121.034171,40.943649],[121.036949,40.933884],[121.023613,40.928187],[121.036394,40.922394],[121.029031,40.913296],[121.033962,40.907166],[121.030628,40.884031],[121.02007,40.868219],[121.011596,40.863955],[121.00729,40.852884],[121.008748,40.843393],[121.030003,40.790545],[121.046604,40.794959],[121.058899,40.793856],[121.073694,40.798029],[121.086544,40.798221],[121.077028,40.815536],[121.087517,40.820763],[121.095435,40.829346],[121.096685,40.839893],[121.11412,40.83951],[121.126206,40.86913],[121.145169,40.875503],[121.167535,40.876221],[121.177676,40.87373],[121.216158,40.850679],[121.290828,40.851542],[121.342923,40.841427],[121.439196,40.830065],[121.440376,40.881683],[121.481983,40.882019],[121.499626,40.879815],[121.519214,40.862661],[121.526647,40.851733],[121.555125,40.849624]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":210800,\"name\":\"营口市\",\"center\":[122.235151,40.667432],\"centroid\":[122.456202,40.391795],\"childrenNum\":6,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":7,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[121.953274,40.128876],[121.970778,40.116423],[121.98724,40.09088],[121.986545,40.081912],[121.980294,40.078081],[121.982794,40.061836],[121.993422,40.052379],[122.008356,40.051457],[122.020928,40.058393],[122.044267,40.062515],[122.049824,40.068577],[122.058576,40.064601],[122.069203,40.067753],[122.07344,40.056453],[122.081915,40.055435],[122.090111,40.038942],[122.096015,40.042386],[122.12498,40.042435],[122.139914,40.030888],[122.157557,40.035643],[122.175061,40.027103],[122.185342,40.009924],[122.196664,40.006138],[122.198609,39.998469],[122.218683,40.000217],[122.231047,40.008905],[122.242577,40.022202],[122.248898,40.012982],[122.26029,40.00609],[122.259873,39.988906],[122.269597,39.98405],[122.269806,39.979098],[122.280919,39.967395],[122.285851,39.967589],[122.304466,39.979486],[122.326972,39.984633],[122.344059,39.982545],[122.357743,39.969629],[122.373371,39.966326],[122.400322,39.972154],[122.401434,39.9672],[122.417757,39.972154],[122.418312,39.968657],[122.456168,39.951707],[122.477423,39.939561],[122.497081,39.935918],[122.501318,39.927317],[122.512084,39.920611],[122.510695,39.928678],[122.530005,39.941796],[122.551538,39.939173],[122.561193,39.944565],[122.549524,39.954524],[122.555914,39.968075],[122.554108,39.974631],[122.539243,39.972785],[122.544106,39.989343],[122.541049,39.993275],[122.520142,39.99876],[122.519308,40.005605],[122.527435,40.015554],[122.544731,40.013225],[122.550982,40.024677],[122.536465,40.031276],[122.529866,40.047431],[122.539452,40.062127],[122.55126,40.057326],[122.55772,40.058975],[122.569806,40.049905],[122.577516,40.055726],[122.607315,40.052864],[122.617317,40.064019],[122.628709,40.061933],[122.650519,40.06591],[122.658646,40.062176],[122.694488,40.07105],[122.708936,40.067462],[122.71352,40.075996],[122.727482,40.085693],[122.733247,40.094758],[122.746861,40.097667],[122.767421,40.109881],[122.778535,40.112013],[122.797498,40.106634],[122.80111,40.102853],[122.813821,40.103435],[122.815558,40.111335],[122.824379,40.120687],[122.835215,40.119282],[122.851122,40.124612],[122.858276,40.134496],[122.847926,40.150432],[122.8539,40.154646],[122.869668,40.178906],[122.878558,40.185442],[122.881476,40.195607],[122.893979,40.20519],[122.896757,40.218739],[122.891131,40.234705],[122.884879,40.236204],[122.881823,40.249457],[122.874669,40.258597],[122.873002,40.26851],[122.88217,40.289829],[122.881337,40.306937],[122.891339,40.319548],[122.915859,40.331529],[122.932113,40.344715],[122.92982,40.358333],[122.934822,40.374024],[122.931974,40.396806],[122.936558,40.409304],[122.946213,40.416396],[122.971288,40.417795],[122.990182,40.427684],[122.99296,40.435161],[122.9865,40.463563],[122.999212,40.477012],[122.984347,40.486989],[122.969413,40.508961],[122.949825,40.515658],[122.936002,40.528856],[122.914678,40.537573],[122.897382,40.538632],[122.879461,40.52876],[122.86286,40.5277],[122.854872,40.532853],[122.829311,40.538006],[122.8166,40.5577],[122.811529,40.558181],[122.807431,40.570312],[122.797637,40.578879],[122.771103,40.577532],[122.743458,40.585136],[122.730677,40.582922],[122.720883,40.586387],[122.703657,40.598945],[122.691987,40.599956],[122.678929,40.592594],[122.662883,40.594615],[122.659549,40.583596],[122.651283,40.584702],[122.650589,40.593893],[122.625861,40.608423],[122.643573,40.611069],[122.650867,40.616937],[122.654617,40.628673],[122.645101,40.636704],[122.653228,40.638675],[122.653784,40.648099],[122.659758,40.658435],[122.669482,40.662569],[122.670941,40.67098],[122.647463,40.666606],[122.638642,40.659012],[122.636558,40.663819],[122.623082,40.671749],[122.622804,40.688136],[122.636558,40.696832],[122.651144,40.710571],[122.649825,40.739768],[122.639614,40.748698],[122.600785,40.751722],[122.581892,40.748506],[122.567583,40.758058],[122.556817,40.761082],[122.515974,40.766554],[122.541952,40.798557],[122.537993,40.800715],[122.542022,40.818701],[122.521531,40.826805],[122.523406,40.834188],[122.515002,40.839414],[122.51653,40.84809],[122.502568,40.847324],[122.484231,40.85159],[122.487634,40.8606],[122.502568,40.872963],[122.502429,40.879527],[122.493052,40.882881],[122.492566,40.90003],[122.503124,40.915355],[122.506111,40.929288],[122.488607,40.935751],[122.465059,40.935894],[122.449848,40.940298],[122.438595,40.940059],[122.433316,40.930676],[122.411505,40.927852],[122.394557,40.922298],[122.384138,40.924835],[122.377609,40.919425],[122.377609,40.909225],[122.363647,40.909082],[122.352672,40.916025],[122.335238,40.905777],[122.332251,40.894091],[122.320373,40.895815],[122.322943,40.904388],[122.318914,40.909034],[122.309468,40.905442],[122.304258,40.889827],[122.277307,40.864578],[122.264318,40.870903],[122.253482,40.870376],[122.22674,40.862421],[122.223128,40.853698],[122.209028,40.855999],[122.188884,40.875551],[122.182424,40.877515],[122.176589,40.868507],[122.178812,40.850008],[122.187078,40.84114],[122.183397,40.83299],[122.151584,40.840756],[122.129426,40.818125],[122.100877,40.804313],[122.096501,40.796926],[122.108657,40.787523],[122.128245,40.779798],[122.160266,40.75945],[122.180618,40.750522],[122.194163,40.742217],[122.206319,40.739961],[122.209861,40.725123],[122.201665,40.713405],[122.208333,40.709947],[122.246675,40.711099],[122.265777,40.710235],[122.27314,40.702741],[122.272723,40.695583],[122.245286,40.683283],[122.23452,40.68285],[122.232297,40.688136],[122.205416,40.693085],[122.19451,40.701876],[122.188051,40.695967],[122.172491,40.709898],[122.162836,40.711484],[122.154918,40.70644],[122.151931,40.697024],[122.154154,40.685541],[122.148388,40.671797],[122.154084,40.662665],[122.151514,40.653099],[122.134496,40.627134],[122.13408,40.61434],[122.150542,40.588504],[122.245633,40.519704],[122.246467,40.515513],[122.2332,40.510503],[122.231047,40.505107],[122.244661,40.485061],[122.25765,40.487037],[122.278697,40.482844],[122.276682,40.47518],[122.264804,40.480386],[122.222086,40.481109],[122.221253,40.461248],[122.240424,40.460959],[122.24987,40.452763],[122.250982,40.44577],[122.229102,40.424018],[122.199025,40.431736],[122.190968,40.429228],[122.187981,40.413984],[122.199928,40.389519],[122.198678,40.382375],[122.191801,40.382134],[122.171658,40.388264],[122.168115,40.376728],[122.178673,40.365624],[122.163531,40.358913],[122.152209,40.357657],[122.135538,40.374941],[122.12373,40.376245],[122.111088,40.368521],[122.105948,40.357174],[122.111088,40.348917],[122.1379,40.338871],[122.121438,40.327085],[122.110741,40.31578],[122.1006,40.31578],[122.088791,40.331094],[122.0799,40.333075],[122.03996,40.322206],[122.035932,40.299882],[122.039822,40.260241],[122.026902,40.245008],[121.940284,40.242202],[121.935908,40.237849],[121.950356,40.204125],[121.959108,40.192799],[121.981197,40.17329],[122.004258,40.171934],[122.010856,40.155034],[122.009815,40.148834],[121.995158,40.12844],[121.980433,40.124127],[121.960775,40.134883],[121.953274,40.128876]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":210900,\"name\":\"阜新市\",\"center\":[121.648962,42.011796],\"centroid\":[121.961888,42.282968],\"childrenNum\":7,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":8,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[122.83973,42.718292],[122.831742,42.722296],[122.805139,42.741612],[122.798748,42.738773],[122.79465,42.747662],[122.784509,42.757479],[122.765754,42.759247],[122.756377,42.768226],[122.749917,42.767249],[122.736373,42.77311],[122.733038,42.785854],[122.71734,42.785947],[122.700323,42.78218],[122.678651,42.781064],[122.653437,42.782319],[122.625166,42.77325],[122.617873,42.778552],[122.58092,42.789713],[122.569737,42.809148],[122.576057,42.818724],[122.562791,42.826206],[122.522364,42.831086],[122.505277,42.836616],[122.486662,42.836895],[122.431857,42.84326],[122.39935,42.839171],[122.35934,42.836105],[122.352325,42.831551],[122.350519,42.820165],[122.355451,42.813378],[122.362188,42.793526],[122.361702,42.788179],[122.373302,42.775436],[122.437831,42.770087],[122.45721,42.774226],[122.460614,42.755339],[122.444569,42.749104],[122.434844,42.729651],[122.421021,42.721085],[122.401086,42.713357],[122.39671,42.707863],[122.395946,42.684204],[122.360591,42.683412],[122.341211,42.6713],[122.33489,42.672791],[122.334126,42.680385],[122.324471,42.68481],[122.311621,42.682201],[122.307801,42.690446],[122.259178,42.69692],[122.257442,42.704231],[122.241049,42.713078],[122.238062,42.718851],[122.225212,42.72844],[122.204165,42.73249],[122.209653,42.711495],[122.206527,42.706839],[122.203679,42.68318],[122.196038,42.68085],[122.197219,42.689049],[122.190759,42.691564],[122.173603,42.686813],[122.1636,42.690073],[122.162281,42.685089],[122.139775,42.690166],[122.133454,42.696268],[122.121646,42.696081],[122.109282,42.701949],[122.096293,42.7033],[122.091014,42.714475],[122.072815,42.710657],[122.073163,42.719735],[122.061076,42.723413],[122.050171,42.719223],[122.04906,42.711495],[122.026832,42.706652],[122.02197,42.699388],[121.994603,42.705162],[121.988976,42.695383],[121.981614,42.690492],[121.97953,42.69664],[121.968694,42.700925],[121.962165,42.699248],[121.959456,42.686766],[121.938479,42.687884],[121.935561,42.681689],[121.941465,42.66953],[121.939729,42.6631],[121.929449,42.66706],[121.915904,42.656716],[121.920419,42.637186],[121.903401,42.637326],[121.902151,42.630613],[121.91764,42.630473],[121.918543,42.627117],[121.90222,42.620822],[121.921322,42.606039],[121.911667,42.601468],[121.917085,42.587987],[121.906318,42.58794],[121.903957,42.593678],[121.895274,42.593632],[121.905901,42.584021],[121.905485,42.570956],[121.8868,42.555088],[121.870268,42.548413],[121.869435,42.527962],[121.855612,42.539169],[121.85207,42.525581],[121.844498,42.522405],[121.840956,42.531231],[121.832759,42.533893],[121.823382,42.525067],[121.817687,42.504189],[121.803655,42.499984],[121.80692,42.508907],[121.8031,42.514886],[121.792889,42.507505],[121.783581,42.495312],[121.765174,42.490873],[121.76052,42.486434],[121.747462,42.485266],[121.725651,42.457643],[121.713218,42.445673],[121.690574,42.437396],[121.673417,42.440062],[121.665568,42.437396],[121.646188,42.45437],[121.646536,42.459185],[121.637992,42.480359],[121.62799,42.47606],[121.605276,42.493957],[121.602011,42.50204],[121.610624,42.509888],[121.608193,42.515773],[121.59062,42.509094],[121.590828,42.502273],[121.577492,42.497321],[121.578464,42.492088],[121.570129,42.486902],[121.552416,42.490593],[121.528869,42.48321],[121.515116,42.491714],[121.506364,42.482462],[121.497056,42.492275],[121.479413,42.496387],[121.467744,42.486808],[121.470175,42.484425],[121.450726,42.476574],[121.434194,42.475312],[121.42315,42.485406],[121.41544,42.48606],[121.417038,42.478396],[121.411689,42.475873],[121.38835,42.475265],[121.384808,42.471152],[121.385155,42.452032],[121.359663,42.460728],[121.341812,42.449741],[121.327156,42.443522],[121.311319,42.440343],[121.304442,42.435573],[121.313611,42.429446],[121.306387,42.422617],[121.306804,42.413401],[121.299024,42.398897],[121.283882,42.387291],[121.263877,42.379334],[121.252208,42.382844],[121.256236,42.377461],[121.232481,42.37161],[121.218728,42.371891],[121.214421,42.362012],[121.185664,42.349884],[121.187957,42.342016],[121.184345,42.332788],[121.169897,42.322716],[121.150378,42.314564],[121.153365,42.310206],[121.148433,42.301067],[121.133638,42.300271],[121.121483,42.280911],[121.106132,42.279317],[121.103284,42.283302],[121.086058,42.277583],[121.068206,42.252494],[121.048758,42.259905],[121.03167,42.253573],[121.038894,42.248414],[121.027503,42.243394],[121.033615,42.23678],[121.047368,42.229742],[121.055842,42.219137],[121.057579,42.207874],[121.050841,42.19243],[121.055009,42.187688],[121.055356,42.175291],[121.071541,42.154062],[121.072513,42.143115],[121.078,42.136443],[121.08453,42.111205],[121.074597,42.101896],[121.066748,42.071564],[121.046118,42.058863],[121.044451,42.051476],[121.052717,42.03124],[121.05487,42.018484],[121.050563,42.005113],[121.039311,41.987735],[121.041534,41.980152],[121.053967,41.977938],[121.074527,41.978786],[121.079529,41.973651],[121.104882,41.964935],[121.149962,41.976996],[121.163159,41.977514],[121.192055,41.966113],[121.199834,41.955464],[121.212962,41.914925],[121.238524,41.903607],[121.26353,41.89823],[121.292564,41.889881],[121.298885,41.884079],[121.301941,41.86563],[121.290689,41.856286],[121.277283,41.826876],[121.268392,41.82069],[121.272699,41.803593],[121.263669,41.794523],[121.307985,41.775765],[121.312222,41.770897],[121.336394,41.771984],[121.342923,41.768582],[121.342506,41.746743],[121.332712,41.741826],[121.338547,41.733457],[121.360149,41.725654],[121.374319,41.726647],[121.393838,41.736483],[121.416899,41.737996],[121.435723,41.733362],[121.452463,41.719553],[121.458158,41.707538],[121.457603,41.695994],[121.475385,41.695001],[121.477607,41.711937],[121.493305,41.721681],[121.502335,41.717755],[121.515116,41.720404],[121.515324,41.730383],[121.50692,41.744143],[121.512338,41.748587],[121.512407,41.762579],[121.519909,41.763052],[121.52616,41.770472],[121.538524,41.773922],[121.538802,41.783231],[121.554083,41.785215],[121.604859,41.787294],[121.629031,41.784034],[121.637089,41.774064],[121.65494,41.776332],[121.675153,41.774205],[121.697033,41.798869],[121.707314,41.803971],[121.722456,41.795751],[121.754338,41.796129],[121.77858,41.806285],[121.798029,41.801798],[121.822479,41.782758],[121.835121,41.786869],[121.845957,41.799011],[121.862558,41.813134],[121.840886,41.813559],[121.831648,41.820643],[121.833107,41.828859],[121.843734,41.835988],[121.848944,41.845288],[121.895066,41.845571],[121.916251,41.858363],[121.908472,41.864167],[121.927156,41.862138],[121.924517,41.868886],[121.933061,41.874643],[121.941674,41.872991],[121.960081,41.878512],[121.962442,41.888938],[121.955705,41.891391],[121.972514,41.892617],[121.997242,41.911247],[121.99113,41.919687],[121.996478,41.928645],[122.00391,41.930672],[122.014816,41.925298],[122.034334,41.930625],[122.042114,41.935339],[122.041975,41.944624],[122.062257,41.961024],[122.063021,41.969269],[122.068926,41.965406],[122.081915,41.967385],[122.097752,41.980858],[122.094904,41.986463],[122.11852,42.001769],[122.130884,41.998991],[122.140748,42.019331],[122.154362,42.017966],[122.145888,42.025027],[122.153251,42.032511],[122.174992,42.027192],[122.184369,42.031946],[122.200623,42.032841],[122.21264,42.050112],[122.22799,42.047053],[122.236326,42.052182],[122.272167,42.068225],[122.293631,42.080031],[122.312871,42.083558],[122.366703,42.108384],[122.409769,42.121452],[122.425953,42.129018],[122.423522,42.140672],[122.436858,42.140625],[122.432621,42.144196],[122.439428,42.150961],[122.455821,42.144572],[122.520072,42.174681],[122.552024,42.188063],[122.614469,42.212755],[122.609329,42.230164],[122.620096,42.230071],[122.626,42.234716],[122.632598,42.231009],[122.63628,42.237061],[122.645101,42.237671],[122.651283,42.232651],[122.691779,42.249915],[122.703726,42.261124],[122.735053,42.281005],[122.734289,42.284287],[122.769505,42.297037],[122.781314,42.29863],[122.805555,42.312408],[122.810765,42.319624],[122.826324,42.330446],[122.838827,42.331898],[122.858345,42.346091],[122.871057,42.345669],[122.900994,42.349182],[122.903217,42.353256],[122.895298,42.368848],[122.883421,42.368333],[122.875294,42.37484],[122.882379,42.388367],[122.873627,42.389397],[122.865639,42.395715],[122.862027,42.406804],[122.850983,42.40526],[122.84619,42.399599],[122.832159,42.403342],[122.828269,42.410267],[122.833965,42.417986],[122.81778,42.416769],[122.824865,42.429352],[122.832853,42.431597],[122.826602,42.438846],[122.827297,42.445814],[122.822018,42.458017],[122.825004,42.461149],[122.818544,42.481434],[122.826463,42.490126],[122.819447,42.490126],[122.834382,42.497975],[122.871543,42.504049],[122.882101,42.503908],[122.899744,42.499424],[122.908357,42.500685],[122.911552,42.51951],[122.917804,42.521565],[122.916831,42.52969],[122.921832,42.535527],[122.943365,42.547899],[122.949408,42.545098],[122.957744,42.550327],[122.966912,42.561716],[122.974414,42.564329],[122.969899,42.571376],[122.930237,42.587707],[122.922874,42.596804],[122.926764,42.604407],[122.903078,42.613687],[122.892034,42.608884],[122.886477,42.611216],[122.873488,42.608604],[122.86293,42.621055],[122.842578,42.633364],[122.838688,42.645204],[122.842786,42.648839],[122.824935,42.652661],[122.792705,42.650983],[122.791802,42.662773],[122.769505,42.677962],[122.756238,42.679732],[122.747347,42.689188],[122.750959,42.697944],[122.767838,42.709074],[122.778118,42.710889],[122.80111,42.726299],[122.815766,42.718897],[122.836118,42.716476],[122.83973,42.718292]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":211000,\"name\":\"辽阳市\",\"center\":[123.18152,41.269402],\"centroid\":[123.251133,41.184819],\"childrenNum\":7,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":9,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[122.622527,41.199845],[122.613149,41.202134],[122.59509,41.19584],[122.601897,41.185636],[122.598077,41.178911],[122.618706,41.169706],[122.639683,41.155204],[122.678581,41.140746],[122.690251,41.128289],[122.689556,41.122609],[122.704282,41.114828],[122.762837,41.104372],[122.760962,41.101221],[122.777215,41.099024],[122.784995,41.101316],[122.791594,41.096111],[122.800068,41.100266],[122.801388,41.093533],[122.824518,41.081831],[122.832437,41.082452],[122.831047,41.091575],[122.841605,41.106091],[122.856748,41.114971],[122.84876,41.129769],[122.858137,41.144945],[122.865291,41.144897],[122.875988,41.157732],[122.86675,41.163171],[122.875572,41.170612],[122.885505,41.166844],[122.895924,41.171519],[122.89898,41.181296],[122.909607,41.194219],[122.946144,41.196603],[122.962467,41.191358],[122.974484,41.202706],[122.987612,41.200465],[122.991363,41.18659],[123.005949,41.188497],[123.022411,41.206854],[123.038248,41.208427],[123.062282,41.199083],[123.057142,41.191501],[123.063254,41.183156],[123.075618,41.184634],[123.099304,41.178101],[123.109862,41.184634],[123.119031,41.184253],[123.119309,41.177242],[123.129381,41.174094],[123.13716,41.158018],[123.149385,41.154059],[123.140147,41.137214],[123.146815,41.133826],[123.142509,41.12576],[123.146746,41.10824],[123.145287,41.101841],[123.154595,41.105852],[123.162583,41.099024],[123.171891,41.098642],[123.183977,41.106043],[123.198494,41.103322],[123.203148,41.097687],[123.2119,41.098117],[123.213636,41.091145],[123.208357,41.078631],[123.214539,41.077867],[123.231835,41.066067],[123.226626,41.058996],[123.235517,41.048962],[123.214331,41.039833],[123.205162,41.039547],[123.199675,41.031278],[123.212247,41.017701],[123.201898,41.00173],[123.190923,40.996852],[123.192451,40.987621],[123.178212,40.989917],[123.161541,40.988434],[123.151052,40.983938],[123.126741,40.989343],[123.103125,40.984177],[123.087913,40.975519],[123.083884,40.961595],[123.097151,40.941973],[123.096387,40.934171],[123.089788,40.928378],[123.060406,40.923447],[123.073673,40.906879],[123.075063,40.898354],[123.055266,40.884175],[123.047973,40.871765],[123.055752,40.857772],[123.050265,40.845502],[123.054294,40.835099],[123.072979,40.839414],[123.084926,40.835866],[123.105834,40.824455],[123.107084,40.820091],[123.091386,40.802394],[123.074854,40.792081],[123.071798,40.780422],[123.073812,40.771641],[123.085412,40.755946],[123.100971,40.741305],[123.130075,40.72666],[123.136188,40.714461],[123.150288,40.725219],[123.1771,40.712684],[123.214262,40.732182],[123.230932,40.733959],[123.244685,40.731462],[123.258369,40.744569],[123.277054,40.749082],[123.287959,40.754506],[123.297614,40.76593],[123.315049,40.773464],[123.340055,40.771113],[123.357003,40.775959],[123.37541,40.775384],[123.394234,40.786515],[123.402639,40.802538],[123.411044,40.807095],[123.428964,40.803306],[123.442231,40.803114],[123.461611,40.809541],[123.487659,40.811411],[123.509608,40.816159],[123.533711,40.826996],[123.539476,40.837353],[123.537531,40.851446],[123.544477,40.861079],[123.574971,40.856814],[123.582264,40.857485],[123.604908,40.874017],[123.608659,40.89227],[123.619425,40.896629],[123.625191,40.906879],[123.623662,40.912242],[123.632415,40.923926],[123.646515,40.930724],[123.657976,40.952647],[123.648043,40.964658],[123.656587,40.973796],[123.652072,40.975423],[123.647349,41.006943],[123.650127,41.016314],[123.660824,41.017797],[123.65999,41.041602],[123.670757,41.043227],[123.685344,41.0503],[123.68972,41.059665],[123.679648,41.069889],[123.671104,41.071657],[123.660685,41.086846],[123.660477,41.095873],[123.651308,41.112775],[123.655267,41.129148],[123.664644,41.139123],[123.649085,41.157446],[123.638458,41.159259],[123.639013,41.169324],[123.63422,41.181248],[123.624913,41.189308],[123.619286,41.202849],[123.598934,41.206663],[123.608798,41.22001],[123.59692,41.23426],[123.600463,41.24217],[123.616022,41.254795],[123.619495,41.246601],[123.636374,41.246887],[123.670201,41.260702],[123.665547,41.269133],[123.664019,41.283705],[123.657768,41.286895],[123.65617,41.298655],[123.663324,41.316077],[123.661796,41.324928],[123.654642,41.327688],[123.658254,41.345958],[123.652628,41.353236],[123.655475,41.37245],[123.650058,41.378537],[123.652628,41.386952],[123.642556,41.392562],[123.633943,41.406869],[123.631164,41.416801],[123.652836,41.438609],[123.652697,41.449439],[123.644362,41.458178],[123.607617,41.467675],[123.601366,41.48676],[123.591502,41.494022],[123.58018,41.498436],[123.560801,41.486808],[123.546561,41.481111],[123.527529,41.491981],[123.516485,41.480067],[123.498147,41.483675],[123.489603,41.478975],[123.477726,41.463829],[123.458068,41.466535],[123.449386,41.474987],[123.439383,41.469337],[123.429659,41.472043],[123.430076,41.481396],[123.417087,41.487472],[123.40764,41.500619],[123.397638,41.495114],[123.383746,41.50043],[123.382565,41.509256],[123.362629,41.504701],[123.362352,41.513195],[123.353669,41.510775],[123.335679,41.514665],[123.33429,41.506931],[123.324079,41.508307],[123.313382,41.519979],[123.2956,41.525056],[123.284278,41.524439],[123.279694,41.538053],[123.252951,41.538148],[123.236003,41.540282],[123.235517,41.551712],[123.219818,41.559156],[123.219471,41.565273],[123.201898,41.564562],[123.187589,41.555648],[123.193493,41.549673],[123.188144,41.54512],[123.182032,41.549388],[123.16946,41.548961],[123.156748,41.53682],[123.143203,41.538765],[123.134451,41.536156],[123.127366,41.546638],[123.131117,41.554035],[123.111668,41.55854],[123.11535,41.564988],[123.114099,41.585277],[123.123546,41.589637],[123.134312,41.60845],[123.11403,41.617119],[123.109098,41.606318],[123.087565,41.588974],[123.087218,41.5794],[123.078744,41.563376],[123.082286,41.560769],[123.071173,41.554462],[123.050196,41.551048],[123.041166,41.540187],[123.027413,41.514144],[123.020675,41.5075],[123.010881,41.505175],[123.002198,41.513906],[122.969205,41.509778],[122.957813,41.496395],[122.969205,41.492598],[122.971288,41.49929],[122.982055,41.496158],[122.976428,41.488849],[122.975803,41.47869],[122.959688,41.468102],[122.934405,41.47869],[122.933293,41.469194],[122.937947,41.466963],[122.935308,41.458368],[122.940309,41.456041],[122.933641,41.447919],[122.91954,41.454901],[122.91704,41.451054],[122.92857,41.448537],[122.912664,41.432956],[122.929681,41.42811],[122.914609,41.417799],[122.886755,41.417894],[122.881754,41.422313],[122.871404,41.414378],[122.863347,41.424642],[122.849663,41.415898],[122.85133,41.394701],[122.841814,41.378584],[122.80368,41.373401],[122.798054,41.366839],[122.780966,41.366363],[122.773742,41.360323],[122.765616,41.368313],[122.749362,41.351857],[122.747834,41.329449],[122.737762,41.33002],[122.731163,41.323453],[122.717827,41.322787],[122.724148,41.314601],[122.70963,41.308509],[122.698447,41.299274],[122.705949,41.284562],[122.698239,41.278991],[122.692543,41.268228],[122.676706,41.260893],[122.674275,41.251508],[122.666981,41.2456],[122.666634,41.229399],[122.669482,41.223394],[122.659896,41.212813],[122.637044,41.210191],[122.633015,41.203088],[122.622527,41.199845]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":211100,\"name\":\"盘锦市\",\"center\":[122.06957,41.124484],\"centroid\":[121.999309,41.06851],\"childrenNum\":4,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":10,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[121.555125,40.849624],[121.558737,40.840325],[121.547276,40.8234],[121.552903,40.817742],[121.570823,40.827764],[121.577978,40.839462],[121.606387,40.84416],[121.626045,40.8444],[121.635075,40.83275],[121.647716,40.829154],[121.682655,40.829634],[121.69495,40.833277],[121.699534,40.840708],[121.718775,40.842722],[121.732458,40.84694],[121.736695,40.863044],[121.746628,40.852884],[121.753366,40.854609],[121.753088,40.869082],[121.77858,40.886953],[121.816089,40.894809],[121.825744,40.864194],[121.845054,40.853746],[121.849638,40.845598],[121.842276,40.838647],[121.847416,40.824599],[121.883882,40.802202],[121.902151,40.798941],[121.934241,40.798221],[121.942855,40.788818],[121.941187,40.777639],[121.930213,40.755322],[121.936117,40.711387],[121.951259,40.680784],[121.977932,40.67271],[122.025652,40.674248],[122.050032,40.653628],[122.066147,40.648628],[122.096988,40.65132],[122.121993,40.657474],[122.132621,40.666222],[122.148388,40.671797],[122.154154,40.685541],[122.151931,40.697024],[122.154918,40.70644],[122.162836,40.711484],[122.172491,40.709898],[122.188051,40.695967],[122.19451,40.701876],[122.205416,40.693085],[122.232297,40.688136],[122.23452,40.68285],[122.245286,40.683283],[122.272723,40.695583],[122.27314,40.702741],[122.265777,40.710235],[122.246675,40.711099],[122.208333,40.709947],[122.201665,40.713405],[122.209861,40.725123],[122.206319,40.739961],[122.194163,40.742217],[122.180618,40.750522],[122.160266,40.75945],[122.128245,40.779798],[122.108657,40.787523],[122.096501,40.796926],[122.100877,40.804313],[122.129426,40.818125],[122.151584,40.840756],[122.183397,40.83299],[122.187078,40.84114],[122.178812,40.850008],[122.176589,40.868507],[122.182424,40.877515],[122.188884,40.875551],[122.209028,40.855999],[122.223128,40.853698],[122.22674,40.862421],[122.253482,40.870376],[122.264318,40.870903],[122.277307,40.864578],[122.304258,40.889827],[122.309468,40.905442],[122.318914,40.909034],[122.322943,40.904388],[122.320373,40.895815],[122.332251,40.894091],[122.335238,40.905777],[122.321345,40.909273],[122.327597,40.918276],[122.318845,40.927325],[122.331278,40.923974],[122.343364,40.927277],[122.338294,40.940872],[122.351213,40.951498],[122.350172,40.955422],[122.328917,40.96327],[122.328361,40.971117],[122.338988,40.968151],[122.358715,40.975327],[122.364411,40.985851],[122.36066,40.9881],[122.346629,40.980494],[122.3426,40.988817],[122.359966,41.001874],[122.368023,41.0002],[122.380665,40.989869],[122.390111,40.988052],[122.390111,40.997426],[122.396502,41.000869],[122.404698,40.991496],[122.41088,40.993074],[122.424008,41.012776],[122.415256,41.022482],[122.40956,41.038639],[122.414978,41.057085],[122.415881,41.084602],[122.412061,41.090954],[122.396502,41.10165],[122.396502,41.120461],[122.384416,41.135496],[122.386638,41.160165],[122.37233,41.162407],[122.366356,41.177147],[122.368926,41.183585],[122.384624,41.195602],[122.400461,41.196889],[122.411783,41.204041],[122.415326,41.212622],[122.435469,41.213003],[122.447208,41.21553],[122.463879,41.233307],[122.488745,41.250984],[122.480688,41.254938],[122.46374,41.256796],[122.457697,41.248078],[122.424633,41.253318],[122.423661,41.243266],[122.408866,41.251651],[122.388861,41.231639],[122.386499,41.2243],[122.369759,41.217579],[122.36191,41.206568],[122.343364,41.203707],[122.352533,41.198034],[122.338572,41.189975],[122.304814,41.190881],[122.274737,41.184539],[122.266194,41.194791],[122.254316,41.194076],[122.226948,41.201943],[122.215001,41.216578],[122.205138,41.223299],[122.231047,41.2304],[122.244591,41.236309],[122.250079,41.242551],[122.249801,41.260845],[122.254455,41.277896],[122.264388,41.291133],[122.26668,41.307414],[122.274737,41.319741],[122.271681,41.328355],[122.279461,41.334968],[122.277516,41.348908],[122.280294,41.353997],[122.245286,41.373877],[122.232436,41.387095],[122.198956,41.429203],[122.200345,41.441792],[122.192288,41.448964],[122.199303,41.45794],[122.193746,41.459602],[122.185064,41.448537],[122.177562,41.451956],[122.169296,41.443122],[122.137275,41.428728],[122.143318,41.422598],[122.123869,41.415898],[122.099071,41.399882],[122.093723,41.39375],[122.086291,41.393845],[122.077052,41.386477],[122.069967,41.38757],[122.040725,41.371547],[122.026346,41.371119],[122.020303,41.382483],[122.010648,41.386049],[121.975154,41.383862],[121.95626,41.386239],[121.944522,41.369169],[121.919585,41.363795],[121.910833,41.355805],[121.90229,41.354758],[121.90347,41.337014],[121.884716,41.322549],[121.869296,41.330401],[121.867768,41.340963],[121.845749,41.352713],[121.827411,41.35238],[121.801433,41.348765],[121.794973,41.345673],[121.784276,41.333493],[121.759062,41.331257],[121.747045,41.337062],[121.729333,41.328688],[121.717108,41.316457],[121.701548,41.315791],[121.685989,41.305224],[121.638061,41.281134],[121.6009,41.257606],[121.58027,41.249698],[121.577422,41.225587],[121.580895,41.215959],[121.591314,41.209333],[121.602706,41.211573],[121.620418,41.206758],[121.618821,41.186828],[121.615626,41.182011],[121.602359,41.180724],[121.567698,41.145947],[121.566795,41.134494],[121.585132,41.108049],[121.610763,41.103274],[121.665637,41.099502],[121.682377,41.099979],[121.695436,41.104897],[121.716899,41.103608],[121.722248,41.108096],[121.7426,41.107237],[121.739196,41.114589],[121.763438,41.100791],[121.758576,41.088661],[121.747531,41.085843],[121.714468,41.087276],[121.714537,41.091479],[121.691477,41.093294],[121.692102,41.096637],[121.672583,41.090237],[121.680154,41.084793],[121.666888,41.059809],[121.6473,41.062484],[121.651189,41.05417],[121.662789,41.050491],[121.661261,41.034385],[121.667165,41.027167],[121.676334,41.007756],[121.673417,40.991974],[121.666818,40.98566],[121.662164,40.969873],[121.663553,40.959298],[121.650981,40.952694],[121.647786,40.937761],[121.628754,40.908076],[121.618682,40.907837],[121.59708,40.896581],[121.584507,40.885708],[121.571032,40.867932],[121.56742,40.859162],[121.555125,40.849624]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":211200,\"name\":\"铁岭市\",\"center\":[123.844279,42.290585],\"centroid\":[124.176584,42.648938],\"childrenNum\":7,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":11,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[123.790021,41.989242],[123.80169,41.994093],[123.813915,42.007655],[123.842811,42.022909],[123.875457,42.028746],[123.880667,42.033123],[123.905742,42.031146],[123.92658,42.018766],[123.940194,42.023803],[123.950336,42.018625],[123.943529,42.008738],[123.954781,42.005631],[123.985969,42.005819],[124.004307,42.01161],[124.024381,42.011657],[124.034175,42.018907],[124.03994,42.045124],[124.067446,42.064367],[124.07988,42.065543],[124.095231,42.073446],[124.140797,42.068083],[124.164622,42.056793],[124.174416,42.055711],[124.191572,42.058957],[124.207618,42.055334],[124.234291,42.058157],[124.25374,42.067284],[124.264645,42.064602],[124.268604,42.046018],[124.275828,42.043147],[124.275689,42.036935],[124.285275,42.027428],[124.281177,42.020885],[124.283816,42.013117],[124.279926,42.00742],[124.294721,42.006054],[124.313267,42.015235],[124.33737,42.016601],[124.341955,42.009397],[124.35154,42.012222],[124.369044,42.022391],[124.366752,42.032888],[124.383978,42.033923],[124.408637,42.044041],[124.414124,42.050112],[124.423501,42.052182],[124.447604,42.067801],[124.497408,42.079654],[124.520121,42.087884],[124.550128,42.11896],[124.541446,42.131039],[124.543043,42.137477],[124.560061,42.155048],[124.561172,42.16402],[124.543946,42.176982],[124.536514,42.192899],[124.52797,42.202476],[124.516023,42.236733],[124.536722,42.257888],[124.553323,42.270034],[124.561033,42.282318],[124.564784,42.303739],[124.577843,42.321076],[124.569508,42.341641],[124.574648,42.351476],[124.59361,42.351008],[124.605141,42.345294],[124.628202,42.348432],[124.634523,42.345903],[124.62584,42.334475],[124.625701,42.327261],[124.647859,42.316344],[124.661126,42.315641],[124.679394,42.319577],[124.695995,42.317141],[124.712944,42.325106],[124.725586,42.324497],[124.732462,42.335693],[124.751494,42.338316],[124.763511,42.343093],[124.774625,42.336957],[124.787058,42.33958],[124.797061,42.359718],[124.787822,42.365523],[124.7856,42.382376],[124.777612,42.380551],[124.772055,42.391362],[124.775597,42.400347],[124.786016,42.409237],[124.800395,42.415881],[124.820399,42.411296],[124.821719,42.418266],[124.853185,42.412278],[124.864021,42.407787],[124.886248,42.41022],[124.895278,42.398242],[124.925077,42.396884],[124.931259,42.40278],[124.944734,42.400768],[124.952236,42.389116],[124.960988,42.384436],[124.956959,42.371329],[124.974255,42.368145],[124.985299,42.379146],[124.990717,42.37292],[125.005859,42.378444],[124.997732,42.392579],[125.004748,42.401845],[125.024336,42.401891],[125.036491,42.405541],[125.041562,42.414618],[125.03663,42.420231],[125.036214,42.438098],[125.057746,42.445533],[125.063164,42.450536],[125.079904,42.457315],[125.078446,42.464842],[125.099006,42.478023],[125.107966,42.478864],[125.105049,42.49064],[125.085253,42.500872],[125.068999,42.49961],[125.066776,42.502787],[125.078446,42.506571],[125.081085,42.513298],[125.089907,42.51241],[125.088934,42.518622],[125.067262,42.534406],[125.077334,42.54211],[125.076292,42.558075],[125.091504,42.572356],[125.084489,42.593025],[125.095533,42.599789],[125.089837,42.606505],[125.099631,42.613221],[125.097408,42.622081],[125.086225,42.625764],[125.072194,42.625158],[125.061914,42.620915],[125.055107,42.624039],[125.038436,42.615413],[125.028781,42.617698],[125.028642,42.623014],[125.010721,42.632478],[125.019335,42.652754],[125.012805,42.660211],[125.014403,42.666128],[124.996135,42.670461],[124.99037,42.677263],[124.968489,42.67349],[124.967586,42.680198],[124.985855,42.686673],[124.989258,42.695103],[124.978909,42.709539],[124.977172,42.716476],[124.968281,42.722715],[124.98002,42.729139],[124.985855,42.726997],[124.996413,42.745428],[124.980367,42.752547],[124.983007,42.760783],[124.988216,42.759806],[124.992662,42.773017],[124.987591,42.780552],[124.980159,42.781436],[124.975574,42.802035],[124.955987,42.807335],[124.948832,42.806266],[124.93105,42.819049],[124.915908,42.817794],[124.914935,42.803895],[124.906669,42.793573],[124.897779,42.787993],[124.887221,42.790876],[124.874857,42.78976],[124.868813,42.797711],[124.867077,42.80766],[124.858811,42.820304],[124.858742,42.840519],[124.855408,42.851112],[124.857005,42.863421],[124.849295,42.88209],[124.85638,42.886129],[124.850684,42.892304],[124.852212,42.899221],[124.860061,42.904698],[124.859922,42.914212],[124.86666,42.918528],[124.864507,42.926741],[124.869716,42.936438],[124.864924,42.939407],[124.869439,42.954667],[124.867563,42.96167],[124.874995,42.968811],[124.868536,42.973215],[124.872148,42.984388],[124.861867,42.990506],[124.857561,43.001537],[124.86159,43.002186],[124.855963,43.013909],[124.844433,43.02614],[124.844433,43.035172],[124.863118,43.034014],[124.857422,43.040081],[124.858255,43.05101],[124.868605,43.054252],[124.877288,43.068002],[124.887498,43.073788],[124.883817,43.093596],[124.879441,43.099704],[124.881872,43.1109],[124.893819,43.117931],[124.895,43.131158],[124.881247,43.133331],[124.873328,43.125932],[124.857561,43.119457],[124.841863,43.126996],[124.822622,43.124452],[124.819566,43.119873],[124.807896,43.117514],[124.802131,43.122371],[124.785461,43.116543],[124.785391,43.106551],[124.778167,43.098223],[124.758579,43.086285],[124.754481,43.073742],[124.738644,43.068141],[124.718501,43.069992],[124.695092,43.057261],[124.686201,43.050408],[124.674393,43.026557],[124.678283,43.013353],[124.677727,43.002695],[124.67092,42.990043],[124.660362,42.983183],[124.65939,42.972937],[124.652791,42.976229],[124.635704,42.973401],[124.633828,42.958145],[124.639177,42.95527],[124.622923,42.949055],[124.622645,42.941634],[124.608197,42.937783],[124.602432,42.930871],[124.603752,42.923725],[124.593333,42.911846],[124.563187,42.889008],[124.544293,42.886454],[124.538528,42.86709],[124.532902,42.871549],[124.514703,42.873638],[124.501575,42.86514],[124.480181,42.858544],[124.466289,42.846605],[124.472749,42.828019],[124.465664,42.822581],[124.452258,42.825928],[124.454689,42.852505],[124.446076,42.865465],[124.437532,42.867926],[124.440867,42.875775],[124.434546,42.880882],[124.426836,42.874521],[124.415444,42.879211],[124.371753,42.880975],[124.366474,42.891886],[124.366822,42.902841],[124.381061,42.91282],[124.388007,42.910082],[124.397801,42.915141],[124.400927,42.921962],[124.413916,42.922426],[124.414819,42.926417],[124.431906,42.930871],[124.442186,42.941402],[124.441631,42.959861],[124.429892,42.966399],[124.422112,42.97609],[124.402316,42.97099],[124.384465,42.970712],[124.360779,42.975904],[124.34772,42.988328],[124.333411,42.99732],[124.340565,43.004827],[124.369808,43.025491],[124.425933,43.076288],[124.421348,43.082629],[124.396829,43.092532],[124.381617,43.107754],[124.362307,43.122695],[124.340565,43.128615],[124.329243,43.142903],[124.308891,43.155062],[124.302987,43.148867],[124.292499,43.154322],[124.300487,43.158529],[124.283955,43.166016],[124.273814,43.178771],[124.282149,43.188982],[124.277565,43.196143],[124.287706,43.206906],[124.28069,43.216235],[124.282844,43.220622],[124.276314,43.233411],[124.268326,43.230641],[124.253184,43.237335],[124.24346,43.233411],[124.229776,43.234796],[124.227067,43.24209],[124.219218,43.241444],[124.216023,43.256121],[124.199491,43.245829],[124.190044,43.246521],[124.178375,43.242228],[124.172471,43.249567],[124.168373,43.244075],[124.154828,43.253583],[124.148715,43.250952],[124.132878,43.25529],[124.129336,43.247814],[124.114402,43.247306],[124.11725,43.263043],[124.111762,43.269134],[124.11718,43.2773],[124.111415,43.281175],[124.098634,43.281129],[124.10308,43.288556],[124.098287,43.292891],[124.066057,43.292661],[124.043135,43.287587],[124.032994,43.280898],[123.992776,43.308571],[123.98715,43.315671],[123.961866,43.338811],[123.964228,43.340839],[123.946863,43.350747],[123.922968,43.360422],[123.911577,43.358211],[123.895879,43.361528],[123.901366,43.37917],[123.892267,43.390131],[123.865941,43.395656],[123.863649,43.400905],[123.853021,43.405647],[123.849687,43.415636],[123.854897,43.423644],[123.855661,43.436759],[123.872331,43.451344],[123.857606,43.459163],[123.861148,43.461785],[123.849271,43.470109],[123.845798,43.467488],[123.833503,43.473558],[123.825932,43.471489],[123.804468,43.482433],[123.79787,43.489559],[123.786964,43.479812],[123.773975,43.480318],[123.771405,43.484042],[123.74626,43.471213],[123.753207,43.464545],[123.751956,43.454702],[123.74369,43.443845],[123.7489,43.439842],[123.734313,43.427234],[123.71021,43.417201],[123.710002,43.404726],[123.703056,43.402654],[123.705695,43.396991],[123.699444,43.390131],[123.708891,43.383776],[123.698541,43.382486],[123.705001,43.377328],[123.704654,43.364108],[123.69611,43.356184],[123.720421,43.357658],[123.711391,43.354479],[123.713058,43.346553],[123.705695,43.344802],[123.704445,43.337152],[123.71417,43.331852],[123.703334,43.327796],[123.709168,43.319728],[123.719727,43.319129],[123.716601,43.311614],[123.700625,43.311291],[123.703889,43.297872],[123.69604,43.294921],[123.696388,43.28136],[123.705487,43.278084],[123.698541,43.272225],[123.686455,43.277392],[123.678259,43.271118],[123.666936,43.268211],[123.665408,43.257829],[123.675758,43.241121],[123.667978,43.235904],[123.676869,43.224177],[123.657907,43.221591],[123.646376,43.213233],[123.655823,43.194203],[123.665408,43.193371],[123.667978,43.180943],[123.659504,43.174751],[123.649849,43.175398],[123.648738,43.166479],[123.653392,43.158713],[123.643389,43.143874],[123.635193,43.137771],[123.638249,43.124822],[123.629706,43.119318],[123.633456,43.112195],[123.627691,43.100583],[123.631234,43.088969],[123.625746,43.079111],[123.616161,43.077445],[123.605325,43.06416],[123.596295,43.062447],[123.598309,43.056937],[123.611507,43.049297],[123.594628,43.039711],[123.590044,43.032069],[123.580805,43.036052],[123.585668,43.024287],[123.581083,43.01933],[123.588585,43.015855],[123.583028,43.010202],[123.573442,43.010434],[123.572678,43.0039],[123.561912,43.005383],[123.566496,42.988142],[123.554132,42.984388],[123.546839,42.977341],[123.554896,42.961206],[123.566496,42.951652],[123.582125,42.950075],[123.584348,42.943906],[123.603519,42.930268],[123.601088,42.923354],[123.588793,42.921823],[123.584973,42.910546],[123.598587,42.905162],[123.59956,42.893511],[123.584348,42.884829],[123.583931,42.875357],[123.600949,42.870481],[123.603519,42.866347],[123.585668,42.852598],[123.593378,42.847442],[123.593655,42.838846],[123.605325,42.829274],[123.591988,42.823418],[123.594697,42.807939],[123.600602,42.796595],[123.593864,42.789248],[123.603519,42.77911],[123.598865,42.771622],[123.586084,42.77511],[123.57761,42.76804],[123.586848,42.760178],[123.585598,42.752501],[123.575387,42.751152],[123.57247,42.741426],[123.559342,42.729464],[123.559481,42.724763],[123.57122,42.712007],[123.582611,42.70628],[123.569344,42.692868],[123.583306,42.688443],[123.587821,42.67731],[123.578999,42.676937],[123.592614,42.663705],[123.60338,42.670555],[123.611298,42.680291],[123.625746,42.6754],[123.625607,42.664078],[123.61887,42.655084],[123.624079,42.647441],[123.637068,42.63989],[123.662908,42.629028],[123.664714,42.623666],[123.651586,42.618397],[123.662491,42.6149],[123.673813,42.602028],[123.69479,42.603287],[123.701528,42.593725],[123.691109,42.592839],[123.694721,42.578516],[123.710349,42.579589],[123.712433,42.566243],[123.723894,42.567456],[123.730771,42.562556],[123.72577,42.555415],[123.737092,42.553128],[123.742093,42.559196],[123.758555,42.553968],[123.752859,42.543044],[123.736814,42.542671],[123.703889,42.52997],[123.683885,42.510028],[123.679439,42.516334],[123.657629,42.521144],[123.668256,42.530624],[123.662908,42.539869],[123.663811,42.55182],[123.653947,42.550187],[123.643737,42.553081],[123.624149,42.543744],[123.621787,42.534173],[123.613313,42.53548],[123.616786,42.525207],[123.608937,42.509327],[123.584,42.512644],[123.583028,42.502787],[123.571567,42.506478],[123.566427,42.498956],[123.558647,42.499984],[123.554341,42.493256],[123.542185,42.490593],[123.534197,42.482042],[123.52225,42.487322],[123.5094,42.470077],[123.496341,42.463299],[123.479045,42.464935],[123.473419,42.4561],[123.454456,42.441184],[123.455151,42.43272],[123.479115,42.414384],[123.472238,42.397961],[123.476545,42.397399],[123.465848,42.381674],[123.482449,42.371469],[123.487936,42.363042],[123.499675,42.363417],[123.505788,42.353724],[123.516971,42.349462],[123.522875,42.339815],[123.52864,42.339674],[123.528085,42.321639],[123.51579,42.298255],[123.497939,42.275988],[123.48238,42.27144],[123.473628,42.261921],[123.468765,42.249446],[123.476753,42.233073],[123.465223,42.230258],[123.449594,42.204729],[123.458138,42.200176],[123.469599,42.181537],[123.487242,42.180504],[123.504815,42.192289],[123.521416,42.191021],[123.53517,42.181584],[123.542046,42.182241],[123.540518,42.155706],[123.541768,42.147015],[123.556147,42.144619],[123.574901,42.132308],[123.589974,42.129441],[123.608728,42.119337],[123.620954,42.115764],[123.631164,42.107679],[123.632206,42.100956],[123.647418,42.100862],[123.662213,42.09395],[123.678189,42.098417],[123.704862,42.09127],[123.705626,42.085956],[123.727228,42.076362],[123.735147,42.065402],[123.746122,42.065355],[123.75529,42.05731],[123.752026,42.052935],[123.779879,42.041877],[123.783144,42.037688],[123.789118,42.043947],[123.789465,42.052982],[123.794744,42.060086],[123.80433,42.058157],[123.805858,42.051335],[123.813151,42.050112],[123.808219,42.03557],[123.813568,42.030581],[123.810095,42.022062],[123.797175,42.013635],[123.788354,42.019567],[123.773211,42.023568],[123.763695,42.017825],[123.762792,41.999085],[123.769391,42.002664],[123.771058,41.995977],[123.790021,41.989242]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":211300,\"name\":\"朝阳市\",\"center\":[120.451176,41.576758],\"centroid\":[120.021858,41.516568],\"childrenNum\":7,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":12,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[121.027503,42.243394],[121.006456,42.254839],[121.012221,42.259014],[120.992842,42.264407],[120.984576,42.261593],[120.970267,42.262343],[120.961584,42.266142],[120.959709,42.273363],[120.933106,42.27927],[120.930188,42.274535],[120.912545,42.272238],[120.905599,42.267971],[120.890109,42.271816],[120.88226,42.26586],[120.892054,42.254558],[120.883094,42.242832],[120.867049,42.251791],[120.834749,42.24771],[120.829401,42.252494],[120.823775,42.241143],[120.827734,42.234903],[120.820857,42.228053],[120.804187,42.225707],[120.790503,42.218527],[120.745284,42.223501],[120.73813,42.22078],[120.722084,42.203696],[120.696662,42.198157],[120.68916,42.187876],[120.650887,42.169985],[120.6247,42.154531],[120.584205,42.167167],[120.567673,42.151948],[120.551003,42.143397],[120.536208,42.140296],[120.494879,42.120042],[120.480917,42.115764],[120.466539,42.105328],[120.469525,42.097806],[120.480153,42.091082],[120.487933,42.09569],[120.498629,42.092116],[120.496337,42.087931],[120.482862,42.086003],[120.493489,42.072975],[120.482931,42.063614],[120.450841,42.05731],[120.453133,42.037971],[120.451744,42.022862],[120.456467,42.016318],[120.438407,42.006148],[120.42771,42.007373],[120.422987,42.001534],[120.41097,41.996778],[120.422014,41.986181],[120.399579,41.984815],[120.373531,41.994706],[120.346302,41.977938],[120.332827,41.979162],[120.336508,41.971248],[120.33241,41.963521],[120.309905,41.951835],[120.310461,41.941608],[120.31699,41.938968],[120.307821,41.927089],[120.304279,41.934867],[120.286913,41.93482],[120.280662,41.925628],[120.290317,41.918555],[120.280593,41.916858],[120.273091,41.92591],[120.266839,41.914878],[120.269965,41.908606],[120.260449,41.904739],[120.273855,41.89856],[120.291567,41.896532],[120.30018,41.887947],[120.288164,41.880399],[120.274549,41.883183],[120.251627,41.883985],[120.228011,41.865913],[120.215994,41.85336],[120.188418,41.848215],[120.183487,41.842314],[120.18307,41.826498],[120.163135,41.80893],[120.149243,41.792255],[120.127154,41.772646],[120.123751,41.762106],[120.131252,41.736861],[120.138268,41.729295],[120.131391,41.721965],[120.11354,41.713167],[120.104927,41.702334],[120.096175,41.697083],[120.071725,41.697556],[120.044079,41.708626],[120.035258,41.708863],[120.036508,41.725323],[120.0247,41.738233],[120.035952,41.7475],[120.037272,41.763808],[120.044288,41.765982],[120.05172,41.776096],[120.043176,41.774442],[120.033591,41.779451],[120.042898,41.787814],[120.045885,41.804065],[120.041787,41.818754],[120.048733,41.825979],[120.023797,41.81592],[120.017962,41.82867],[120.006432,41.862185],[119.995248,41.868037],[119.991914,41.874313],[119.991845,41.894645],[119.978161,41.908983],[119.961768,41.913557],[119.954475,41.920394],[119.960101,41.937884],[119.956489,41.961966],[119.950724,41.974263],[119.924468,41.989195],[119.927802,41.999179],[119.921273,42.014247],[119.907659,42.018766],[119.897239,42.030958],[119.902727,42.041312],[119.900226,42.045971],[119.883486,42.053782],[119.882583,42.066155],[119.869733,42.083464],[119.84563,42.097289],[119.842227,42.103542],[119.842504,42.125728],[119.837851,42.135268],[119.839796,42.148706],[119.85473,42.170172],[119.856952,42.182898],[119.852924,42.209798],[119.846742,42.215242],[119.806038,42.213083],[119.790965,42.215242],[119.788395,42.211394],[119.765681,42.214397],[119.744565,42.211628],[119.732757,42.221859],[119.721504,42.220029],[119.719906,42.229461],[119.704069,42.223501],[119.680036,42.240721],[119.64225,42.240627],[119.634678,42.25104],[119.626482,42.255449],[119.617035,42.252635],[119.608908,42.276692],[119.584597,42.27852],[119.582791,42.285599],[119.573275,42.280583],[119.565704,42.294365],[119.554243,42.289115],[119.553479,42.294084],[119.541393,42.292162],[119.543824,42.306972],[119.557369,42.319249],[119.553201,42.324778],[119.565704,42.328198],[119.57133,42.335693],[119.572164,42.359343],[119.54431,42.366366],[119.539934,42.363417],[119.502356,42.388039],[119.498952,42.372078],[119.489575,42.353162],[119.48256,42.34698],[119.452692,42.332695],[119.438522,42.328151],[119.431923,42.316485],[119.422685,42.315548],[119.415669,42.309643],[119.393303,42.307956],[119.373715,42.299614],[119.362532,42.303083],[119.348223,42.300552],[119.337179,42.294224],[119.327593,42.282505],[119.305713,42.268768],[119.284458,42.265157],[119.278693,42.257325],[119.276192,42.242785],[119.271052,42.235325],[119.252089,42.218152],[119.247922,42.205761],[119.237919,42.20088],[119.249658,42.187829],[119.264592,42.189002],[119.276331,42.186044],[119.276331,42.174822],[119.282582,42.170924],[119.290084,42.152464],[119.307449,42.148189],[119.304393,42.129018],[119.315993,42.119243],[119.35239,42.118208],[119.362532,42.109418],[119.373506,42.106457],[119.377952,42.095972],[119.385037,42.08953],[119.384134,42.077303],[119.37816,42.062485],[119.383439,42.057875],[119.381008,42.040135],[119.376563,42.037265],[119.375382,42.023285],[119.349404,41.98976],[119.33051,41.977938],[119.324606,41.96894],[119.330371,41.957631],[119.330094,41.947075],[119.324259,41.940053],[119.326482,41.933736],[119.336553,41.931049],[119.340929,41.921903],[119.333497,41.911388],[119.336276,41.904692],[119.323773,41.890164],[119.328079,41.877002],[119.334053,41.872472],[119.325856,41.858268],[119.326551,41.850905],[119.316896,41.83495],[119.319466,41.831456],[119.312728,41.805718],[119.297378,41.795987],[119.290154,41.783373],[119.299878,41.771937],[119.317868,41.76395],[119.311964,41.750903],[119.300712,41.743859],[119.311895,41.741542],[119.319119,41.72764],[119.306338,41.720641],[119.2996,41.71014],[119.304115,41.694244],[119.313909,41.68194],[119.313354,41.664238],[119.308005,41.657468],[119.313006,41.640091],[119.319536,41.644022],[119.341277,41.623704],[119.343152,41.617072],[119.360656,41.608781],[119.379411,41.604801],[119.386357,41.598499],[119.397192,41.597409],[119.416711,41.589353],[119.419906,41.581533],[119.411293,41.580679],[119.419906,41.568686],[119.414349,41.562096],[119.403236,41.566505],[119.3924,41.56385],[119.387746,41.567122],[119.376702,41.564941],[119.362115,41.566505],[119.368783,41.556122],[119.362462,41.554462],[119.3717,41.536867],[119.383439,41.531697],[119.3833,41.52183],[119.394553,41.521972],[119.404903,41.510253],[119.405806,41.50304],[119.398512,41.503514],[119.404972,41.487709],[119.403444,41.475129],[119.378021,41.459745],[119.372326,41.436186],[119.376285,41.422123],[119.365032,41.42103],[119.348917,41.411004],[119.322383,41.405681],[119.30988,41.405966],[119.309464,41.396365],[119.330649,41.385145],[119.325856,41.374019],[119.318007,41.369169],[119.331066,41.340963],[119.326273,41.329401],[119.314257,41.334017],[119.314604,41.348194],[119.306338,41.33178],[119.296336,41.325166],[119.270218,41.323358],[119.252089,41.325642],[119.240211,41.319075],[119.241184,41.298893],[119.246671,41.292085],[119.248338,41.276657],[119.230973,41.256463],[119.219443,41.256701],[119.215553,41.244695],[119.20951,41.244505],[119.209788,41.225777],[119.197493,41.222203],[119.16964,41.222918],[119.166514,41.212956],[119.185199,41.203755],[119.18888,41.198177],[119.184296,41.182727],[119.178947,41.177815],[119.158595,41.169658],[119.13609,41.145279],[119.126366,41.138646],[119.088648,41.136069],[119.081216,41.131439],[119.079341,41.109481],[119.08066,41.095968],[119.073784,41.08422],[119.059822,41.077628],[119.050862,41.080351],[119.04211,41.075717],[119.037525,41.067357],[119.028357,41.063726],[119.029607,41.070272],[119.008352,41.068599],[118.98675,41.077341],[118.969871,41.076529],[118.964314,41.079204],[118.946532,41.058996],[118.937085,41.052832],[118.936182,41.037492],[118.941253,41.02774],[118.952019,41.018418],[118.960702,41.01598],[119.000017,41.010864],[119.013562,41.007612],[119.020438,40.997857],[119.005087,40.984273],[119.000572,40.96705],[118.992584,40.967433],[118.97126,40.959968],[118.946463,40.95815],[118.917011,40.968629],[118.903466,40.961787],[118.899368,40.954034],[118.900063,40.942644],[118.89395,40.93149],[118.894506,40.924787],[118.88631,40.925027],[118.891728,40.903383],[118.889991,40.890115],[118.880822,40.862709],[118.87339,40.856958],[118.872973,40.848043],[118.855052,40.840612],[118.852343,40.826277],[118.846231,40.822105],[118.849079,40.800955],[118.861512,40.802682],[118.865958,40.794527],[118.876099,40.790162],[118.87853,40.783253],[118.892978,40.777879],[118.901313,40.781238],[118.910968,40.776775],[118.895478,40.754026],[118.906939,40.75657],[118.92236,40.751482],[118.943684,40.749994],[118.955076,40.742793],[118.960841,40.720561],[118.982096,40.706872],[118.987722,40.697937],[119.001823,40.696015],[119.01245,40.687223],[119.027315,40.69246],[119.048709,40.681505],[119.054543,40.664732],[119.063156,40.662953],[119.070033,40.670067],[119.081563,40.671893],[119.095108,40.663338],[119.115113,40.66651],[119.138174,40.678573],[119.153316,40.688712],[119.165541,40.692748],[119.176238,40.690154],[119.185824,40.675738],[119.173182,40.654301],[119.14512,40.634588],[119.158873,40.618861],[119.157623,40.605152],[119.162555,40.600052],[119.178183,40.609337],[119.185407,40.609818],[119.206454,40.603805],[119.230834,40.603853],[119.235905,40.597117],[119.24681,40.608038],[119.250839,40.617515],[119.260494,40.619631],[119.265912,40.609193],[119.27779,40.606595],[119.296475,40.614148],[119.295849,40.620208],[119.323634,40.643435],[119.333011,40.657281],[119.345861,40.669154],[119.363782,40.679486],[119.374757,40.681361],[119.390316,40.67915],[119.404903,40.685445],[119.419489,40.696112],[119.426088,40.70865],[119.42588,40.719216],[119.432131,40.730838],[119.459638,40.75321],[119.454359,40.755466],[119.464222,40.764634],[119.478948,40.760074],[119.494646,40.763578],[119.505273,40.771017],[119.515553,40.797837],[119.527153,40.808342],[119.531321,40.816399],[119.528126,40.834812],[119.535141,40.837065],[119.549311,40.833229],[119.572928,40.818269],[119.585639,40.822297],[119.608561,40.840277],[119.638082,40.829921],[119.647806,40.816591],[119.658087,40.808534],[119.658087,40.808534],[119.660657,40.793328],[119.670451,40.782245],[119.684412,40.78047],[119.691358,40.791265],[119.691358,40.798941],[119.699138,40.803306],[119.711154,40.818557],[119.712405,40.826229],[119.695387,40.824024],[119.69504,40.835627],[119.705459,40.840756],[119.706223,40.849385],[119.715183,40.861223],[119.728033,40.860121],[119.741439,40.86774],[119.747274,40.858539],[119.763945,40.858539],[119.781171,40.846605],[119.785894,40.856287],[119.795271,40.854465],[119.802356,40.870136],[119.815832,40.872245],[119.826181,40.886378],[119.826042,40.896102],[119.818957,40.929719],[119.832433,40.936134],[119.834864,40.928426],[119.850145,40.928761],[119.859453,40.924404],[119.8689,40.912482],[119.895225,40.913392],[119.908006,40.909992],[119.917175,40.931969],[119.932734,40.937713],[119.938916,40.947047],[119.951905,40.947191],[119.959962,40.933596],[119.967395,40.927995],[119.979967,40.933213],[119.99629,40.948579],[120.006362,40.964658],[120.007057,40.977719],[120.016295,40.983938],[120.015948,40.989917],[120.023658,40.993217],[120.02977,41.003021],[120.023519,41.008234],[120.018726,41.027454],[120.018101,41.039881],[120.009002,41.043275],[120.004626,41.062054],[119.993651,41.067118],[119.999485,41.075574],[120.015392,41.081019],[120.022685,41.080446],[120.028798,41.086321],[120.056721,41.091575],[120.062417,41.10165],[120.078601,41.100886],[120.0852,41.093007],[120.099439,41.088375],[120.112845,41.087802],[120.119236,41.076291],[120.110761,41.070367],[120.108747,41.063057],[120.119791,41.060669],[120.12764,41.04791],[120.146186,41.006991],[120.153757,41.010625],[120.170497,41.02731],[120.178624,41.027501],[120.188557,41.001013],[120.199185,41.001013],[120.205019,40.9914],[120.204464,40.973988],[120.193281,40.96882],[120.190016,40.956906],[120.173762,40.955183],[120.176402,40.948961],[120.166886,40.943649],[120.169247,40.926942],[120.179875,40.922202],[120.196823,40.923543],[120.203908,40.93283],[120.208284,40.946712],[120.218425,40.956954],[120.239125,40.951067],[120.252183,40.959011],[120.257045,40.945372],[120.266909,40.947573],[120.279481,40.945659],[120.290873,40.96193],[120.290525,40.973031],[120.30407,40.973318],[120.30539,40.985038],[120.318379,40.994317],[120.320532,41.000439],[120.328937,41.001348],[120.33505,40.995609],[120.338314,41.002735],[120.348595,41.001013],[120.339495,40.996804],[120.381936,40.973557],[120.388326,40.972839],[120.399926,40.955805],[120.406594,40.953269],[120.418958,40.956427],[120.42514,40.96394],[120.444867,40.977719],[120.454383,40.990778],[120.451813,40.998],[120.459037,41.001013],[120.455494,41.015167],[120.457439,41.030178],[120.4548,41.051494],[120.456675,41.058662],[120.477027,41.077628],[120.49724,41.079013],[120.507729,41.068122],[120.527525,41.062245],[120.536069,41.066975],[120.537527,41.092625],[120.560866,41.098642],[120.598653,41.105661],[120.603446,41.117788],[120.602543,41.127812],[120.613309,41.143466],[120.611572,41.15549],[120.615045,41.16131],[120.63637,41.168752],[120.64026,41.18411],[120.657277,41.183347],[120.664154,41.177815],[120.676726,41.18101],[120.690202,41.195507],[120.701385,41.199035],[120.698259,41.184444],[120.727224,41.187067],[120.735976,41.194458],[120.746604,41.198129],[120.7639,41.18988],[120.771471,41.194219],[120.763761,41.195745],[120.769317,41.202325],[120.76383,41.210048],[120.752647,41.213003],[120.742714,41.221297],[120.734448,41.218199],[120.720348,41.219581],[120.720626,41.22816],[120.730697,41.230972],[120.738407,41.240264],[120.746882,41.241217],[120.763969,41.248745],[120.769734,41.248554],[120.764038,41.261559],[120.755981,41.261559],[120.753272,41.26818],[120.737504,41.270943],[120.733337,41.2748],[120.737366,41.288467],[120.749243,41.292085],[120.755564,41.302416],[120.751605,41.307938],[120.748201,41.32431],[120.756606,41.337062],[120.752716,41.341962],[120.758829,41.357422],[120.770082,41.358278],[120.774527,41.368266],[120.768414,41.36955],[120.77029,41.376587],[120.778903,41.378489],[120.791336,41.396079],[120.79995,41.395319],[120.815995,41.405681],[120.805506,41.42141],[120.812036,41.425972],[120.819746,41.421458],[120.822385,41.409673],[120.833082,41.398171],[120.843015,41.404588],[120.842043,41.418274],[120.849753,41.423834],[120.864687,41.416231],[120.870799,41.421315],[120.883719,41.421173],[120.876009,41.435189],[120.878579,41.449582],[120.877537,41.476554],[120.893582,41.475699],[120.897472,41.471473],[120.904974,41.481159],[120.896986,41.485431],[120.902265,41.50005],[120.901223,41.512293],[120.906016,41.523443],[120.91456,41.527855],[120.924354,41.524866],[120.92616,41.531128],[120.936509,41.531128],[120.940121,41.537579],[120.957347,41.541326],[120.956375,41.545073],[120.981728,41.566695],[120.97374,41.583666],[120.976032,41.5994],[120.984159,41.600442],[120.997218,41.596035],[121.005067,41.604612],[121.014444,41.60826],[121.030698,41.607218],[121.04848,41.616125],[121.056051,41.626214],[121.06258,41.621099],[121.067442,41.629577],[121.072235,41.624604],[121.066956,41.618304],[121.09349,41.615982],[121.105715,41.624178],[121.111272,41.619441],[121.123914,41.633366],[121.122247,41.63886],[121.139265,41.648331],[121.147114,41.649278],[121.146905,41.658605],[121.156283,41.671055],[121.167118,41.666984],[121.173926,41.673847],[121.17844,41.664806],[121.194208,41.678059],[121.20164,41.673752],[121.210531,41.677965],[121.224493,41.678059],[121.226716,41.688707],[121.218102,41.689606],[121.233453,41.721539],[121.22227,41.730619],[121.215949,41.740218],[121.227549,41.753456],[121.226785,41.763241],[121.261307,41.774489],[121.256097,41.778789],[121.263669,41.794523],[121.272699,41.803593],[121.268392,41.82069],[121.277283,41.826876],[121.290689,41.856286],[121.301941,41.86563],[121.298885,41.884079],[121.292564,41.889881],[121.26353,41.89823],[121.238524,41.903607],[121.212962,41.914925],[121.199834,41.955464],[121.192055,41.966113],[121.163159,41.977514],[121.149962,41.976996],[121.104882,41.964935],[121.079529,41.973651],[121.074527,41.978786],[121.053967,41.977938],[121.041534,41.980152],[121.039311,41.987735],[121.050563,42.005113],[121.05487,42.018484],[121.052717,42.03124],[121.044451,42.051476],[121.046118,42.058863],[121.066748,42.071564],[121.074597,42.101896],[121.08453,42.111205],[121.078,42.136443],[121.072513,42.143115],[121.071541,42.154062],[121.055356,42.175291],[121.055009,42.187688],[121.050841,42.19243],[121.057579,42.207874],[121.055842,42.219137],[121.047368,42.229742],[121.033615,42.23678],[121.027503,42.243394]]]]}},{\"type\":\"Feature\",\"properties\":{\"adcode\":211400,\"name\":\"葫芦岛市\",\"center\":[120.856394,40.755572],\"centroid\":[120.21031,40.620597],\"childrenNum\":6,\"level\":\"city\",\"parent\":{\"adcode\":210000},\"subFeatureIndex\":13,\"acroutes\":[100000,210000]},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[121.030003,40.790545],[121.008748,40.843393],[121.00729,40.852884],[121.011596,40.863955],[121.02007,40.868219],[121.030628,40.884031],[121.033962,40.907166],[121.029031,40.913296],[121.036394,40.922394],[121.023613,40.928187],[121.036949,40.933884],[121.034171,40.943649],[121.024655,40.942261],[121.02521,40.95011],[121.017292,40.942261],[121.00986,40.956092],[121.015625,40.957145],[121.015972,40.973318],[121.011666,40.972887],[121.016736,40.99867],[121.032295,41.033668],[121.034726,41.050491],[121.006664,41.035819],[120.99055,41.033381],[120.980269,41.040837],[120.982978,41.045377],[120.964293,41.050108],[120.954986,41.045903],[120.944706,41.051877],[120.942761,41.061433],[120.948456,41.090046],[120.943664,41.099454],[120.938315,41.123803],[120.930605,41.117549],[120.914073,41.123659],[120.90935,41.121082],[120.898584,41.130962],[120.910114,41.134923],[120.907683,41.145661],[120.895805,41.144659],[120.888581,41.15153],[120.876078,41.156062],[120.850725,41.14065],[120.842876,41.132155],[120.834472,41.131535],[120.825233,41.140889],[120.805923,41.147379],[120.805576,41.158114],[120.788489,41.161835],[120.784251,41.170278],[120.795851,41.182441],[120.786752,41.20099],[120.781195,41.202658],[120.771471,41.194219],[120.7639,41.18988],[120.746604,41.198129],[120.735976,41.194458],[120.727224,41.187067],[120.698259,41.184444],[120.701385,41.199035],[120.690202,41.195507],[120.676726,41.18101],[120.664154,41.177815],[120.657277,41.183347],[120.64026,41.18411],[120.63637,41.168752],[120.615045,41.16131],[120.611572,41.15549],[120.613309,41.143466],[120.602543,41.127812],[120.603446,41.117788],[120.598653,41.105661],[120.560866,41.098642],[120.537527,41.092625],[120.536069,41.066975],[120.527525,41.062245],[120.507729,41.068122],[120.49724,41.079013],[120.477027,41.077628],[120.456675,41.058662],[120.4548,41.051494],[120.457439,41.030178],[120.455494,41.015167],[120.459037,41.001013],[120.451813,40.998],[120.454383,40.990778],[120.444867,40.977719],[120.42514,40.96394],[120.418958,40.956427],[120.406594,40.953269],[120.399926,40.955805],[120.388326,40.972839],[120.381936,40.973557],[120.339495,40.996804],[120.348595,41.001013],[120.338314,41.002735],[120.33505,40.995609],[120.328937,41.001348],[120.320532,41.000439],[120.318379,40.994317],[120.30539,40.985038],[120.30407,40.973318],[120.290525,40.973031],[120.290873,40.96193],[120.279481,40.945659],[120.266909,40.947573],[120.257045,40.945372],[120.252183,40.959011],[120.239125,40.951067],[120.218425,40.956954],[120.208284,40.946712],[120.203908,40.93283],[120.196823,40.923543],[120.179875,40.922202],[120.169247,40.926942],[120.166886,40.943649],[120.176402,40.948961],[120.173762,40.955183],[120.190016,40.956906],[120.193281,40.96882],[120.204464,40.973988],[120.205019,40.9914],[120.199185,41.001013],[120.188557,41.001013],[120.178624,41.027501],[120.170497,41.02731],[120.153757,41.010625],[120.146186,41.006991],[120.12764,41.04791],[120.119791,41.060669],[120.108747,41.063057],[120.110761,41.070367],[120.119236,41.076291],[120.112845,41.087802],[120.099439,41.088375],[120.0852,41.093007],[120.078601,41.100886],[120.062417,41.10165],[120.056721,41.091575],[120.028798,41.086321],[120.022685,41.080446],[120.015392,41.081019],[119.999485,41.075574],[119.993651,41.067118],[120.004626,41.062054],[120.009002,41.043275],[120.018101,41.039881],[120.018726,41.027454],[120.023519,41.008234],[120.02977,41.003021],[120.023658,40.993217],[120.015948,40.989917],[120.016295,40.983938],[120.007057,40.977719],[120.006362,40.964658],[119.99629,40.948579],[119.979967,40.933213],[119.967395,40.927995],[119.959962,40.933596],[119.951905,40.947191],[119.938916,40.947047],[119.932734,40.937713],[119.917175,40.931969],[119.908006,40.909992],[119.895225,40.913392],[119.8689,40.912482],[119.859453,40.924404],[119.850145,40.928761],[119.834864,40.928426],[119.832433,40.936134],[119.818957,40.929719],[119.826042,40.896102],[119.826181,40.886378],[119.815832,40.872245],[119.802356,40.870136],[119.795271,40.854465],[119.785894,40.856287],[119.781171,40.846605],[119.763945,40.858539],[119.747274,40.858539],[119.741439,40.86774],[119.728033,40.860121],[119.715183,40.861223],[119.706223,40.849385],[119.705459,40.840756],[119.69504,40.835627],[119.695387,40.824024],[119.712405,40.826229],[119.711154,40.818557],[119.699138,40.803306],[119.691358,40.798941],[119.691358,40.791265],[119.684412,40.78047],[119.670451,40.782245],[119.660657,40.793328],[119.658087,40.808534],[119.658087,40.808534],[119.647806,40.816591],[119.638082,40.829921],[119.608561,40.840277],[119.585639,40.822297],[119.572928,40.818269],[119.549311,40.833229],[119.535141,40.837065],[119.528126,40.834812],[119.531321,40.816399],[119.527153,40.808342],[119.515553,40.797837],[119.505273,40.771017],[119.494646,40.763578],[119.478948,40.760074],[119.464222,40.764634],[119.454359,40.755466],[119.459638,40.75321],[119.432131,40.730838],[119.42588,40.719216],[119.426088,40.70865],[119.419489,40.696112],[119.404903,40.685445],[119.390316,40.67915],[119.374757,40.681361],[119.363782,40.679486],[119.345861,40.669154],[119.333011,40.657281],[119.323634,40.643435],[119.295849,40.620208],[119.296475,40.614148],[119.27779,40.606595],[119.265912,40.609193],[119.260494,40.619631],[119.250839,40.617515],[119.24681,40.608038],[119.235905,40.597117],[119.232918,40.58937],[119.21979,40.578542],[119.220624,40.569109],[119.256118,40.543303],[119.27647,40.535021],[119.30217,40.530301],[119.338081,40.531264],[119.361837,40.537332],[119.381147,40.538921],[119.393719,40.537043],[119.441856,40.539885],[119.460541,40.534972],[119.477836,40.533335],[119.491034,40.536176],[119.503884,40.553945],[119.520277,40.547396],[119.534238,40.554233],[119.559036,40.54783],[119.572997,40.538536],[119.571955,40.523654],[119.555424,40.516814],[119.550909,40.509395],[119.553548,40.501783],[119.571747,40.488194],[119.575984,40.477349],[119.59071,40.47142],[119.604949,40.455029],[119.601754,40.445047],[119.593488,40.435643],[119.600434,40.406843],[119.591404,40.392945],[119.586681,40.375472],[119.599809,40.356547],[119.598142,40.334186],[119.616202,40.318341],[119.62287,40.301138],[119.64218,40.291327],[119.651905,40.272426],[119.642111,40.265077],[119.643986,40.259468],[119.633497,40.249409],[119.625162,40.224158],[119.639541,40.229722],[119.647667,40.229286],[119.666283,40.239252],[119.671562,40.23959],[119.676216,40.224497],[119.69629,40.208819],[119.716781,40.196091],[119.719281,40.204996],[119.73109,40.205771],[119.734076,40.200157],[119.745954,40.207948],[119.751233,40.187814],[119.752761,40.170481],[119.757554,40.158036],[119.75547,40.153145],[119.762625,40.13997],[119.755887,40.128052],[119.736716,40.10484],[119.762347,40.085596],[119.771585,40.082251],[119.760471,40.065619],[119.767556,40.059266],[119.770891,40.048789],[119.779782,40.049517],[119.796035,40.040155],[119.807635,40.044084],[119.816943,40.052864],[119.824375,40.047722],[119.835003,40.050245],[119.844658,40.037098],[119.854243,40.032295],[119.839796,40.006284],[119.846186,40.004828],[119.854243,39.988469],[119.864593,39.989925],[119.89071,39.987595],[119.913979,39.988469],[119.934748,40.001964],[119.94225,40.012108],[119.9435,40.029723],[119.94739,40.040252],[119.955864,40.046704],[119.973368,40.051166],[120.001361,40.054513],[120.025742,40.059848],[120.092215,40.077596],[120.123334,40.073766],[120.134309,40.07459],[120.161745,40.096019],[120.22037,40.109396],[120.272952,40.12718],[120.330743,40.155421],[120.371725,40.174549],[120.397634,40.179971],[120.450979,40.177647],[120.465149,40.178761],[120.483279,40.190379],[120.49731,40.210029],[120.511132,40.248442],[120.523913,40.256711],[120.524747,40.270589],[120.521413,40.292971],[120.521968,40.304666],[120.531832,40.321288],[120.537527,40.325394],[120.570243,40.336794],[120.595666,40.351669],[120.602334,40.360941],[120.601778,40.382472],[120.595596,40.390967],[120.596222,40.398978],[120.606571,40.404093],[120.615809,40.413212],[120.616435,40.444854],[120.622408,40.451943],[120.619005,40.459995],[120.639634,40.468142],[120.667002,40.467467],[120.676657,40.474313],[120.694022,40.505685],[120.709303,40.507853],[120.722015,40.515465],[120.724029,40.53112],[120.728127,40.539355],[120.772165,40.560203],[120.799324,40.575847],[120.822733,40.594134],[120.827525,40.606643],[120.831485,40.635405],[120.83718,40.651753],[120.830582,40.665309],[120.831624,40.674344],[120.847044,40.682274],[120.858505,40.68458],[120.876634,40.681216],[120.893096,40.685253],[120.942622,40.686935],[120.953944,40.696688],[120.971378,40.697505],[120.983534,40.71278],[121.010624,40.707209],[121.032295,40.709082],[121.039728,40.714173],[121.042506,40.726372],[121.035004,40.742409],[121.028753,40.746346],[120.994856,40.74673],[120.987702,40.743177],[120.979366,40.749658],[120.980478,40.76641],[120.996593,40.776823],[120.995829,40.78877],[120.990063,40.795007],[120.978186,40.797981],[120.971795,40.805704],[120.978463,40.811891],[120.979853,40.820427],[120.992842,40.808725],[121.007359,40.80767],[121.010971,40.784644],[121.023752,40.779126],[121.030003,40.790545]]],[[[120.786544,40.47359],[120.800505,40.486796],[120.82308,40.48723],[120.832804,40.492097],[120.831832,40.512575],[120.82183,40.517777],[120.822108,40.522787],[120.812383,40.521776],[120.806618,40.526833],[120.809466,40.516188],[120.802381,40.51296],[120.792934,40.515176],[120.793004,40.499711],[120.781056,40.498506],[120.775152,40.489495],[120.774458,40.480097],[120.786544,40.47359]]],[[[120.614837,40.396661],[120.620672,40.396323],[120.621366,40.406216],[120.614837,40.396661]]]]}}]}");

/***/ }),
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */
/*!********************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/newline.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.newLine = void 0; // 折线图
var newLine = function newLine(catedays, samedaydia, samedaycure, samedaydeath) {
  var chartData = {
    "categories": catedays,
    "series": [{
      "name": "新增确诊",
      "data": samedaydia },
    {
      "name": "新增治愈",
      "data": samedaycure },
    {
      "name": "新增死亡",
      "data": samedaydeath }] };


  return chartData;
};exports.newLine = newLine;

/***/ }),
/* 216 */
/*!**********************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/Linechart.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;} // 折线图的疫情数据
var moment = __webpack_require__(/*! moment */ 22);
moment.locale('zh-cn');var _console =
console,log = _console.log;var
Linechart = /*#__PURE__*/function () {"use strict";
  // catedays:日期
  // newdiag:确诊 || 治愈 || 死亡
  function Linechart(catedays, newdiag) {_classCallCheck(this, Linechart);
    this.catedays = catedays;
    this.newdiag = newdiag;
  }_createClass(Linechart, [{ key: "lineChartdata", value: function lineChartdata()

    {var _this = this;
      return new Promise(function (resolve, reject) {
        // 根据日期筛选当天的新增确诊 || 治愈 || 死亡 的数据
        var mapdays = _this.catedays.map(function (itemday) {
          var screendays = _this.newdiag.filter(function (item) {
            return moment(item.time).format('MM-DD') == itemday;
          });
          return screendays;
        });
        // log('筛选的数据')
        // log(mapdays)
        // 遍历6次，取当天的确诊 || 治愈 || 死亡 ：总和
        var maparr = [0, 1, 2, 3, 4, 5];
        var maplist = maparr.map(function (itemarr) {
          // 遍历取到diadata的值
          var disgarr = mapdays[itemarr].map(function (item) {
            return item.diadata;
          });
          // 找到vaule值
          var arrlist = [];
          disgarr.forEach(function (item) {
            for (var key in item) {
              arrlist.push(item[key]);
            }
          });
          //  计算确诊 || 治愈 || 死亡 ：总和
          var numdata = 0;
          arrlist.forEach(function (item) {
            numdata += item;
          });
          return numdata;
        });
        resolve(maplist);
      });
    } }]);return Linechart;}();


module.exports = Linechart;

/***/ }),
/* 217 */
/*!*******************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/line.json ***!
  \*******************************************************************/
/*! exports provided: data, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"data\":{\"LineA\":{\"chartData\":{\"categories\":[\"06-13\",\"06-14\",\"06-15\",\"06-16\",\"06-17\",\"06-18\"],\"series\":[{\"name\":\"新增确诊\",\"data\":[35,20,25,37,4,20]},{\"name\":\"新增治愈\",\"data\":[35,50,65,77,49,80]},{\"name\":\"新增死亡\",\"data\":[100,20,5,3,4,40]}]}}}}");

/***/ }),
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */
/*!**********************************************************************!*\
  !*** D:/Document/文档/HBuilderProjects/wx-xinguan/config/tablelist.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;} // 表格的数据
var _console = console,log = _console.log;var
Tablelist = /*#__PURE__*/function () {"use strict";
  // objlist：当天的新增确诊
  // numb：城市的数组下标
  // diagnosis:确诊
  // cureing：治愈
  // newdeath:死亡
  // city:城市
  function Tablelist(objlist, numb, diagnosis, cureing, newdeath, city) {_classCallCheck(this, Tablelist);
    this.objlist = objlist;
    this.numb = numb;
    this.diagnosis = diagnosis;
    this.cureing = cureing;
    this.newdeath = newdeath;
    this.city = city;
  }_createClass(Tablelist, [{ key: "tableIng", value: function tableIng()

    {var _this = this;
      return new Promise(function (resolve, reject) {
        // --------当天的新增确诊求和---------
        var newlying = [];
        _this.objlist.forEach(function (item) {
          newlying.push(item[_this.numb]);
        });
        // log(newlying)
        var newlydata = 0;
        newlying.forEach(function (item) {
          newlydata += item;
        });
        // log(newlydata)
        // --------累积确诊求和---------
        var accumulate = _this.diagnosis.map(function (item) {
          var arrlist = [];
          for (var key in item.diadata) {
            arrlist.push(item.diadata[key]);
          }
          return arrlist;
        });
        // log(accumulate)
        var mulateing = [];
        accumulate.forEach(function (item) {
          mulateing.push(item[_this.numb]);
        });
        var mulatedata = 0;
        mulateing.forEach(function (item) {
          mulatedata += item;
        });
        // log(mulatedata)
        // --------治愈求和---------
        var cumulativecure = _this.cureing.map(function (item) {
          var arrlist = [];
          for (var key in item.diadata) {
            arrlist.push(item.diadata[key]);
          }
          return arrlist;
        });

        var cumulativeing = [];
        cumulativecure.forEach(function (item) {
          cumulativeing.push(item[_this.numb]);
        });
        var cumulativedata = 0;
        cumulativeing.forEach(function (item) {
          cumulativedata += item;
        });
        // log(cumulativedata)
        // --------死亡求和---------
        var cumulativedeath = _this.newdeath.map(function (item) {
          var arrlist = [];
          for (var key in item.diadata) {
            arrlist.push(item.diadata[key]);
          }
          return arrlist;
        });

        var cudeath = [];
        cumulativedeath.forEach(function (item) {
          cudeath.push(item[_this.numb]);
        });
        var cudeathdata = 0;
        cudeath.forEach(function (item) {
          cudeathdata += item;
        });
        //------------组成一个对象返回去
        var tableobj = {
          'address': _this.city,
          'newly': newlydata,
          'accumulate': mulatedata,
          'cure': cumulativedata,
          'death': cudeathdata };

        resolve(tableobj);

      });
    } }]);return Tablelist;}();


module.exports = Tablelist;

/***/ })
]]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map